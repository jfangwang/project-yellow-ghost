{"version":3,"sources":["Firebase.js","Message.js","Messages.js","Camera.js","Navbar.js","Footer.js","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","storage","GoogleAuthProvider","Message","props","icon_class","friend","status","className","src","date","streak_emoji","Messages","loggedIn","Object","keys","friends","sort","map","key","k","Camera","webcamRef","React","useRef","id","ref","audio","mirrored","forceScreenshotSourceSize","screenshotFormat","screenshotQuality","videoConstraints","facingMode","faceMode","NavBar","useState","showProfileScreen","setShowProfileScreen","showAddFriendScreen","setShowAddFriendScreen","showLogin","setShowLogin","showSearch","setShowSearch","showTitle","setShowTitle","showAddFriend","setShowAddFriend","showNewChat","setShowNewChat","showMore","setShowMore","showClose","setShowClose","showFlipCam","setShowFlipCam","navTitle","setNavTitle","resetNav","disable_swiping","useEffect","index","onClick","pic","login","ProfileModal","name","email","received","sent","created","logout","AddFriend","strangers","everyone","edit_friends","style","backgroundColor","length","Friend","Stranger","Everyone","profile_pic_url","Footer","changeToIndex","color","BindKeyboardSwipeableViews","bindKeyboard","SwipeableViews","default_pic","App","set_device","state","width","height","setState","orientation","update","window","innerWidth","innerHeight","handleChangeIndex","check_user","onAuthStateChanged","user","this","displayName","photoURL","check_user_on_firebase","Date","toLocaleString","bind","user_doc","collection","doc","get","then","exists","data","pending","start_snapshot","c","set","total_sent","total_received","streak","streak_ref","last_time_stamp","snaps","update_people_list","end_snapshot","console","log","f","docs","forEach","includes","action","value","dict","new_friend_entry","signInWithPopup","result","signOut","addEventListener","e","setDisabledSwiping","disabled","enableMouseEvents","onChangeIndex","assign","position","top","left","minHeight","Helmet","content","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a89aac24.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';        // for authentication\nimport 'firebase/storage';     // for storage\nimport 'firebase/database';    // for realtime database\nimport 'firebase/firestore';   // for cloud firestore\nimport 'firebase/messaging';   // for cloud messaging\nimport 'firebase/functions';   // for cloud functions\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAzNigqy7stltnVUU8cAollxCxvW0CNBTE\",\n  authDomain: \"ghost-f8b34.firebaseapp.com\",\n  projectId: \"ghost-f8b34\",\n  storageBucket: \"ghost-f8b34.appspot.com\",\n  messagingSenderId: \"838623299070\",\n  appId: \"1:838623299070:web:b73429fee525b7c01cacaf\",\n  measurementId: \"G-85ZG5FVKQ4\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n// Google auth as a provider for this app, the popup\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { db, auth, storage, provider };","import React, { Component, useState, useEffect } from 'react';\nimport {auth, storage, db} from './Firebase.js';\nimport TimeAgo from 'react-timeago';\nimport firebase from 'firebase/app';\nimport './Messages.css';\n\n/*\n * Function - Message(sender_name)\n * @sender_name: Name of person who sent the image\n * Return: Loaded images requested from Firebase\n * \n * Description:\n * A request (/post/current_user/) is sent to Firebase to get current_user's received images.\n*/\n\nexport default function Message(props) {\n\tvar icon_class = \"message-\" + props.friend[\"status\"]\n\tvar status_dict = {\n\t\t[\"new-friend\"]: \"New Friend!\",\n\t\treceived: \"Received\",\n\t\tsent: \"Sent\",\n\t\topened: \"Opened\",\n\t\tpending: \"Pending\",\n\t\t[\"not-friends\"]: \"Unfriended You\",\n\t\tblocked: \"Blocked\",\n\t}\n\tvar status = status_dict[props.friend[\"status\"]]\n\treturn (\n\t\t\t<>\n\t\t\t<li className=\"list-container\">\n\t\t\t\t<div className=\"pic-container\">\n\t\t\t\t\t<img className=\"friend-profile-pic\" src={props.friend[\"profile_pic_url\"]}></img>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"friend-info\">\n\t\t\t\t\t<h3>{props.friend[\"name\"]}</h3>\n\t\t\t\t\t<div className=\"message-info\">\n\t\t\t\t\t\t<div className=\"message-info\">\n\t\t\t\t\t\t\t<div className={icon_class} />\n\t\t\t\t\t\t\t<h5>{status}</h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<h5>{props.friend[\"last_time_stamp\"] ? <> - <TimeAgo date={props.friend[\"last_time_stamp\"]} /> - </> : null}</h5>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h5>{props.friend[\"streak\"]}{props.streak_emoji}</h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"friend-info\">\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t\t\n\t\t\t</>\n\t)\n\n}\n","import React from 'react';\n// import React, { Component } from 'react';\nimport './Messages.css';\nimport Message from './Message';\n\n\nfunction Messages(props) {\n    return (\n    <div className=\"messages-screen\">\n\t\t\t<div className=\"navbar\">\n\t\t\t\t\t{/* Placeholder */}\n\t\t\t</div>\n\t\t\t<ul className=\"messages-list\">\n\t\t\t\t{props.loggedIn ? \n\t\t\t\t\tnull\n\t\t\t\t\t:<li className=\"welcome-statement\">Welcome to Project Yellow Ghost, a web app version of SnapChat. This was a project developed by Jonathan Wang\n\t\t\t\t\t\tand this was his final project for school. Right now, you are on a local guest account for you to try out. Feel free to sign in at the top if\n\t\t\t\t\t\tyou want to start using this product. Happy Snapping!\n\t\t\t\t\t</li>\n\t\t\t\t}\n\t\t\t\t{Object.keys(props.friends).sort().map((key) => (\n\t\t\t\t\t<Message\n\t\t\t\t\t\tfriend={props.friends[key]}\n\t\t\t\t\t\tstreak_emoji={props.streak_emoji}\n\t\t\t\t\t\tk={key}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t\t<div className=\"footer app-foot\">\n\t\t\t\t{/* Placeholder */}\n\t\t\t</div>\n    </div>\n    );\n}\n\nexport default Messages;","import React from 'react';\n// import React, { Component, useEffect, useState } from 'react';\nimport Webcam from \"react-webcam\";\nimport './Camera.css';\n// import {storage, db} from './Firebase.js';\n// import firebase from 'firebase/app';\n// import { v4 as uuid } from \"uuid\";\n\nexport default function Camera(props) {\n  const webcamRef = React.useRef(null);\n  // const capture = React.useCallback(\n  //   () => {\n  //     // const img = webcamRef.current.getScreenshot({width:props.width, height:props.height});\n  //     const img = webcamRef.current.getScreenshot();\n  //   },\n  //   [webcamRef]\n  // );\n  return (\n    <>\n    <div className=\"webcam-screen\">\n      <div className=\"navbar\">\n        {/* Placeholder */}\n      </div>\n      <Webcam\n        id=\"imageElement\"\n        className=\"image-desktop\"\n        ref={webcamRef}\n        audio={false}\n        mirrored={true}\n        forceScreenshotSourceSize={false}\n        screenshotFormat=\"image/png\"\n        screenshotQuality={1}\n        videoConstraints={{facingMode: props.faceMode}}\n        />\n      <div className=\"footer\">\n\t  \t  {/* Placeholder */}\n\t\t\t</div>\n    </div>\n    </>\n  );\n}\n","import React, { Component, useState, useEffect } from 'react';\nimport './Navbar.css';\nimport {auth, storage, db, provider} from './Firebase.js';\nimport firebase from 'firebase/app';\n\nfunction NavBar(props) {\n\t// Screens\n\tconst [showProfileScreen, setShowProfileScreen] = useState(false);\n\tconst [showAddFriendScreen, setShowAddFriendScreen] = useState(false);\n\t// Show/Hide Navbar contents\n\tconst [showLogin, setShowLogin] = useState(true);\n\tconst [showSearch, setShowSearch] = useState(true);\n\tconst [showTitle, setShowTitle] = useState(true);\n\tconst [showAddFriend, setShowAddFriend] = useState(true);\n\tconst [showNewChat, setShowNewChat] = useState(true);\n\tconst [showMore, setShowMore] = useState(false);\n\tconst [showClose, setShowClose] = useState(false);\n\tconst [showFlipCam, setShowFlipCam] = useState(null);\n\t// Navbar content\n\tconst [navTitle, setNavTitle] = useState(\"Chat\")\n\n\tconst toggleProfile = () => {\n\t\tsetShowProfileScreen(true);\n\t\tsetShowLogin(false);\n\t\tsetShowSearch(false);\n\t\tsetShowAddFriend(false);\n\t\tsetShowNewChat(false)\n\t\tsetShowMore(true);\n\t\tsetShowClose(true);\n\t\tsetNavTitle(\"Profile\");\n\t\tprops.disable_swiping(true);\n\t}\n\n\tconst toggleAddFriend = () => {\n\t\tsetShowAddFriendScreen(true);\n\t\tsetShowLogin(false);\n\t\tsetShowSearch(false);\n\t\tsetShowAddFriend(false);\n\t\tsetShowNewChat(false)\n\t\tsetShowMore(true);\n\t\tsetShowClose(true);\n\t\tsetNavTitle(\"Add Friends\");\n\t\tprops.disable_swiping(true);\n\t}\n\n\tconst resetNav = () => {\n\t\tsetShowProfileScreen(false);\n\t\tsetShowAddFriendScreen(false);\n\t\t// Navbar contents\n\t\tsetShowLogin(true);\n\t\tsetShowSearch(true);\n\t\tsetShowTitle(true);\n\t\tsetShowAddFriend(true);\n\t\tsetShowNewChat(true);\n\t\tsetShowMore(false);\n\t\tsetShowClose(false);\n\t\tsetNavTitle(\"Chat\");\n\t\tprops.disable_swiping(false);\n\t}\n\n\tuseEffect(() => {\n    // check_user();\n\t\t// console.log(\"index: \", props.index);\n\t\tif (props.index == 0) {\n\t\t\tsetShowNewChat(true);\n\t\t\tsetShowFlipCam(false);\n\t\t} else if (props.index == 1) {\n\t\t\tsetShowNewChat(false);\n\t\t\tsetShowFlipCam(true);\n\t\t}\n  },[props.index]);\n\n\treturn (\n\t\t<>\n\t\t<div className=\"navbar app-nav\">\n\t\t<div className=\"nav-box-1\">\n\t\t\t<ul>\n\t\t\t\t{showLogin ?\n\t\t\t\t\tprops.loggedIn ?\n\t\t\t\t\t\t<li><img className=\"nav-profile-pic\" onClick={toggleProfile} src={props.pic}/></li>\n\t\t\t\t\t\t: <li><a onClick={props.login}>Sign In</a></li>\n\t\t\t\t\t: null}\n\t\t\t\t\n\t\t\t\t{showClose ? \n\t\t\t\t\t<li><a onClick={resetNav}>Close</a></li>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t{showSearch ? <li><a>Search</a></li> : null}\n\t\t\t</ul>\n\t\t</div>\n\t\t<div className=\"nav-box-2\">\n\t\t\t{props.index == 0 ?\n\t\t\t\tshowTitle ? \n\t\t\t\t\t<h1>{navTitle}</h1>\n\t\t\t\t\t: null\n\t\t\t\t: null\n\t\t\t}\n\t\t\t{props.index == 1 ? \n\t\t\t\tshowTitle ? \n\t\t\t\t\t<h1>Camera</h1>\n\t\t\t\t\t: null\n\t\t\t\t: null\n\t\t\t}\n\t\t</div>\n\t\t<div className=\"nav-box-3\">\n\t\t\t\t<ul>\n\t\t\t\t\t{showAddFriend ? <li onClick={toggleAddFriend}><a>Add Friend</a></li> : null}\n\t\t\t\t\t{showNewChat ? <li><a>New Chat</a></li> : null}\n\t\t\t\t\t{showMore ? <li><a><b>. . .</b></a></li> : null}\n\t\t\t\t\t{showFlipCam ? <li><a>Flip Cam</a></li> : null}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t\t{showProfileScreen ? \n\t\t\t<ProfileModal\n\t\t\t// User Info\n\t\t\t\tpic={props.pic}\n\t\t\t\tname={props.name}\n\t\t\t\temail={props.email}\n\t\t\t\treceived={props.received}\n\t\t\t\tsent={props.sent}\n\t\t\t\tcreated={props.created}\n\t\t\t\t// functions\n\t\t\t\tresetNav={resetNav}\n\t\t\t\tlogout={props.logout}\n\t\t\t/>\n\t\t\t: null\n\t\t}\n\t\t{showAddFriendScreen ? \n\t\t\t<>\n\t\t\t\n\t\t\t<AddFriend\n\t\t\t\tfriends={props.friends}\n\t\t\t\tstrangers={props.strangers}\n\t\t\t\teveryone={props.everyone}\n\t\t\t\tedit_friends={props.edit_friends}\n\t\t\t/>\n\t\t\t{/* <div className=\"screen\">\n\t\t\t\t<div className=\"navbar\">\n\t\t\t\t</div>\n\t\t\t\t<button onClick={() => props.edit_friends(\"remove\", \"key\", \"value\")}>Remove</button>\n\t\t\t</div> */}\n\t\t\t\n\t\t\t</>\n\t\t\t: null\n\t\t}\n\t\t</>\n\t);\n}\n\nfunction ProfileModal(props) {\n\tconst logout = () => {\n\t\tprops.resetNav();\n\t\tprops.logout();\n\t}\n\treturn (\n\t\t<div className=\"screen\">\n\t\t\t<div className=\"navbar\">\n\t\t\t\t\t{/* Placeholder */}\n\t\t\t</div>\n\t\t\t<img src={props.pic} className=\"profile-pic\" />\n\t\t\t<h1>{props.name}</h1>\n\t\t\t<h3>{props.email}</h3>\n\t\t\t<h3>Received - {props.received} | {props.sent} - Sent</h3>\n\t\t\t<h3>Joined Project Yellow Ghost on {props.created}</h3>\n\t\t\t<h3>Created by Jonathan Wang</h3>\n\t\t\t<button onClick={logout} style={{backgroundColor: \"red\"}}><h1>Logout</h1></button>\n\t\t</div>\n\t)\n}\n\nfunction AddFriend(props) {\n\treturn (\n\t\t<div className=\"screen\">\n\t\t\t<div className=\"navbar\">\n\t\t\t\t\t{/* Placeholder */}\n\t\t\t</div>\n\t\t\t<h1>Friends ({Object.keys(props.friends).length})</h1>\n\t\t\t<ul className=\"list-container\">\n\t\t\t\t{/* <h3>List: {Object.keys(props.friends)}</h3> */}\n\t\t\t\t{Object.keys(props.friends).sort().map((key) => (\n\t\t\t\t\t<Friend\n\t\t\t\t\t\tfriends={props.friends}\n\t\t\t\t\t\tk={key}\n\t\t\t\t\t\tedit_friends={props.edit_friends}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t\t<h1>Strangers ({Object.keys(props.strangers).length})</h1>\n\t\t\t<ul className=\"list-container\">\n\t\t\t\t{/* <h3>List: {Object.keys(props.strangers)}</h3> */}\n\t\t\t\t{Object.keys(props.strangers).sort().map((key) => (\n\t\t\t\t\t<Stranger\n\t\t\t\t\t\tstrangers={props.strangers}\n\t\t\t\t\t\tk={key}\n\t\t\t\t\t\tedit_friends={props.edit_friends}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t\t<h1>Everyone ({Object.keys(props.everyone).length})</h1>\n\t\t\t<ul className=\"list-container\">\n\t\t\t\t{/* <h3>List: {Object.keys(props.strangers)}</h3> */}\n\t\t\t\t{Object.keys(props.everyone).sort().map((key) => (\n\t\t\t\t\t<Everyone\n\t\t\t\t\t\teveryone={props.everyone}\n\t\t\t\t\t\tk={key}\n\t\t\t\t\t\tedit_friends={props.edit_friends}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t\t<div className=\"footer\">\n\t\t\t\t{/* Placeholder */}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nfunction Friend(props) {\n\tvar friends = props.friends;\n\tvar key = props.k;\n\n\treturn (\n\t\t<>\n\t\t\t<li className=\"item-container\">\n\t\t\t\t<div className=\"pic-container\">\n\t\t\t\t\t<img className=\"friend-profile-pic\" src={friends[key].profile_pic_url}/>\n\t\t\t\t</div>\t\n\t\t\t\t<div className=\"friend-info\">\n\t\t\t\t\t<h2>{friends[key].name}</h2>\n\t\t\t\t\t<p>{key}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"friend-button\">\n\t\t\t\t\t<button onClick={() => props.edit_friends(\"remove\", key, friends[key])}>Remove</button>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t</>\n\t)\n}\n\nfunction Stranger(props) {\n\tvar strangers = props.strangers;\n\tvar key = props.k;\n\n\treturn (\n\t\t<>\n\t\t\t<li className=\"item-container\">\n\t\t\t\t<div className=\"pic-container\">\n\t\t\t\t\t<img className=\"friend-profile-pic\" src={strangers[key].profile_pic_url}/>\n\t\t\t\t</div>\t\n\t\t\t\t<div className=\"friend-info\">\n\t\t\t\t\t<h2>{strangers[key].name}</h2>\n\t\t\t\t\t<p>{key}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"friend-button\">\n\t\t\t\t\t<button onClick={() => props.edit_friends(\"add\", key, strangers[key])}>Add</button>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t</>\n\t)\n}\n\nfunction Everyone(props) {\n\tvar everyone = props.everyone;\n\tvar key = props.k;\n\n\treturn (\n\t\t<>\n\t\t\t<li className=\"item-container\">\n\t\t\t\t<div className=\"pic-container\">\n\t\t\t\t\t<img className=\"friend-profile-pic\" src={everyone[key].profile_pic_url}/>\n\t\t\t\t</div>\t\n\t\t\t\t<div className=\"friend-info\">\n\t\t\t\t\t<h2>{everyone[key].name}</h2>\n\t\t\t\t\t<p>{key}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"friend-button\">\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t</>\n\t)\n}\n\nexport {NavBar, ProfileModal, AddFriend}","import React from 'react'\nimport './Footer.css';\n\nexport default function Footer(props) {\n  return (\n    <>\n\t\t<div className=\"footer app-foot\">\n\t\t\t<button onClick={() => props.changeToIndex(0)}>{props.index === 0 ? <h1 style={{color: \"DodgerBlue\"}}>Messages</h1> : <h1>Messages</h1>}</button>\n\t\t\t<button onClick={() => props.changeToIndex(1)}>{props.index === 1 ? <h1 style={{color: \"Gold\"}}>Camera</h1> : <h1>Camera</h1>}</button>\n\t\t</div>\n\t\t</>\n  )\n}\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport SwipeableViews from 'react-swipeable-views';\nimport { bindKeyboard } from 'react-swipeable-views-utils';\nimport {auth, db, provider} from './Firebase.js';\nimport firebase from 'firebase/app';\nimport './App.css';\nimport Messages from './Messages.js';\nimport Camera from './Camera.js';\nimport {NavBar} from './Navbar.js';\nimport Footer from './Footer.js';\n\n// All the firebase calls will occur here to minimize usage\n\nconst BindKeyboardSwipeableViews = bindKeyboard(SwipeableViews);\nvar default_pic = \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\"\n// var dummy_dict = {\n//   email: \"Guest@project-yellow-ghost.com\",\n//   name:\"Guest\",\n//   photoURL: default_pic,\n//   streak_emoji:\"\\u{1F525}\",\n//   imgs_sent: 0,\n//   imgs_received: 0,\n//   friends: ['Guest@project-yellow-ghost.com'],\n// }\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // For swiping screen\n      index: 0,\n      height: window.innerHeight,\n      width: window.innerWidth,\n      orientation: \"Landscape\",\n      disable_swiping: false,\n      // User Info\n      loggedIn: null,\n      name: null,\n      email: null,\n      pic: null,\n      received: null,\n      sent: null,\n      streak_emoji: null,\n      created:null,\n      pending: {},\n      friends: [],\n      strangers: [],\n      everyone: [],\n\n    }\n\n    this.check_user = this.check_user.bind(this);\n    window.addEventListener(\"resize\", this.update);\n    window.addEventListener(\"beforeunload\", this.end_snapshot);\n    window.addEventListener(\"onbeforeunload\", this.end_snapshot);\n  }\n\n  set_device = () => {\n    if (this.state.width > this.state.height) {\n      this.setState({\n        orientation: \"Landscape\"\n      })\n    } else {\n      this.setState({\n        orientation: \"Mobile\"\n      })\n    }\n  }\n  update = () => {\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight\n    },this.set_device)\n  };\n  handleChangeIndex = index => {\n    this.setState({\n      index,\n    });\n  };\n  changeToIndex(e) {\n    this.setState({\n      index: e,\n    })\n  }\n  setDisabledSwiping(e) {\n    this.setState({\n      disable_swiping: e,\n    })\n  }\n\n  \n  check_user = () => {\n\t\tfirebase.auth().onAuthStateChanged(function(user) {\n\t\t\tif (user) {\n        this.setState({\n          loggedIn: true,\n          name: user.displayName,\n          pic: user.photoURL,\n          email: user.email,\n        }, this.check_user_on_firebase)\n\t\t\t} else {\n\t\t\t\tthis.setState({\n          loggedIn: false,\n          name: \"Guest\",\n          email: \"Guest@Guest.com\",\n          pic: default_pic,\n          sent: 0,\n          received: 0,\n          streak_emoji: \"\\u{1F525}\",\n          created: new Date().toLocaleString(),\n        })\n\t\t\t}\n\t\t}.bind(this))\n\t}\n\n  check_user_on_firebase = () => {\n    const user_doc = db.collection(\"Users\").doc(this.state.email);\n    user_doc.get().then((doc) => {\n      if (!doc.exists) {\n        // New User\n        const c = new Date().toLocaleString();\n        user_doc.set({\n          created: c,\n          name: this.state.name,\n          profile_pic_url: this.state.pic,\n          streak_emoji:  \"\\u{1F525}\",\n          total_sent: 0,\n          total_received: 0,\n          pending: {},\n          friends: {\n            [this.state.email]: {\n                created: c,\n                profile_pic_url: this.state.pic,\n                name: this.state.name,\n                status: \"new-friend\",\n                streak: 0,\n                streak_ref: null,\n                sent: 0,\n                received: 0,\n                last_time_stamp: null,\n                snaps: []\n            }\n          },\n        })\n        this.setState({\n          received: 0,\n          sent: 0,\n          streak_emoji: \"\\u{1F525}\",\n        }, this.start_snapshot)\n      } else {\n        // User has logged in before\n        this.setState({\n          name: doc.data()[\"name\"],\n          pic: doc.data()[\"profile_pic_url\"],\n          received: doc.data()[\"total_received\"],\n          sent: doc.data()[\"total_sent\"],\n          streak_emoji: doc.data()[\"streak_emoji\"],\n          created: doc.data()[\"created\"],\n          friends: doc.data()[\"friends\"],\n          pending: doc.data()[\"pending\"],\n        }, this.start_snapshot)\n      }\n    })\n  }\n  start_snapshot = () => {\n    this.update_people_list()\n    // const user_doc = db.collection(\"Users\").doc(this.state.email);\n    // user_doc.onSnapshot((doc) => {\n    //   this.setState({\n    //     name: doc.data()[\"name\"],\n    //     pic: doc.data()[\"profile_pic_url\"],\n    //     received: doc.data()[\"total_received\"],\n    //     sent: doc.data()[\"total_sent\"],\n    //     streak_emoji: doc.data()[\"emoji\"],\n    //     created: doc.data()[\"created\"],\n    //     friends: doc.data()[\"friends\"],\n    //     pending: doc.data()[\"pending\"],\n    //   })\n    //   console.log(\"snapshot created\")\n    // }, (error) => {\n    //   alert(\"Problem with real time firebase, cannot get live updates.\");\n    //   console.log(error);\n    // })\n  }\n  end_snapshot = () => {\n    this.start_snapshot();\n    console.log(\"ended snapshot\");\n  }\n  // Updates user's Friends, Strangers, and Everyone list\n  update_people_list = () => {\n    var f = {}\n    var strangers = {}\n    var everyone = {}\n    db.collection(\"Users\").get().then((doc) => {\n      doc.docs.forEach((user) => {\n        // console.log(\"This.friends: \", this.state.friends, user.id);\n        if (!Object.keys(this.state.friends).includes(user.id)) {\n          strangers[user.id] = user.data()\n        } else {\n          f[user.id] = user.data()\n        }\n        everyone[user.id] = user.data();\n      })\n      // console.log(\"Friends: \", friends)\n      // console.log(\"Strangers: \", strangers)\n      // console.log(\"Everyone: \", everyone)\n      this.setState({\n        strangers: strangers,\n        everyone: everyone,\n      })\n    })\n  }\n  // Add or Remove Friend from this.state.friends\n  edit_friends = (action, friend, value) => {\n    // console.log(\"action\", action);\n    // console.log(\"friend\", friend);\n    // console.log(\"value\", value);\n    const user_doc = db.collection(\"Users\").doc(this.state.email);\n    var dict = this.state.friends;\n    if (action === \"add\") {\n      var new_friend_entry = {\n        created: value.created,\n        profile_pic_url: value.profile_pic_url,\n        name: value.name,\n        status: \"new-friend\",\n        streak: 0,\n        streak_ref: null,\n        sent: 0,\n        received: 0,\n        last_time_stamp: null,\n        snaps: []\n      }\n      dict[friend] = new_friend_entry;\n      // Add to firestore\n      user_doc.update({friends: dict})\n      // Update state for user\n      this.setState({\n        friends: dict,\n      }, this.update_people_list)\n    } else if (action === \"remove\") {\n      delete dict[friend]\n      user_doc.update({friends: dict})\n      this.setState({\n        friends: dict,\n      }, this.update_people_list)\n    }\n  }\n\n  login = () => {\n    auth.signInWithPopup(provider)\n    .then((result) => {\n      this.setState({\n        loggedIn: true,\n        name: result.user.displayName,\n        email: result.user.email,\n        pic: result.user.photoURL,\n      })\n    })\n  }\n\tlogout = () => {\n    firebase.auth().signOut()\n    this.setState({\n      loggedIn: false,\n      name: \"Guest\",\n      email: \"Guest@Guest.com\",\n      pic: default_pic,\n      sent: 0,\n      received: 0,\n      pending: {},\n      friends: [],\n      strangers: [],\n      everyone: [],\n    })\n  }\n\n  componentDidMount() {\n    console.log(\"Mounted\");\n    this.check_user()\n  }\n\n  render() {\n    const { index } = this.state;\n    return (\n      <>\n      <NavBar\n        index={index}\n        // Functions\n        login={this.login.bind(this)}\n        logout={this.logout.bind(this)}\n        disable_swiping={this.setDisabledSwiping.bind(this)}\n        edit_friends={this.edit_friends.bind(this)}\n        // User Info\n        loggedIn={this.state.loggedIn}\n        name={this.state.name}\n        email={this.state.email}\n        pic={this.state.pic}\n        received={this.state.received}\n        sent={this.state.sent}\n        created={this.state.created}\n        pending={this.state.pending}\n        friends={this.state.friends}\n        strangers={this.state.strangers}\n        everyone={this.state.everyone}\n      />\n      <BindKeyboardSwipeableViews disabled={this.state.disable_swiping} enableMouseEvents index={index} onChangeIndex={this.handleChangeIndex} style={Object.assign({width: this.state.width, height: this.state.height, position: 'absolute', top: '0%', left: '0%'})}>\n        <div style={Object.assign({backgroundColor: 'white', minHeight: '100vh', width: '100%'})}>\n          <Helmet>\n            <meta name=\"viewport\" content=\"height=device-height, width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"></meta>\n          </Helmet>\n          <Messages\n            // User Info\n            loggedIn={this.state.loggedIn}\n            friends={this.state.friends}\n            streak_emoji={this.state.streak_emoji}\n          />\n        </div>\n        <div style={Object.assign({backgroundColor: 'Plum'})} >\n          <Helmet>\n            <meta name=\"viewport\" content=\"height=device-height, width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=yes\"></meta>\n          </Helmet>\n          <Camera\n            index={index}\n            changeToIndex={this.changeToIndex.bind(this)}\n            disable_swiping={this.setDisabledSwiping.bind(this)}\n          />\n        </div>\n      </BindKeyboardSwipeableViews>\n      <Footer\n        index={index}\n        changeToIndex={this.changeToIndex.bind(this)}\n      />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Router, Route, Switch } from \"react-router\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}