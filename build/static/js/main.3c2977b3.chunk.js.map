{"version":3,"sources":["Firebase.js","images/black-checkmark.png","Friends.js","MessagesNavbar.js","Message.js","Messages.js","CameraNavbar.js","Camera.js","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","provider","GoogleAuthProvider","Friends","props","useState","removed","setRemoved","friends","collection","doc","user_email","className","src","friend_pic","alt","friend_name","friend_username","onClick","friends_list","splice","indexOf","update","SendFriends","added","setAdded","arr","send_list","handle_send_list","checkmark","push","Strangers","stranger_pic","stranger_name","stranger_username","Everyone","MessagesNavbar","show_friends","setShow_Friends","user_name","login","user_pic","logout","get_friends_list","user_strangers_dict","user_friends_dict","everyone_dict","type","placeholder","length","map","x","photoURL","name","email","Message","status","setStatus","time","setTime","update_messages","orderBy","onSnapshot","snapshot","i","docs","data","sender_email","toDate","toUTCString","status_output","icon","img","setImg","imgid","setImgid","useEffect","delete","then","console","log","catch","error","sender","get","ref","url","to","id","profile_url","sender_name","date","locale","streak_num","streak_emoji","Messages","get_all_users","logged_in","CameraNavbar","Camera","setSend_list","image","setImage","faceMode","screen","setScreen","webcamRef","React","useRef","setAspectRatio","capture","useCallback","current","getScreenshot","e","forEach","element","mobile","audio","mirrored","forceScreenshotSourceSize","screenshotFormat","screenshotQuality","videoConstraints","facingMode","classname","user","currentUser","uuid","displayName","to_users","putString","on","child","getDownloadURL","user_temp","set","imageURL","avatarURL","read","timeStamp","FieldValue","serverTimestamp","BindKeyboardSwipeableViews","bindKeyboard","SwipeableViews","default_pic","dummy_dict","imgs_sent","imgs_received","App","set_device","state","width","height","setState","window","innerWidth","innerHeight","signInWithPopup","result","user_friends","message","signOut","check_user","onAuthStateChanged","this","bind","exists","friends_meta","strangers_meta","everyone_meta","meta_idx","strangers_idx","everyone_idx","includes","index","addEventListener","enableMouseEvents","style","Object","assign","position","top","left","backgroundColor","minHeight","Helmet","content","Component","ReactDOM","render","document","getElementById"],"mappings":"yUAoBMA,G,0CADcC,IAASC,cAVN,CACrBC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIMC,aACjBC,EAAOV,IAASU,OAChBC,EAAUX,IAASW,UAEnBC,EAAW,IAAIZ,IAASU,KAAKG,mB,sBCxBpB,MAA0B,4C,OCKzC,SAASC,EAAQC,GAEhB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAUpB,EAAGqB,WAAW,SAASC,IAAIN,EAAMO,YAe9C,OACI,qBAAIC,UAAU,sBAAd,UACF,sBAAKA,UAAU,YAAf,UACA,qBAAKA,UAAU,iBAAiBC,IAAKT,EAAMU,WAAYC,IAAI,WAC3D,qBAAIH,UAAU,eAAd,UACE,6BAAKR,EAAMY,cACX,4BAAIZ,EAAMa,wBAGZ,qBAAKL,UAAU,YAAf,SACCN,EAAU,mBAAGM,UAAU,UAAb,SAAuB,2CAAsB,wBAAQM,QAjBtD,WACe,kCAAzBd,EAAMa,kBALVb,EAAMe,aAAaC,OAAOhB,EAAMe,aAAaE,QAAQjB,EAAMa,iBAAkB,GAC7ET,EAAQc,OAAO,CAACd,QAASJ,EAAMe,gBAO/BZ,GAAW,IAaiD,SAAyB,8CAMvF,SAASgB,EAAYnB,GAEpB,MAA0BC,oBAAS,GAAnC,mBAAOmB,EAAP,KAAcC,EAAd,KACgBrC,EAAGqB,WAAW,SAASC,IAAIN,EAAMO,YAe9C,OACD,mCACCa,EACA,qBAAIZ,UAAU,sBAAsBM,QAVjB,WACrBO,GAAS,GACT,IAAIC,EAAMtB,EAAMuB,UAChBD,EAAIN,OAAOM,EAAIL,QAAQjB,EAAMa,iBAAkB,GAC/Cb,EAAMwB,iBAAiBF,IAMrB,UACA,sBAAKd,UAAU,YAAf,UACA,qBAAKA,UAAU,iBAAiBC,IAAKT,EAAMU,WAAYC,IAAI,WAC3D,oBAAIH,UAAU,eAAd,SACE,oBAAIA,UAAU,WAAd,SAA0BR,EAAMY,mBAIlC,qBAAKJ,UAAU,YAAf,SACA,qBAAKA,UAAU,2BAAf,SAA0C,qBAAKA,UAAU,YAAYC,IAAKgB,EAAWd,IAAI,kBAI1F,qBAAIH,UAAU,sBAAsBM,QA7BnB,WAClBO,GAAS,GACT,IAAIC,EAAMtB,EAAMuB,UAChBD,EAAII,KAAK1B,EAAMa,iBACfb,EAAMwB,iBAAiBF,IAyBtB,UACC,sBAAKd,UAAU,YAAf,UACA,qBAAKA,UAAU,iBAAiBC,IAAKT,EAAMU,WAAYC,IAAI,WAC3D,oBAAIH,UAAU,eAAd,SACE,6BAAKR,EAAMY,mBAIb,qBAAKJ,UAAU,YAAf,SACA,qBAAKA,UAAU,oBAAf,SAAmC,qBAAKA,UAAU,YAAYC,IAAKgB,EAAWd,IAAI,oBAQtF,SAASgB,EAAU3B,GAGlB,MAA0BC,oBAAS,GAAnC,mBAAOmB,EAAP,KAAcC,EAAd,KACMjB,EAAUpB,EAAGqB,WAAW,SAASC,IAAIN,EAAMO,YAc/C,OACC,qBAAIC,UAAU,sBAAd,UACI,sBAAKA,UAAU,YAAf,UACA,qBAAKA,UAAU,iBAAiBC,IAAKT,EAAM4B,aAAcjB,IAAI,WAC7D,qBAAIH,UAAU,eAAd,UACE,6BAAKR,EAAM6B,gBACX,4BAAI7B,EAAM8B,0BAGZ,qBAAKtB,UAAU,YAAf,SACEY,EAAQ,mBAAGZ,UAAU,QAAb,SAAqB,yCAAoB,wBAAQM,QAjBjD,WACa,kCAAzBd,EAAMa,kBALVb,EAAMe,aAAaW,KAAK1B,EAAM8B,mBAC9B1B,EAAQc,OAAO,CAACd,QAASJ,EAAMe,gBAO/BM,GAAS,IAagD,SAA2B,2CAMtF,SAASU,EAAS/B,GAEf,OACC,qBAAIQ,UAAU,sBAAd,UACI,sBAAKA,UAAU,YAAf,UACA,qBAAKA,UAAU,iBAAiBC,IAAKT,EAAM4B,aAAcjB,IAAI,WAC7D,qBAAIH,UAAU,eAAd,UACE,6BAAKR,EAAM6B,gBACX,4BAAI7B,EAAM8B,0BAGZ,qBAAKtB,UAAU,iBCnIR,SAASwB,EAAehC,GACtC,MAAwCC,oBAAS,GAAjD,mBAAOgC,EAAP,KAAqBC,EAArB,KAWA,OACC,qCACGD,EAuBD,KAtBF,sBAAKzB,UAAU,SAAf,UACA,qBAAKA,UAAU,YAAf,SACC,+BACC,6BACqB,SAAnBR,EAAMmC,UACP,mBAAGrB,QAASd,EAAMoC,MAAlB,qBACA,qBAAK5B,UAAU,cAAcC,IAAKT,EAAMqC,SAAUvB,QAASd,EAAMsC,OAAQ3B,IAAI,sBAG9E,6BAAI,8CAGN,qBAAKH,UAAU,YAAf,SACC,wCAED,qBAAKA,UAAU,YAAf,SACE,+BACC,6BAAI,mBAAGM,QA7BiB,WAC3Bd,EAAMuC,mBACNL,GAAgB,IA2BT,0BACJ,6BAAI,mDAKLD,GAA6C,MAA7BjC,EAAMwC,qBACG,MAA3BxC,EAAMyC,mBAAoD,MAAvBzC,EAAM0C,cACzC,sBAAKlC,UAAU,cAAf,UACC,sBAAKA,UAAU,aAAf,UACC,qBAAKA,UAAU,YAAf,SAA2B,6BAAI,6BAAI,mBAAGM,QAnCb,WAC3Bd,EAAMuC,mBACNL,GAAgB,IAiCqB,SAAiC,8CACpE,qBAAK1B,UAAU,YAAf,SAA2B,+CAC3B,qBAAKA,UAAU,YAAf,SAA2B,6BAAI,6BAAI,4BAAG,iDAEvC,sBAAKA,UAAU,WAAf,UACC,qBAAKA,UAAU,aAAf,SAA4B,uBAAOmC,KAAK,SAASC,YAAY,mBAC7D,qBAAKpC,UAAU,mBAAf,SAAkC,qBAAIA,UAAU,YAAd,wBAAsCR,EAAMwC,oBAAoBK,OAAhE,SAClC,oBAAIrC,UAAU,0BAAd,SACCR,EAAMwC,oBAAoBM,KAAI,SAACC,GAAD,OAC9B,cAACpB,EAAD,CACCC,aAAcmB,EAAEC,SAChBnB,cAAekB,EAAEE,KACjBnB,kBAAmBiB,EAAEG,MACrBrC,gBAAiBkC,EAAEG,MACnBnC,aAAcf,EAAMe,aACpBR,WAAYP,EAAMO,WAClBgC,iBAAkBvC,EAAMuC,wBAI1B,qBAAK/B,UAAU,mBAAf,SAAkC,qBAAIA,UAAU,YAAd,sBAAoCR,EAAMyC,kBAAkBI,OAA5D,SAClC,oBAAIrC,UAAU,0BAAd,SACCR,EAAMyC,kBAAkBK,KAAI,SAACC,GAAD,OAC5B,cAAChD,EAAD,CACCW,WAAYqC,EAAEC,SACdpC,YAAamC,EAAEE,KACfpC,gBAAiBkC,EAAEG,MACnBnC,aAAcf,EAAMe,aACpBR,WAAYP,EAAMO,WAClBgC,iBAAkBvC,EAAMuC,wBAI1B,qBAAK/B,UAAU,mBAAf,SAAkC,qBAAIA,UAAU,YAAd,uBAAqCR,EAAM0C,cAAcG,OAAzD,SAClC,oBAAIrC,UAAU,0BAAd,SACCR,EAAM0C,cAAcI,KAAI,SAACC,GAAD,OACxB,cAAChB,EAAD,CAAUH,aAAcmB,EAAEC,SACzBnB,cAAekB,EAAEE,KACjBnB,kBAAmBiB,EAAEG,aAGvB,qBAAK1C,UAAU,qBAKd,Q,aC7EU,SAAS2C,EAAQnD,GAI5B,MAA4BC,mBAAS,YAArC,mBAAOmD,EAAP,KAAeC,EAAf,KACA,EAAwBpD,mBAAS,GAAjC,mBAAOqD,EAAP,KAAaC,EAAb,KACA,EAA4BtD,mBAAS,IAArC,mBAEMuD,GAFN,UAEwB,WACpBxE,EAAGqB,WAAW,SACbC,IAAIN,EAAMO,YACVF,WAAW,YACXoD,QAAQ,YAAa,QACrBC,YAAW,SAACC,GAGT,IAFA,IAAIC,EAAI,EAEDA,EAAID,EAASE,KAAKhB,QAAUc,EAASE,KAAKD,GAAGE,OAAjB,OAAoC9D,EAAM+D,cAAgBH,GAAQ,EACjGA,EAAID,EAASE,KAAKhB,QACdc,EAASE,KAAKD,GAAGE,OAAjB,OAAoC9D,EAAM+D,cAC1CV,EAAU,YACkC,MAAxCM,EAASE,KAAKD,GAAGE,OAAjB,WACAP,EAAQI,EAASE,KAAKD,GAAGE,OAAjB,UAAqCE,SAASC,gBAM9DZ,EAAU,iBAKlBa,EAAgB,4BAAId,IACpBe,EAAO,qBAAK3D,UAAU,qBAEX,aAAX4C,GACAe,EAAO,qBAAK3D,UAAU,gBACtB0D,EAAgB,mBAAG1D,UAAU,MAAb,SAAmB,4BAAI4C,OACrB,aAAXA,EACPe,EAAO,qBAAK3D,UAAU,qBACJ,SAAX4C,EACPe,EAAO,qBAAK3D,UAAU,iBACJ,WAAX4C,IACPe,EAAO,qBAAK3D,UAAU,oBAG1B,MAAsBP,mBAAS,MAA/B,mBAAOmE,EAAP,KAAYC,EAAZ,KACA,EAA0BpE,mBAAS,MAAnC,mBAAOqE,EAAP,KAAcC,EAAd,KA6EA,OAJAC,qBAAU,WACNhB,OAIA,mCACCY,EAAM,qBAAK5D,UAAU,mBAAmBM,QAtC/B,WACVuD,EAAO,MACKrF,EAAGqB,WAAW,SAASC,IAAIN,EAAMO,YAAYF,WAAW,YAAYC,IAAIgE,GAChFG,SAASC,MAAK,WACdC,QAAQC,IAAI,uBACbC,OAAM,SAACC,GACNH,QAAQC,IAAI,4BAA6BE,MAE7CtB,IACA,IAAMuB,EAAS/F,EAAGqB,WAAW,SAASC,IAAIN,EAAM+D,cAAc1D,WAAW,QAAQC,IAAIgE,GACrFS,EAAOC,MAAMN,MAAK,SAACpE,GACf,GAA+B,GAA3BA,EAAIwD,OAAJ,GAAiBjB,OACjBkC,EAAON,SAASC,MAAK,WACjBC,QAAQC,IAAI,oDACbC,OAAM,SAACC,GACNH,QAAQC,IAAI,yCA7BxBhF,EAAQqF,IAAR,gBAAqBX,IAASG,SAC7BC,MAAK,SAACQ,GACHP,QAAQC,IAAI,yBAA0BN,MAEzCO,OAAM,SAACC,GACJH,QAAQC,IAAI,mBAAoBN,MAEpCtF,EAAGqB,WAAW,SAASC,IAAIgE,GAAOG,SAASC,MAAK,WAC9CC,QAAQC,IAAI,6BACXC,OAAM,SAACC,GACRH,QAAQG,MAAM,4BAA6BA,UAsBlC,CAEH,IACIxD,EAAMhB,EAAIwD,OAAJ,GACVxC,EAAIN,OAAOM,EAAIL,QAAQjB,EAAMO,YAAa,GAC1CwE,EAAO7D,OAAO,CAACiE,GAAI7D,IAAMoD,MAAK,WAC1BC,QAAQC,IAAI,4BACbC,OAAM,SAACC,GACNH,QAAQC,IAAI,0BAA2BE,WAY5C,SAAkD,qBAAKM,GAAG,QAAQ5E,UAAU,gBAAgBC,IAAK2D,MACpG,qBAAI5D,UAAU,kBAAkBM,QA9E3B,WACT6D,QAAQC,IAAI,eAAgB5E,EAAMO,YAClCvB,EAAGqB,WAAW,SACbC,IAAIN,EAAMO,YACVF,WAAW,YACXoD,QAAQ,YAAa,QACrBuB,MAAMN,MAAK,SAACf,GAET,IADA,IAAIC,EAAI,EACDA,EAAID,EAASE,KAAKhB,QAAUc,EAASE,KAAKD,GAAGE,OAAjB,OAAoC9D,EAAM+D,cAAgBH,GAAQ,EACjGA,EAAID,EAASE,KAAKhB,QACdc,EAASE,KAAKD,GAAGE,OAAjB,OAAoC9D,EAAM+D,aACX,MAA3BJ,EAASE,KAAKD,GAAGE,SACjBO,EAAOV,EAASE,KAAKD,GAAGE,OAAjB,UACPS,EAASZ,EAASE,KAAKD,GAAGE,OAAjB,KAMjBT,EAAU,gBA2Dd,UACI,qBAAK7C,UAAU,iBAAiBC,IAAKT,EAAMqF,YAAa1E,IAAI,WAC5D,qBAAIH,UAAU,eAAd,UACI,6BAAKR,EAAMsF,cACX,sBAAK9E,UAAU,mBAAf,UACK2D,EACAD,EACQ,GAARZ,EAAY,4BAAG,cAAC,IAAD,CAAciC,KAAMjC,EAAMkC,OAAO,YAAgB,KAChExF,EAAMyF,WAAa,EAAI,8BAAIzF,EAAMyF,WAAYzF,EAAM0F,gBAAoB,gBCzGjFC,MAvCf,SAAkB3F,GACd,OACA,sBAAKQ,UAAU,kBAAf,UACI,cAACwB,EAAD,CACIzB,WAAYP,EAAMO,WAClB4B,UAAWnC,EAAMmC,UACjBE,SAAUrC,EAAMqC,SAChBD,MAAOpC,EAAMoC,MACbE,OAAQtC,EAAMsC,OACdG,kBAAmBzC,EAAMyC,kBACzBD,oBAAqBxC,EAAMwC,oBAC3BE,cAAe1C,EAAM0C,cACrBH,iBAAkBvC,EAAMuC,iBACxBqD,cAAe5F,EAAM4F,cACrB7E,aAAcf,EAAMe,aACpB8E,UAAW7F,EAAM6F,YAErB,qBAAIrF,UAAU,gBAAd,UACCR,EAAM6F,UAAY,KACnB,oBAAIrF,UAAU,oBAAd,+TAKCR,EAAMyC,kBAAkBK,KAAI,SAACC,GAAD,OACzB,cAACI,EAAD,CACIY,aAAchB,EAAEG,MAChBmC,YAAatC,EAAEC,SACfsC,YAAavC,EAAEE,KACf1C,WAAYP,EAAMO,WAClBmF,aAAc1F,EAAM0F,aACpBG,UAAW7F,EAAM6F,sB,kCC/BlB,SAASC,EAAa9F,GACjC,MAAwCC,oBAAS,GAAjD,mBAAOgC,EAAP,KAAqBC,EAArB,KAWH,OACC,qCACGD,EAoBD,KAnBF,sBAAKzB,UAAU,gBAAf,UACA,qBAAKA,UAAU,YAAf,SACC,+BACC,6BACqB,SAAnBR,EAAMmC,UACP,mBAAGrB,QAASd,EAAMoC,MAAlB,qBACA,qBAAK5B,UAAU,cAAcC,IAAKT,EAAMqC,SAAUvB,QAASd,EAAMsC,OAAQ3B,IAAI,sBAG9E,6BAAI,8CAGN,qBAAKH,UAAU,YAAf,SACE,+BACC,6BAAI,mBAAGM,QA1BiB,WAC3Bd,EAAMuC,mBACNL,GAAgB,IAwBT,0BACJ,6BAAI,mDAKLD,GAA6C,MAA7BjC,EAAMwC,qBACG,MAA3BxC,EAAMyC,mBAAoD,MAAvBzC,EAAM0C,cACzC,sBAAKlC,UAAU,cAAf,UACC,sBAAKA,UAAU,aAAf,UACC,qBAAKA,UAAU,YAAf,SAA2B,6BAAI,6BAAI,mBAAGM,QAhCb,WAC3Bd,EAAMuC,mBACNL,GAAgB,IA8BqB,SAAiC,8CACpE,qBAAK1B,UAAU,YAAf,SAA2B,+CAC3B,qBAAKA,UAAU,YAAf,SAA2B,6BAAI,6BAAI,4BAAG,iDAEvC,sBAAKA,UAAU,WAAf,UACC,qBAAKA,UAAU,aAAf,SAA4B,uBAAOmC,KAAK,SAASC,YAAY,mBAC7D,qBAAKpC,UAAU,mBAAf,SAAkC,qBAAIA,UAAU,YAAd,wBAAsCR,EAAMwC,oBAAoBK,OAAhE,SAClC,oBAAIrC,UAAU,0BAAd,SACCR,EAAMwC,oBAAoBM,KAAI,SAACC,GAAD,OAC9B,cAACpB,EAAD,CACCC,aAAcmB,EAAEC,SAChBnB,cAAekB,EAAEE,KACjBnB,kBAAmBiB,EAAEG,MACrBrC,gBAAiBkC,EAAEG,MACnBnC,aAAcf,EAAMe,aACpBR,WAAYP,EAAMO,WAClBgC,iBAAkBvC,EAAMuC,wBAI1B,qBAAK/B,UAAU,mBAAf,SAAkC,qBAAIA,UAAU,YAAd,sBAAoCR,EAAMyC,kBAAkBI,OAA5D,SAClC,oBAAIrC,UAAU,0BAAd,SACCR,EAAMyC,kBAAkBK,KAAI,SAACC,GAAD,OAC5B,cAAChD,EAAD,CACCW,WAAYqC,EAAEC,SACdpC,YAAamC,EAAEE,KACfpC,gBAAiBkC,EAAEG,MACnBnC,aAAcf,EAAMe,aACpBR,WAAYP,EAAMO,WAClBgC,iBAAkBvC,EAAMuC,wBAI1B,qBAAK/B,UAAU,mBAAf,SAAkC,qBAAIA,UAAU,YAAd,uBAAqCR,EAAM0C,cAAcG,OAAzD,SAClC,oBAAIrC,UAAU,0BAAd,SACCR,EAAM0C,cAAcI,KAAI,SAACC,GAAD,OACxB,cAAChB,EAAD,CAAUH,aAAcmB,EAAEC,SACzBnB,cAAekB,EAAEE,KACjBnB,kBAAmBiB,EAAEG,aAGvB,qBAAK1C,UAAU,qBAKd,QClFU,SAASuF,EAAO/F,GAE3B,MAAkCC,mBAAS,IAA3C,mBAAOsB,EAAP,KAAkByE,EAAlB,KACA,EAA0B/F,mBAAS,MAAnC,mBAAOgG,EAAP,KAAcC,EAAd,KACA,EAAgCjG,mBAAS,QAAzC,mBAAOkG,EAAP,KACA,GADA,KAC4BlG,mBAAS,WAArC,mBAAOmG,EAAP,KAAeC,EAAf,KACMC,EAAYC,IAAMC,OAAO,MAC/B,EAAsCvG,mBAAS,GAAG,GAAlD,mBAAoBwG,GAApB,WACA,EAAwCxG,oBAAS,GAAjD,mBAAOgC,EAAP,KAAqBC,EAArB,KA6DMwE,EAAUH,IAAMI,aACpB,WAEE,IAAMvC,EAAMkC,EAAUM,QAAQC,gBAC9BX,EAAS9B,GACTiC,EAAU,cAEZ,CAACC,IAaG9E,EAAmB,SAACsF,GACxB,IAAIxF,EAAM,GACVwF,EAAEC,SAAQ,SAACC,GACT1F,EAAII,KAAKsF,MAEXhB,EAAa1E,GACbqD,QAAQC,IAAItD,IA4Bd,OAzBAkD,qBAAU,WACJxE,EAAMiH,OAGRR,EAAe,EAAE,IAUjBA,EAAe,GAAG,MAYpB,mCACA,sBAAKjG,UAAU,gBAAf,UACA,cAAC,IAAD,CACI4E,GAAG,eACH5E,UAAU,gBACVyE,IAAKqB,EACLY,OAAO,EACPC,UAAU,EACVC,2BAA2B,EAC3BC,iBAAiB,YACjBC,kBAAmB,EACnBC,iBAAkB,CAACC,WAAYrB,KAGvB,WAAVC,EAEA,sBAAK5F,UAAU,iBAAf,UACE,cAACsF,EAAD,CACEvF,WAAYP,EAAMO,WAClB4B,UAAWnC,EAAMmC,UACjBE,SAAUrC,EAAMqC,SAChBD,MAAOpC,EAAMoC,MACbE,OAAQtC,EAAMsC,OACdG,kBAAmBzC,EAAMyC,kBACzBD,oBAAqBxC,EAAMwC,oBAC3BE,cAAe1C,EAAM0C,cACrBH,iBAAkBvC,EAAMuC,iBACxBqD,cAAe5F,EAAM4F,cACrB7E,aAAcf,EAAMe,aACpB8E,UAAW7F,EAAM6F,YAGnB,qBAAKrF,UAAU,gBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,+BACE,6BAAI,2CACJ,6BAAI,mBAAGM,QAAS4F,EAAZ,uBACJ,6BAAI,oDAQd,KAEW,aAAVN,GAAwBH,EACzB,sBAAKzF,UAAU,mBAAf,UACE,qBAAKA,UAAU,gBAAf,SAA+B,qBAAK4E,GAAG,eAAe5E,UAAU,gBAAgBC,IAAKwF,MACrF,sBAAKzF,UAAU,kBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,6BACE,6BAAI,wBAAQA,UAAU,OAAOM,QA3H3B,WACVoF,EAAS,MACTG,EAAU,WAyHE,yBAGR,qBAAK7F,UAAU,eAAf,SACE,+BACE,6BAAI,4CACJ,6BAAI,4CACJ,6BAAI,4CACJ,6BAAI,oDAIV,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,6BACE,6BAAI,gDAGR,qBAAKA,UAAU,eAAf,SACE,6BACE,6BAAI,wBAAQA,UAAU,UAAUM,QA1I5B,WACduF,EAAU,WACVL,EAAa,KAwIC,oCAOd,KAEW,YAAVI,GAAuBH,EAkBxB,qCACGhE,EA+CD,KA9CF,sBAAKzB,UAAU,kBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,+BACE,6BAAI,wBAAQM,QArKJ,WACduF,EAAU,aAoKA,uBACJ,6BAAI,yCACJ,6BAAI,mBAAGvF,QAzJa,WAC1Bd,EAAMuC,mBACNL,GAAgB,IAuJN,+BAGR,sBAAK1B,UAAU,YAAf,UACE,qBAAKA,UAAU,iBAAf,SAAgC,2CAChC,oBAAIA,UAAU,gCAAd,SACE,4CAEF,qBAAKA,UAAU,iBAAf,SAAgC,gDAChC,oBAAIA,UAAU,4BAYd,qBAAKA,UAAU,iBAAf,SAAgC,2CAChC,oBAAIA,UAAU,0BAAd,SACGR,EAAMyC,kBAAkBK,KAAI,SAACC,GAAD,OAC3B,cAAC5B,EAAD,CACEI,UAAWA,EACXC,iBAAkBA,EAClBd,WAAYqC,EAAEC,SACdpC,YAAamC,EAAEE,KACfpC,gBAAiBkC,EAAEG,MACnBnC,aAAcf,EAAMe,aACpBR,WAAYP,EAAMO,WAClBgC,iBAAkBvC,EAAMuC,2BAKhC,qBAAKkF,UAAU,iBAAf,SACGlG,EAAUsB,QAAU,EAAI,KAAM,wBAAQrC,UAAU,OAAOM,QApQjD,WACToF,EAAS,MACTG,EAAU,UACV,IAAMqB,EAAOzI,IAASU,OAAOgI,YACvBvC,EAAKwC,cACP1E,EAAQwE,EAAKxE,MACbD,EAAOyE,EAAKG,YAEhBC,EAAWvG,EACQ3B,EAAQqF,IAAR,gBAAqBG,IAAM2C,UAAU9B,EAAO,YAClD+B,GACX,iBACA,SAAArE,OACA,SAAAmB,GACEH,QAAQC,IAAIE,MAEd,WACElF,EACCqF,IAAI,SACJgD,MAAM7C,GACN8C,iBACAxD,MAAK,SAAAQ,GACJ4C,EAASf,SAAQ,SAAAoB,GACfnJ,EAAGqB,WAAW,SAASC,IAAI6H,GAAW9H,WAAW,YAAYC,IAAI8E,GAAIgD,IAAI,CACvEC,SAAUnD,EACVE,GAAIA,EACJlC,MAAOA,EACPD,KAAMA,EACNqF,UArBM,yHAsBNC,MAAM,EACNC,UAAWvJ,IAASS,UAAU+I,WAAWC,oBAE3C/D,QAAQC,IAAI,oBAGhB5F,EAAGqB,WAAW,SAASC,IAAI4C,GAAO7C,WAAW,QAAQC,IAAI8E,GAAIgD,IAAI,CAC/DhD,GAAIA,EACJlC,MAAOA,EACPsF,UAAWvJ,IAASS,UAAU+I,WAAWC,kBACzCvD,GAAI2C,OAGR9B,EAAa,KA0NkB,SAAwC,6CAIzE/D,GAA6C,MAA7BjC,EAAMwC,qBACG,MAA3BxC,EAAMyC,mBAAoD,MAAvBzC,EAAM0C,cACzC,sBAAKlC,UAAU,cAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,YAAf,SAA2B,6BAAI,6BAAI,mBAAGM,QAlMhB,WAC1Bd,EAAMuC,mBACNL,GAAgB,IAgMuB,SAAiC,8CACpE,qBAAK1B,UAAU,YAAf,SAA2B,+CAC3B,qBAAKA,UAAU,YAAf,SAA2B,6BAAI,6BAAI,4BAAG,iDAExC,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,aAAf,SAA4B,uBAAOmC,KAAK,SAASC,YAAY,mBAC7D,qBAAKpC,UAAU,mBAAf,SAAkC,qBAAIA,UAAU,YAAd,wBAAsCR,EAAMwC,oBAAoBK,OAAhE,SAClC,oBAAIrC,UAAU,0BAAd,SACCR,EAAMwC,oBAAoBM,KAAI,SAACC,GAAD,OAC7B,cAACpB,EAAD,CACEC,aAAcmB,EAAEC,SAChBnB,cAAekB,EAAEE,KACjBnB,kBAAmBiB,EAAEG,MACrBrC,gBAAiBkC,EAAEG,MACnBnC,aAAcf,EAAMe,aACpBR,WAAYP,EAAMO,WAClBgC,iBAAkBvC,EAAMuC,wBAI5B,qBAAK/B,UAAU,mBAAf,SAAkC,qBAAIA,UAAU,YAAd,sBAAoCR,EAAMyC,kBAAkBI,OAA5D,SAClC,oBAAIrC,UAAU,0BAAd,SACCR,EAAMyC,kBAAkBK,KAAI,SAACC,GAAD,OAC3B,cAAChD,EAAD,CACEW,WAAYqC,EAAEC,SACdpC,YAAamC,EAAEE,KACfpC,gBAAiBkC,EAAEG,MACnBnC,aAAcf,EAAMe,aACpBR,WAAYP,EAAMO,WAClBgC,iBAAkBvC,EAAMuC,wBAI5B,qBAAK/B,UAAU,mBAAf,SAAkC,qBAAIA,UAAU,YAAd,uBAAqCR,EAAM0C,cAAcG,OAAzD,SAClC,oBAAIrC,UAAU,0BAAd,SACCR,EAAM0C,cAAcI,KAAI,SAACC,GAAD,OACvB,cAAChB,EAAD,CAAUH,aAAcmB,EAAEC,SACxBnB,cAAekB,EAAEE,KACjBnB,kBAAmBiB,EAAEG,aAGzB,qBAAK1C,UAAU,qBAKjB,QAGF,U,WCjUAmI,EAA6BC,uBAAaC,KAC5CC,EAAc,yHACdC,EAAa,CACf7F,MAAO,iCACPD,KAAK,QACLD,SAAU8F,EACVpD,aAAa,eACbsD,UAAW,EACXC,cAAe,EACf7I,QAAS,CAAC,mCAoNG8I,E,kDA/Mb,WAAYlJ,GAAQ,IAAD,8BACjB,cAAMA,IA0BRmJ,WAAa,WACP,EAAKC,MAAMC,MAAQ,EAAKD,MAAME,OAChC,EAAKC,SAAS,CACZtC,QAAO,IAGT,EAAKsC,SAAS,CACZtC,QAAO,KAlCM,EAuCnB/F,OAAS,WACP,EAAKqI,SAAS,CACZF,MAAOG,OAAOC,WACdH,OAAQE,OAAOE,aAEjB,EAAKP,eA5CY,EAkDnB/G,MAAQ,WACNzC,EAAKgK,gBAAgB9J,GACpB6E,MAAK,SAACkF,GACL,EAAKL,SAAS,CACV1D,WAAW,EACX1D,UAAWyH,EAAOlC,KAAKG,YACvBtH,WAAYqJ,EAAOlC,KAAKxE,MACxBb,SAAUuH,EAAOlC,KAAK1E,SACtB6G,aAAc,CAACD,EAAOlC,KAAKxE,QAC5B,EAAKX,qBAETsC,OAAM,SAACC,GAAD,OAAWH,QAAQC,IAAIE,EAAMgF,aA7DnB,EA+DnBxH,OAAS,WACPrD,IAASU,OAAOoK,UAChB,EAAKR,SAAS,CACV1D,WAAW,EACXH,aAAc,eACdvD,UAAW,QACX5B,WAAY,QACZkC,kBAAmB,CAACsG,GACpBvG,oBAAqB,CAACuG,GACtBrG,cAAe,CAACqG,GAChB1G,SAAU,4HAzEG,EA4EnB2H,WAAa,WACX/K,IAASU,OAAOsK,mBAAmB,SAASvC,GACpCA,GACAwC,KAAKX,SAAS,CACVpH,UAAWuF,EAAKG,YAChBtH,WAAYmH,EAAKxE,MACjBb,SAAUqF,EAAK1E,SACf6C,WAAW,GACZqE,KAAK3H,mBAGd4H,KAViC,kBA7ElB,EAyFpB5H,iBAAmB,WAEa,SAAzB,EAAK6G,MAAM7I,YACEvB,EAAGqB,WAAW,SAASC,IAAI,EAAK8I,MAAM7I,YAC9CyE,MAAMN,MAAK,SAACpE,GACVA,EAAI8J,OAiBP,EAAKb,SAAS,CACZM,aAAcvJ,EAAIwD,OAAJ,QACdkF,UAAW1I,EAAIwD,OAAJ,UACXmF,cAAe3I,EAAIwD,OAAJ,cACf4B,aAAcpF,EAAIwD,OAAJ,cACb,EAAK8B,gBApBR5G,EAAGqB,WAAW,SAASC,IAAI,EAAK8I,MAAM7I,YAAY6H,IAAI,CAClDlF,MAAO,EAAKkG,MAAM7I,WAClB0C,KAAM,EAAKmG,MAAMjH,UACjBa,SAAU,EAAKoG,MAAM/G,SACrBqD,aAAc,EAAK0D,MAAM1D,aACzBsD,UAAW,EACXC,cAAe,EACf7I,QAAS,CAAC,EAAKgJ,MAAM7I,cAExBsE,OAAM,SAACC,GACJH,QAAQC,IAAI,qCAAsCE,MAEtD,EAAKc,oBAWRf,OAAM,SAACC,GACNH,QAAQC,IAAI,0BAA2BE,OAxH5B,EA4HnBc,cAAgB,WACd,IAAIyE,EAAe,GACfC,EAAiB,GACjBC,EAAgB,GAChBC,EAAW,EACXC,EAAgB,EAChBC,EAAe,EACJ1L,EAAGqB,WAAW,SACtB2E,MAAMN,MAAK,SAACpE,GACf,IAAK,IAAIsD,EAAE,EAAEA,EAAEtD,EAAIuD,KAAKhB,OAAOe,IACvB,EAAKwF,MAAMS,aAAac,SAASrK,EAAIuD,KAAKD,GAAGE,OAAZ,QACjCuG,EAAaG,GAAYlK,EAAIuD,KAAKD,GAAGE,OACrC0G,GAAsB,IAEtBF,EAAeG,GAAiBnK,EAAIuD,KAAKD,GAAGE,OAC5C2G,GAAgC,GAEpCF,EAAcG,GAAgBpK,EAAIuD,KAAKD,GAAGE,OAC1C4G,GAA8B,EAElC,EAAKnB,SAAS,CACV9G,kBAAmB4H,EACnB7H,oBAAqB8H,EACrB5H,cAAe6H,QAjJvB,EAAKnB,MAAQ,CAEXwB,MAAO,EACPtB,OAAQE,OAAOE,YACfL,MAAOG,OAAOC,WACdxC,QAAQ,EAIRpB,WAAW,EACXpD,kBAAmB,CAACsG,GACpBvG,oBAAqB,CAACuG,GACtBrG,cAAe,CAACqG,GAEhBxI,WAAY,iCACZ4B,UAAW,QACXE,SAAUyG,EACVpD,aAAc,eACdsD,UAAW,EACXC,cAAe,EACfY,aAAc,CAAC,mCAEjBL,OAAOqB,iBAAiB,SAAU,EAAK3J,QAxBtB,E,qDAuJnB,WACIgJ,KAAKF,aACLE,KAAKf,e,oBAIT,WACE,OACE,eAACR,EAAD,CAA4BmC,mBAAiB,EAACC,MAAOC,OAAOC,OAAO,CAAC5B,MAAOa,KAAKd,MAAMC,MAAOC,OAAQY,KAAKd,MAAME,OAAQ4B,SAAU,WAAYC,IAAK,KAAMC,KAAM,OAA/J,UACE,sBAAKL,MAAOC,OAAOC,OAAO,CAACI,gBAAiB,QAASC,UAAW,QAASjC,MAAO,SAAhF,UACE,cAACkC,EAAA,EAAD,UACE,sBAAMtI,KAAK,WAAWuI,QAAQ,uGAEhC,cAAC,EAAD,CACEjL,WAAY2J,KAAKd,MAAM7I,WACvB4B,UAAW+H,KAAKd,MAAMjH,UACtBE,SAAU6H,KAAKd,MAAM/G,SACrBI,kBAAmByH,KAAKd,MAAM3G,kBAC9BD,oBAAqB0H,KAAKd,MAAM5G,oBAChCE,cAAewH,KAAKd,MAAM1G,cAC1BmD,UAAWqE,KAAKd,MAAMvD,UACtBzD,MAAO8H,KAAK9H,MAAM+H,KAAKD,MACvB5H,OAAQ4H,KAAK5H,OAAO6H,KAAKD,MACzB3H,iBAAkB2H,KAAK3H,iBAAiB4H,KAAKD,MAC7CtE,cAAesE,KAAKtE,cAAcuE,KAAKD,MACvCnJ,aAAcmJ,KAAKd,MAAMS,aACzBnE,aAAcwE,KAAKd,MAAM1D,kBAG7B,qBAAKqF,MAAOC,OAAOC,OAAO,CAACI,gBAAiB,SAA5C,SAIE,cAAC,EAAD,CACE/B,OAAQY,KAAKd,MAAME,OACnBD,MAAOa,KAAKd,MAAMC,MAClBpC,OAAQiD,KAAKd,MAAMnC,OACnB1G,WAAY2J,KAAKd,MAAM7I,WACvB4B,UAAW+H,KAAKd,MAAMjH,UACtBE,SAAU6H,KAAKd,MAAM/G,SACrBI,kBAAmByH,KAAKd,MAAM3G,kBAC9BD,oBAAqB0H,KAAKd,MAAM5G,oBAChCE,cAAewH,KAAKd,MAAM1G,cAC1BmD,UAAWqE,KAAKd,MAAMvD,UACtBzD,MAAO8H,KAAK9H,MAAM+H,KAAKD,MACvB5H,OAAQ4H,KAAK5H,OAAO6H,KAAKD,MACzB3H,iBAAkB2H,KAAK3H,iBAAiB4H,KAAKD,MAC7CtE,cAAesE,KAAKtE,cAAcuE,KAAKD,MACvCnJ,aAAcmJ,KAAKd,MAAMS,wB,GAxMnBtD,IAAMkF,WCvBxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3c2977b3.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';        // for authentication\nimport 'firebase/storage';     // for storage\nimport 'firebase/database';    // for realtime database\nimport 'firebase/firestore';   // for cloud firestore\nimport 'firebase/messaging';   // for cloud messaging\nimport 'firebase/functions';   // for cloud functions\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAzNigqy7stltnVUU8cAollxCxvW0CNBTE\",\n  authDomain: \"ghost-f8b34.firebaseapp.com\",\n  projectId: \"ghost-f8b34\",\n  storageBucket: \"ghost-f8b34.appspot.com\",\n  messagingSenderId: \"838623299070\",\n  appId: \"1:838623299070:web:b73429fee525b7c01cacaf\",\n  measurementId: \"G-85ZG5FVKQ4\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n// Google auth as a provider for this app, the popup\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { db, auth, storage, provider };","export default __webpack_public_path__ + \"static/media/black-checkmark.d8439ac6.png\";","import React, { Component, useState, useEffect } from 'react';\nimport {db} from './Firebase.js';\nimport './Messages.css';\nimport checkmark from './images/black-checkmark.png';\n\nfunction Friends(props) {\n\n\tconst [removed, setRemoved] = useState(false);\n\tconst friends = db.collection(\"users\").doc(props.user_email);\n\n\tconst remove_friend = () => {\n\n\t\tprops.friends_list.splice(props.friends_list.indexOf(props.friend_username), 1)\n\t\tfriends.update({friends: props.friends_list})\n\n\t}\n\tconst remove = () => {\n\t\tif (props.friend_username != \"Guest@project-yellow-ghost.com\") {\n\t\t\tremove_friend();\n\t\t}\n\t\tsetRemoved(true);\n\t}\n\n    return (\n        <li className=\"add-friends-content\">\n\t\t\t\t\t\t<div className=\"add-box-1\">\n\t\t\t\t\t\t<img className=\"message-avatar\" src={props.friend_pic} alt=\"Avatar\"/>\n\t\t\t\t\t\t<ul className=\"message-info\">\n\t\t\t\t\t\t\t\t<h3>{props.friend_name}</h3>\n\t\t\t\t\t\t\t\t<p>{props.friend_username}</p>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"add-box-2\">\n\t\t\t\t\t\t{removed ? <p className=\"removed\"><b>Removed!</b></p> : <button onClick={remove}><b>Remove</b></button>}\n\t\t\t\t\t\t</div>\n        </li>\n    )\n}\n\nfunction SendFriends(props) {\n\n\tconst [added, setAdded] = useState(false);\n\tconst friends = db.collection(\"users\").doc(props.user_email);\n\n\tconst add_friend = () => {\n\t\tsetAdded(true);\n\t\tvar arr = props.send_list;\n\t\tarr.push(props.friend_username)\n\t\tprops.handle_send_list(arr);\n\t}\n\tconst remove_friend = () => {\n\t\tsetAdded(false);\n\t\tvar arr = props.send_list;\n\t\tarr.splice(arr.indexOf(props.friend_username), 1);\n\t\tprops.handle_send_list(arr);\n\t}\n\n    return (\n\t\t\t<>\n\t\t\t{added ?\n\t\t\t\t<li className=\"add-friends-content\" onClick={remove_friend}>\n\t\t\t\t<div className=\"add-box-1\">\n\t\t\t\t<img className=\"message-avatar\" src={props.friend_pic} alt=\"Avatar\"/>\n\t\t\t\t<ul className=\"message-info\">\n\t\t\t\t\t\t<h1 className=\"selected\">{props.friend_name}</h1>\n\t\t\t\t\t\t{/* <p>{props.friend_username}</p> */}\n\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"add-box-2\">\n\t\t\t\t<div className=\"selected selected-circle\"><img className=\"checkmark\" src={checkmark} alt=\"U+2713\"></img></div>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t\t:\n\t\t\t<li className=\"add-friends-content\" onClick={add_friend}>\n\t\t\t\t<div className=\"add-box-1\">\n\t\t\t\t<img className=\"message-avatar\" src={props.friend_pic} alt=\"Avatar\"/>\n\t\t\t\t<ul className=\"message-info\">\n\t\t\t\t\t\t<h1>{props.friend_name}</h1>\n\t\t\t\t\t\t{/* <p>{props.friend_username}</p> */}\n\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"add-box-2\">\n\t\t\t\t<div className=\"unselected-circle\"><img className=\"checkmark\" src={checkmark} alt=\"U+2713\"></img></div>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t\t}\n\t\t\t</>\n    )\n}\n\nfunction Strangers(props) {\n\n\n\tconst [added, setAdded] = useState(false);\n\tconst friends = db.collection(\"users\").doc(props.user_email);\n\t\n\tconst add_friend = () => {\n\t\tprops.friends_list.push(props.stranger_username);\n\t\tfriends.update({friends: props.friends_list})\n\t}\n\n\tconst add_true = () => {\n\t\tif (props.friend_username != \"Guest@project-yellow-ghost.com\") {\n\t\t\tadd_friend();\n\t\t}\n\t\tsetAdded(true);\n\t}\n\n   return (\n\t   <li className=\"add-friends-content\">\n\t\t\t\t\t   <div className=\"add-box-1\">\n\t\t\t\t\t   <img className=\"message-avatar\" src={props.stranger_pic} alt=\"Avatar\"/>\n\t\t\t\t\t   <ul className=\"message-info\">\n\t\t\t\t\t\t\t   <h3>{props.stranger_name}</h3>\n\t\t\t\t\t\t\t   <p>{props.stranger_username}</p>\n\t\t\t\t\t   </ul>\n\t\t\t\t\t   </div>\n\t\t\t\t\t   <div className=\"add-box-2\">\n\t\t\t\t\t\t   {added ? <p className=\"added\"><b>Added!</b></p> : <button onClick={add_true}><b>Add</b></button>}\n\t\t\t\t\t   </div>\n\t   </li>\n   )\n}\n\nfunction Everyone(props) {\n\n   return (\n\t   <li className=\"add-friends-content\">\n\t\t\t\t\t   <div className=\"add-box-1\">\n\t\t\t\t\t   <img className=\"message-avatar\" src={props.stranger_pic} alt=\"Avatar\"/>\n\t\t\t\t\t   <ul className=\"message-info\">\n\t\t\t\t\t\t\t   <h3>{props.stranger_name}</h3>\n\t\t\t\t\t\t\t   <p>{props.stranger_username}</p>\n\t\t\t\t\t   </ul>\n\t\t\t\t\t   </div>\n\t\t\t\t\t   <div className=\"add-box-2\">\n\t\t\t\t\t   </div>\n\t   </li>\n   )\n}\nexport {SendFriends, Friends, Strangers, Everyone}","import React, { Component, useState, useEffect } from 'react';\nimport {Friends, Strangers, Everyone} from './Friends.js';\nimport './Messages.css';\n\nexport default function MessagesNavbar(props) {\n\tconst [show_friends, setShow_Friends] = useState(false);\n\n\tconst show_friends_button = () => {\n\t\tprops.get_friends_list();\n\t\tsetShow_Friends(true);\n\t}\n\tconst hide_friends_button = ()=> {\n\t\tprops.get_friends_list();\n\t\tsetShow_Friends(false);\n\t}\n\n\treturn (\n\t\t<>\n\t\t{ !show_friends ? \n\t\t<div className=\"navbar\">\n\t\t<div className=\"nav-box-1\">\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t{props.user_name == \"Guest\" ?\n\t\t\t\t\t<a onClick={props.login}>Sign In</a> :\n\t\t\t\t\t<img className=\"profile-pic\" src={props.user_pic} onClick={props.logout} alt=\"Profile Picture\" />\n\t\t\t\t\t}\n\t\t\t\t</li>\n\t\t\t\t<li><a>Search</a></li>\n\t\t\t</ul>\n\t\t</div>\n\t\t<div className=\"nav-box-2\">\n\t\t\t<h1>Chat</h1>\n\t\t</div>\n\t\t<div className=\"nav-box-3\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li><a onClick={show_friends_button}>Add Friend</a></li>\n\t\t\t\t\t<li><a>New Chat</a></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t\t: null}\n\t\t{ show_friends && props.user_strangers_dict != null &&\n\t\tprops.user_friends_dict != null && props.everyone_dict != null ?\n\t\t<div className=\"add-friends\">\n\t\t\t<div className=\"add-navbar\">\n\t\t\t\t<div className=\"nav-box-1\"><ul><li><a onClick={hide_friends_button}><b>Close</b></a></li></ul></div>\n\t\t\t\t<div className=\"nav-box-2\"><h1>Add Friends</h1></div>\n\t\t\t\t<div className=\"nav-box-3\"><ul><li><a><b>. . .</b></a></li></ul></div>\n\t\t\t</div>\n\t\t\t<div className=\"add-body\">\n\t\t\t\t<div className=\"search-bar\"><input type=\"search\" placeholder=\"Find Friends\"></input></div>\n\t\t\t\t<div className=\"add-title-navbar\"><h3 className=\"quick-add\">Quick Add ({props.user_strangers_dict.length})</h3></div>\n\t\t\t\t<ul className=\"add-list list-container\">\n\t\t\t\t{props.user_strangers_dict.map((x) => (\n\t\t\t\t\t<Strangers \n\t\t\t\t\t\tstranger_pic={x.photoURL} \n\t\t\t\t\t\tstranger_name={x.name}\n\t\t\t\t\t\tstranger_username={x.email}\n\t\t\t\t\t\tfriend_username={x.email}\n\t\t\t\t\t\tfriends_list={props.friends_list} \n\t\t\t\t\t\tuser_email={props.user_email}\n\t\t\t\t\t\tget_friends_list={props.get_friends_list}\n\t\t\t\t\t/>))\n\t\t\t\t}\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"add-title-navbar\"><h3 className=\"quick-add\">Friends ({props.user_friends_dict.length})</h3></div>\n\t\t\t\t<ul className=\"add-list list-container\">\n\t\t\t\t{props.user_friends_dict.map((x) => (\n\t\t\t\t\t<Friends \n\t\t\t\t\t\tfriend_pic={x.photoURL} \n\t\t\t\t\t\tfriend_name={x.name} \n\t\t\t\t\t\tfriend_username={x.email} \n\t\t\t\t\t\tfriends_list={props.friends_list}\n\t\t\t\t\t\tuser_email={props.user_email}  \n\t\t\t\t\t\tget_friends_list={props.get_friends_list}\n\t\t\t\t\t/>))\n\t\t\t\t}\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"add-title-navbar\"><h3 className=\"quick-add\">Everyone ({props.everyone_dict.length})</h3></div>\n\t\t\t\t<ul className=\"add-list list-container\">\n\t\t\t\t{props.everyone_dict.map((x) => (\n\t\t\t\t\t<Everyone stranger_pic={x.photoURL}\n\t\t\t\t\t\tstranger_name={x.name} \n\t\t\t\t\t\tstranger_username={x.email} \n\t\t\t\t\t/>))}\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"add-footer\">\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t : null}\n\t\t</>\n\t);\n}\n","import React, { Component, useState, useEffect } from 'react';\nimport {auth, storage, db} from './Firebase.js';\nimport ReactTimeAgo from 'react-timeago';\nimport firebase from 'firebase/app';\nimport './Messages.css';\n\n/*\n * Function - Message(sender_name)\n * @sender_name: Name of person who sent the image\n * Return: Loaded images requested from Firebase\n * \n * Description:\n * A request (/post/current_user/) is sent to Firebase to get current_user's received images.\n*/\n\nexport default function Message(props) {\n\n    // Check Firebase if user has any new messages\n\n    const [status, setStatus] = useState(\"Received\");\n    const [time, setTime] = useState(0);\n    const [imgArr, setImgArr] = useState([]);\n\n    const update_messages = () => {\n        db.collection('posts')\n        .doc(props.user_email)\n        .collection(\"Received\")\n        .orderBy(\"timeStamp\", \"desc\")\n        .onSnapshot((snapshot) => {\n            var i = 0;\n            // Filters out all the photos sent by the sender\n            while (i < snapshot.docs.length && snapshot.docs[i].data()[\"email\"] != props.sender_email) { i = i + 1; }\n            if (i < snapshot.docs.length) {\n                if (snapshot.docs[i].data()[\"email\"] == props.sender_email) {\n                    setStatus(\"New Snap\");\n                    if (snapshot.docs[i].data()[\"timeStamp\"] != null) {\n                        setTime(snapshot.docs[i].data()[\"timeStamp\"].toDate().toUTCString());\n                    }\n                } else {\n                    setStatus(\"Received\");\n                }\n            } else {\n                setStatus(\"Received\");\n            }\n        })\n    }\n\n    var status_output = <p>{status}</p>;\n    var icon = <div className=\"message-received\"/>;\n\n    if (status === \"New Snap\"){\n        icon = <div className=\"message-new\" />\n        status_output = <p className=\"red\"><b>{status}</b></p>\n    } else if (status === \"Received\") {\n        icon = <div className=\"message-received\"/>\n    } else if (status === \"Sent\") {\n        icon = <div className=\"message-sent\"/>\n    } else if (status === \"Opened\") {\n        icon = <div className=\"message-opened\"/>\n    }\n\n    const [img, setImg] = useState(null);\n    const [imgid, setImgid] = useState(null);\n\n    const open = () => {\n        console.log(\"opening snap\", props.user_email);\n        db.collection('posts')\n        .doc(props.user_email)\n        .collection(\"Received\")\n        .orderBy(\"timeStamp\", \"desc\")\n        .get().then((snapshot) => {\n            var i = 0;\n            while (i < snapshot.docs.length && snapshot.docs[i].data()[\"email\"] != props.sender_email) { i = i + 1; }\n            if (i < snapshot.docs.length) {\n                if (snapshot.docs[i].data()[\"email\"] == props.sender_email) {\n                    if (snapshot.docs[i].data() != null) {\n                        setImg(snapshot.docs[i].data()[\"imageURL\"]);\n                        setImgid(snapshot.docs[i].data()[\"id\"]);\n                    }\n                } else {\n                    setStatus(\"Received\");\n                }\n            } else {\n                setStatus(\"Received\");\n            }\n        })\n    }\n\n    const delete_photo = () => {\n        storage.ref(`posts/${imgid}`).delete()\n        .then((url) => {\n            console.log(\"Deleted from storage: \", imgid);\n        })\n        .catch((error) => {\n            console.log(\"TRIED DELETING: \", imgid)\n        });\n        db.collection('posts').doc(imgid).delete().then(() => {\n          console.log(\"Deleted from firestore\");\n        }).catch((error) => {\n          console.error(\"Error removing document: \", error);\n        });\n      }\n\n    const close = () => {\n        setImg(null);\n        const img = db.collection('posts').doc(props.user_email).collection(\"Received\").doc(imgid);\n        img.delete().then(() => {\n            console.log(\"Document deleted\");\n        }).catch((error) => {\n            console.log(\"Error removing document: \", error);\n        })\n        update_messages();\n        const sender = db.collection('posts').doc(props.sender_email).collection(\"Sent\").doc(imgid);\n        sender.get().then((doc) => {\n            if (doc.data()[\"to\"].length == 1) {\n                sender.delete().then(() => {\n                    console.log(\"sender document deleted, everyone saw the pic\");\n                }).catch((error) => {\n                    console.log(\"Could not delete sender's document\");\n                })\n                delete_photo();\n            } else {\n                // Update list if there are other people who have to see the post\n                var i = 0;\n                var arr = doc.data()[\"to\"]\n                arr.splice(arr.indexOf(props.user_email), 1)\n                sender.update({to: arr}).then(() => {\n                    console.log(\"Updated sender's list\");\n                }).catch((error) => {\n                    console.log(\"could not update list: \", error);\n                })\n            }\n        })\n    }\n\n    useEffect(() => {\n        update_messages();\n    })\n    \n    return (\n        <>\n        {img ? <div className=\"image-background\" onClick={close}><img id=\"image\" className=\"image-preview\" src={img} /></div> :\n            <li className=\"message-content\" onClick={open}>\n                <img className=\"message-avatar\" src={props.profile_url} alt=\"Avatar\"/>\n                <ul className=\"message-info\">\n                    <h3>{props.sender_name}</h3>\n                    <div className=\"message-sub-info\">\n                        {icon}\n                        {status_output}\n                        {time != 0 ? <p><ReactTimeAgo date={time} locale=\"en-US\"/></p> : null }\n                        {props.streak_num > 0 ? <p>{props.streak_num}{props.streak_emoji}</p> : null}\n                    </div>\n                </ul>\n            </li>\n        }\n        </>\n    );\n\n}\n","import React, { Component } from 'react';\nimport './Messages.css';\nimport MessagesNavbar from './MessagesNavbar';\nimport Message from './Message';\n\n\nfunction Messages(props) {\n    return (\n    <div className=\"messages-screen\">\n        <MessagesNavbar\n            user_email={props.user_email}\n            user_name={props.user_name}\n            user_pic={props.user_pic}\n            login={props.login}\n            logout={props.logout}\n            user_friends_dict={props.user_friends_dict}\n            user_strangers_dict={props.user_strangers_dict}\n            everyone_dict={props.everyone_dict}\n            get_friends_list={props.get_friends_list}\n            get_all_users={props.get_all_users}\n            friends_list={props.friends_list}\n            logged_in={props.logged_in}\n        />\n        <ul className=\"messages-list\">\n        {props.logged_in ? null :\n        <li className=\"welcome-statement\">Welcome to Project Yellow Ghost, a web app version of SnapChat. This was a project developed by Jonathan Wang\n            and this was his final project for school. Right now, you are on a local guest account for you to try out. Feel free to sign in at the top if \n            you want to start using this product. Happy Snapping!\n        </li>\n        }\n        {props.user_friends_dict.map((x) => (\n            <Message \n                sender_email={x.email} \n                profile_url={x.photoURL} \n                sender_name={x.name} \n                user_email={props.user_email}\n                streak_emoji={props.streak_emoji}\n                logged_in={props.logged_in}\n            />))\n        }\n        </ul>\n    </div>\n    );\n}\n\nexport default Messages;","import React, { Component, useState, useEffect } from 'react';\nimport {Friends, Strangers, Everyone} from './Friends.js';\nimport './Camera.css';\nimport './Messages.css';\nimport Camera from './Camera';\n\nexport default function CameraNavbar(props) {\n    const [show_friends, setShow_Friends] = useState(false);\n\n\tconst show_friends_button = () => {\n\t\tprops.get_friends_list();\n\t\tsetShow_Friends(true);\n\t}\n\tconst hide_friends_button = ()=> {\n\t\tprops.get_friends_list();\n\t\tsetShow_Friends(false);\n\t}\n\n\treturn (\n\t\t<>\n\t\t{ !show_friends ? \n\t\t<div className=\"webcam-navbar\">\n\t\t<div className=\"nav-box-1\">\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t{props.user_name == \"Guest\" ?\n\t\t\t\t\t<a onClick={props.login}>Sign In</a> :\n\t\t\t\t\t<img className=\"profile-pic\" src={props.user_pic} onClick={props.logout} alt=\"Profile Picture\" />\n\t\t\t\t\t}\n\t\t\t\t</li>\n\t\t\t\t<li><a>Search</a></li>\n\t\t\t</ul>\n\t\t</div>\n\t\t<div className=\"nav-box-3\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li><a onClick={show_friends_button}>Add Friend</a></li>\n\t\t\t\t\t<li><a>New Chat</a></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t\t: null}\n\t\t{ show_friends && props.user_strangers_dict != null &&\n\t\tprops.user_friends_dict != null && props.everyone_dict != null ?\n\t\t<div className=\"add-friends\">\n\t\t\t<div className=\"add-navbar\">\n\t\t\t\t<div className=\"nav-box-1\"><ul><li><a onClick={hide_friends_button}><b>Close</b></a></li></ul></div>\n\t\t\t\t<div className=\"nav-box-2\"><h1>Add Friends</h1></div>\n\t\t\t\t<div className=\"nav-box-3\"><ul><li><a><b>. . .</b></a></li></ul></div>\n\t\t\t</div>\n\t\t\t<div className=\"add-body\">\n\t\t\t\t<div className=\"search-bar\"><input type=\"search\" placeholder=\"Find Friends\"></input></div>\n\t\t\t\t<div className=\"add-title-navbar\"><h3 className=\"quick-add\">Quick Add ({props.user_strangers_dict.length})</h3></div>\n\t\t\t\t<ul className=\"add-list list-container\">\n\t\t\t\t{props.user_strangers_dict.map((x) => (\n\t\t\t\t\t<Strangers \n\t\t\t\t\t\tstranger_pic={x.photoURL} \n\t\t\t\t\t\tstranger_name={x.name}\n\t\t\t\t\t\tstranger_username={x.email}\n\t\t\t\t\t\tfriend_username={x.email}\n\t\t\t\t\t\tfriends_list={props.friends_list} \n\t\t\t\t\t\tuser_email={props.user_email}\n\t\t\t\t\t\tget_friends_list={props.get_friends_list}\n\t\t\t\t\t/>))\n\t\t\t\t}\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"add-title-navbar\"><h3 className=\"quick-add\">Friends ({props.user_friends_dict.length})</h3></div>\n\t\t\t\t<ul className=\"add-list list-container\">\n\t\t\t\t{props.user_friends_dict.map((x) => (\n\t\t\t\t\t<Friends \n\t\t\t\t\t\tfriend_pic={x.photoURL} \n\t\t\t\t\t\tfriend_name={x.name} \n\t\t\t\t\t\tfriend_username={x.email} \n\t\t\t\t\t\tfriends_list={props.friends_list}\n\t\t\t\t\t\tuser_email={props.user_email}  \n\t\t\t\t\t\tget_friends_list={props.get_friends_list}\n\t\t\t\t\t/>))\n\t\t\t\t}\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"add-title-navbar\"><h3 className=\"quick-add\">Everyone ({props.everyone_dict.length})</h3></div>\n\t\t\t\t<ul className=\"add-list list-container\">\n\t\t\t\t{props.everyone_dict.map((x) => (\n\t\t\t\t\t<Everyone stranger_pic={x.photoURL}\n\t\t\t\t\t\tstranger_name={x.name} \n\t\t\t\t\t\tstranger_username={x.email} \n\t\t\t\t\t/>))}\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"add-footer\">\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t : null}\n\t\t</>\n\t);\n}\n","import React, { Component, useEffect, useState } from 'react';\nimport Webcam from \"react-webcam\";\nimport { v4 as uuid } from \"uuid\";\nimport './Camera.css';\nimport {SendFriends, Friends, Strangers, Everyone} from './Friends.js';\nimport {storage, db} from './Firebase.js';\nimport firebase from 'firebase/app';\nimport CameraNavbar from './CameraNavbar';\n\nexport default function Camera(props) {\n\n    const [send_list, setSend_list] = useState([])\n    const [image, setImage] = useState(null);\n    const [faceMode, setFaceMode] = useState(\"user\");\n    const [screen, setScreen] = useState(\"camera\");\n    const webcamRef = React.useRef(null);\n    const [aspectRatio, setAspectRatio] = useState(16/9);\n    const [show_friends, setShow_Friends] = useState(false);\n\n    const send = () => {\n        setImage(null);\n        setScreen('camera');\n        const user = firebase.auth().currentUser;\n        const id = uuid();\n        var email = user.email;\n        var name = user.displayName;\n        var avatarURL = \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\";\n\t\t\t\tvar to_users = send_list;\n        const uploadTask = storage.ref(`posts/${id}`).putString(image, 'data_url');\n          uploadTask.on(\n          \"state_changed\",\n          snapshot => {},\n          error => {\n            console.log(error);\n          },\n          () => {\n            storage\n            .ref(\"posts\")\n            .child(id)\n            .getDownloadURL()\n            .then(url => {\n              to_users.forEach(user_temp => {\n                db.collection('posts').doc(user_temp).collection(\"Received\").doc(id).set({\n                  imageURL: url,\n                  id: id,\n                  email: email,\n                  name: name,\n                  avatarURL: avatarURL,\n                  read: false,\n                  timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\n                })\n                console.log(\"Photo Sent\");\n              })\n            })\n            db.collection('posts').doc(email).collection(\"Sent\").doc(id).set({\n              id: id,\n              email: email,\n              timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\n              to: to_users,\n            })\n          })\n          setSend_list([]);\n    }\n\n    const close = () => {\n        setImage(null);\n        setScreen(\"camera\");\n    }\n\n    const send_to = () => {\n      setScreen(\"send_to\");\n      setSend_list([]);\n    }\n\n    const go_back = () => {\n      setScreen(\"captured\");\n    }\n\n    const capture = React.useCallback(\n      () => {\n        // const img = webcamRef.current.getScreenshot({width:props.width, height:props.height});\n        const img = webcamRef.current.getScreenshot();\n        setImage(img);\n        setScreen(\"captured\");\n      },\n      [webcamRef]\n    );\n\n    const show_friends_button = () => {\n      props.get_friends_list();\n      setShow_Friends(true);\n    }\n\n    const hide_friends_button = ()=> {\n      props.get_friends_list();\n      setShow_Friends(false);\n    }\n\n    const handle_send_list = (e) => {\n      var arr = [];\n      e.forEach((element) => {\n        arr.push(element);\n      })\n      setSend_list(arr)\n      console.log(arr);\n    }\n\n    useEffect(() => {\n      if (props.mobile) {\n        // document.querySelector(\"#imageElement\").classList.add(\"image-mobile\");\n        // document.querySelector(\"#imageElement\").classList.remove(\"image-desktop\");\n        setAspectRatio(9/16);\n        // if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n        //   setAspectRatio(16/9);\n        // } else {\n        //   setAspectRatio(9/16);\n        // }\n\n      } else {\n        // document.querySelector(\"#imageElement\").classList.add(\"image-desktop\");\n        // document.querySelector(\"#imageElement\").classList.remove(\"image-mobile\");\n        setAspectRatio(16/9);\n        // if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n        //   setAspectRatio(9/16);\n        // } else {\n        //   setAspectRatio(16/9);\n        // }\n      }\n    })\n\n\n\n    return (\n      <>\n      <div className=\"webcam-screen\">\n      <Webcam\n          id=\"imageElement\"\n          className=\"image-desktop\"\n          ref={webcamRef}\n          audio={false}\n          mirrored={true}\n          forceScreenshotSourceSize={false}\n          screenshotFormat=\"image/png\"\n          screenshotQuality={1}\n          videoConstraints={{facingMode: faceMode}}\n          // videoConstraints={{facingMode: faceMode, aspectRatio: aspectRatio}}\n        />\n      { screen ===\"camera\" ?\n        \n        <div className=\"webcam-overlay\">\n          <CameraNavbar\n            user_email={props.user_email}\n            user_name={props.user_name}\n            user_pic={props.user_pic}\n            login={props.login}\n            logout={props.logout}\n            user_friends_dict={props.user_friends_dict}\n            user_strangers_dict={props.user_strangers_dict}\n            everyone_dict={props.everyone_dict}\n            get_friends_list={props.get_friends_list}\n            get_all_users={props.get_all_users}\n            friends_list={props.friends_list}\n            logged_in={props.logged_in}\n          />\n\n          <div className=\"webcam-footer\">\n            <div className=\"nav-box-1\">\n              <ul>\n                <li><a>Memories</a></li>\n                <li><a onClick={capture}>Capture</a></li>\n                <li><a>Filters</a></li>\n                {/* <li><a>{props.height} x {props.width}</a></li> */}\n              </ul>\n            </div>\n          </div>\n        </div>\n      \n      :\n      null\n      }\n      {screen ===\"captured\" && image ?\n      <div className=\"captured-overlay\">\n        <div className=\"image-preview\"><img id=\"imageElement\" className=\"image-desktop\" src={image}></img></div>\n        <div className=\"buttons-overlay\">\n          <div className=\"captured-header\">\n            <div className=\"header-left\">\n              <ul>\n                <li><button className=\"send\" onClick={close}>Close</button></li>\n              </ul>\n            </div>\n            <div className=\"header-right\">\n              <ul>\n                <li><button>Text</button></li>\n                <li><button>Draw</button></li>\n                <li><button>Crop</button></li>\n                <li><button>Time</button></li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"captured-footer\">\n            <div className=\"footer-left\">\n              <ul>\n                <li><button>Save</button></li>\n              </ul>\n            </div>\n            <div className=\"footer-right\">\n              <ul>\n                <li><button className=\"capture\" onClick={send_to}>Send to</button></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n      :\n      null\n      }\n      {screen ===\"send_to\" && image  ?\n      // <div className=\"send_to-overlay\">\n      //   <div className=\"buttons-overlay\">\n      //     <div className=\"send_to-header\">\n      //       <div className=\"header-left\">\n      //         <ul>\n      //           <li><button className=\"capture\" onClick={go_back}>Go Back</button></li>\n      //         </ul>\n      //       </div>\n      //       <div className=\"header-right\">\n      //         <ul>\n      //           <li><button>Add Friend</button></li>\n      //         </ul>\n      //       </div>\n      //     </div>\n      //   </div>\n      // </div>\n\n      <>\n      { !show_friends ? \n      <div className=\"send_to-overlay\">\n        <div className=\"send_to-header\">\n          <ul>\n            <li><button onClick={go_back}>Go Back</button></li>\n            <li><a>Search</a></li>\n            <li><a onClick={show_friends_button}>Add Friend</a></li>\n          </ul>\n        </div>\n        <div className=\"send-list\">\n          <div className=\"stories-header\"><h3>Stories</h3></div>\n          <ul className=\"selection-list list-container\">\n            <li>My Story</li>\n          </ul>\n          <div className=\"stories-header\"><h3>Best Friends</h3></div>\n          <ul className=\"add-list list-container\">\n            {/* {props.user_friends_dict.map((x) => (\n              <SendFriends \n                friend_pic={x.photoURL} \n                friend_name={x.name} \n                friend_username={x.email} \n                friends_list={props.friends_list}\n                user_email={props.user_email}  \n                get_friends_list={props.get_friends_list}\n              />))\n            } */}\n          </ul>\n          <div className=\"stories-header\"><h3>Recents</h3></div>\n          <ul className=\"add-list list-container\">\n            {props.user_friends_dict.map((x) => (\n              <SendFriends\n                send_list={send_list}\n                handle_send_list={handle_send_list}\n                friend_pic={x.photoURL} \n                friend_name={x.name} \n                friend_username={x.email} \n                friends_list={props.friends_list}\n                user_email={props.user_email}  \n                get_friends_list={props.get_friends_list}\n              />))\n            }\n          </ul>\n        </div>\n        <div classname=\"send_to-footer\">\n          {send_list.length <= 0 ? null: <button className=\"send\" onClick={send}><h1>Send</h1></button> }\n        </div>\n      </div>\n      : null}\n      { show_friends && props.user_strangers_dict != null &&\n      props.user_friends_dict != null && props.everyone_dict != null ?\n      <div className=\"add-friends\">\n        <div className=\"add-navbar\">\n          <div className=\"nav-box-1\"><ul><li><a onClick={hide_friends_button}><b>Close</b></a></li></ul></div>\n          <div className=\"nav-box-2\"><h1>Add Friends</h1></div>\n          <div className=\"nav-box-3\"><ul><li><a><b>. . .</b></a></li></ul></div>\n        </div>\n        <div className=\"add-body\">\n          <div className=\"search-bar\"><input type=\"search\" placeholder=\"Find Friends\"></input></div>\n          <div className=\"add-title-navbar\"><h3 className=\"quick-add\">Quick Add ({props.user_strangers_dict.length})</h3></div>\n          <ul className=\"add-list list-container\">\n          {props.user_strangers_dict.map((x) => (\n            <Strangers \n              stranger_pic={x.photoURL} \n              stranger_name={x.name}\n              stranger_username={x.email}\n              friend_username={x.email}\n              friends_list={props.friends_list} \n              user_email={props.user_email}\n              get_friends_list={props.get_friends_list}\n            />))\n          }\n          </ul>\n          <div className=\"add-title-navbar\"><h3 className=\"quick-add\">Friends ({props.user_friends_dict.length})</h3></div>\n          <ul className=\"add-list list-container\">\n          {props.user_friends_dict.map((x) => (\n            <Friends \n              friend_pic={x.photoURL} \n              friend_name={x.name} \n              friend_username={x.email} \n              friends_list={props.friends_list}\n              user_email={props.user_email}  \n              get_friends_list={props.get_friends_list}\n            />))\n          }\n          </ul>\n          <div className=\"add-title-navbar\"><h3 className=\"quick-add\">Everyone ({props.everyone_dict.length})</h3></div>\n          <ul className=\"add-list list-container\">\n          {props.everyone_dict.map((x) => (\n            <Everyone stranger_pic={x.photoURL}\n              stranger_name={x.name} \n              stranger_username={x.email} \n            />))}\n          </ul>\n          <div className=\"add-footer\">\n\n          </div>\n        </div>\n      </div>\n      : null}\n      </>\n      :\n      null\n      }\n      </div>\n      </>\n    );\n}\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport SwipeableViews from 'react-swipeable-views';\nimport { bindKeyboard } from 'react-swipeable-views-utils';\nimport {auth, storage, db, provider} from './Firebase.js';\nimport firebase from 'firebase/app';\n// import 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport Messages from './Messages.js';\nimport Camera from './Camera.js';\nimport { findAllByAltText } from '@testing-library/react';\n\n\n// All the firebase calls will occur here to minimize usage\n\nconst BindKeyboardSwipeableViews = bindKeyboard(SwipeableViews);\nvar default_pic = \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\"\nvar dummy_dict = {\n  email: \"Guest@project-yellow-ghost.com\",\n  name:\"Guest\",\n  photoURL: default_pic,\n  streak_emoji:\"\\u{1F525}\",\n  imgs_sent: 0,\n  imgs_received: 0,\n  friends: ['Guest@project-yellow-ghost.com'],\n}\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // For swiping screen\n      index: 0,\n      height: window.innerHeight,\n      width: window.innerWidth,\n      mobile: false,\n      // All for Camera\n\n      // All for Messages\n      logged_in: false,\n      user_friends_dict: [dummy_dict],\n      user_strangers_dict: [dummy_dict],\n      everyone_dict: [dummy_dict],\n      // Properties for every user on firebase\n      user_email: \"Guest@project-yellow-ghost.com\",\n      user_name: \"Guest\",\n      user_pic: default_pic,\n      streak_emoji: \"\\u{1F525}\",\n      imgs_sent: 0,\n      imgs_received: 0,\n      user_friends: [\"Guest@project-yellow-ghost.com\"],\n    }\n    window.addEventListener(\"resize\", this.update);\n  }\n\n  set_device = () => {\n    if (this.state.width < this.state.height) {\n      this.setState({\n        mobile:true\n      })\n    } else {\n      this.setState({\n        mobile:false\n      })\n    }\n  }\n\n  update = () => {\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight\n    },\n    this.set_device()\n    );\n  };\n\n  // For Messages Component\n\n  login = () => {\n    auth.signInWithPopup(provider)\n    .then((result) => {\n      this.setState({\n          logged_in: true,\n          user_name: result.user.displayName,\n          user_email: result.user.email,\n          user_pic: result.user.photoURL,\n          user_friends: [result.user.email],\n      }, this.get_friends_list)\n    })\n    .catch((error) => console.log(error.message));\n  }\n  logout = () => {\n    firebase.auth().signOut()\n    this.setState({\n        logged_in: false,\n        streak_emoji: \"\\u{1F525}\",\n        user_name: \"Guest\",\n        user_email: \"Guest\",\n        user_friends_dict: [dummy_dict],\n        user_strangers_dict: [dummy_dict],\n        everyone_dict: [dummy_dict],\n        user_pic: \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\",\n    })\n  }\n  check_user = () => {\n    firebase.auth().onAuthStateChanged(function(user) {\n        if (user) {\n            this.setState({\n                user_name: user.displayName,\n                user_email: user.email,\n                user_pic: user.photoURL,\n                logged_in: true,\n            }, this.get_friends_list\n            )\n        }\n    }.bind(this))\n\t}\n\tget_friends_list = () => {\n\n    if (this.state.user_email != \"Guest\") {\n      const userdb = db.collection(\"users\").doc(this.state.user_email);\n      userdb.get().then((doc) => {\n          if (!doc.exists) {\n            // It is a new user and creates a new doc\n            db.collection(\"users\").doc(this.state.user_email).set({\n                email: this.state.user_email,\n                name: this.state.user_name,\n                photoURL: this.state.user_pic,\n                streak_emoji: this.state.streak_emoji,\n                imgs_sent: 0,\n                imgs_received: 0,\n                friends: [this.state.user_email],\n            })\n            .catch((error) => {\n                console.log(\"Couldn't write user to DB, error: \", error);\n            });\n            this.get_all_users()\n          } else {\n            // User has logged in before and has friends\n            this.setState({\n              user_friends: doc.data()[\"friends\"],\n              imgs_sent: doc.data()[\"imgs_sent\"],\n              imgs_received: doc.data()[\"imgs_received\"],\n              streak_emoji: doc.data()[\"streak_emoji\"],\n            }, this.get_all_users);\n          }\n\n      }).catch((error) => {\n          console.log(\"Error getting document:\", error);\n      });\n    }\n  }\n  get_all_users = () => {\n    var friends_meta = [];\n    var strangers_meta = [];\n    var everyone_meta = [];\n    var meta_idx = 0;\n    var strangers_idx = 0;\n    var everyone_idx = 0;\n    const sender = db.collection(\"users\");\n    sender.get().then((doc) => {\n        for (var i=0;i<doc.docs.length;i++) {\n            if (this.state.user_friends.includes(doc.docs[i].data()['email'])) {\n                friends_meta[meta_idx] = doc.docs[i].data()\n                meta_idx = meta_idx + 1;\n            } else {\n                strangers_meta[strangers_idx] = doc.docs[i].data()\n                strangers_idx = strangers_idx + 1;\n            }\n            everyone_meta[everyone_idx] = doc.docs[i].data()\n            everyone_idx = everyone_idx + 1;\n        }\n        this.setState({\n            user_friends_dict: friends_meta,\n            user_strangers_dict: strangers_meta,\n            everyone_dict: everyone_meta,\n        })\n    });\n  }\n  componentDidMount() {\n      this.check_user();\n      this.set_device();\n  }\n\n\n  render() {\n    return (\n      <BindKeyboardSwipeableViews enableMouseEvents style={Object.assign({width: this.state.width, height: this.state.height, position: 'absolute', top: '0%', left: '0%'})}>\n        <div style={Object.assign({backgroundColor: 'white', minHeight: '100vh', width: '100%'})}>\n          <Helmet>\n            <meta name=\"viewport\" content=\"height=device-height, width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"></meta>\n          </Helmet>\n          <Messages\n            user_email={this.state.user_email}\n            user_name={this.state.user_name}\n            user_pic={this.state.user_pic}\n            user_friends_dict={this.state.user_friends_dict}\n            user_strangers_dict={this.state.user_strangers_dict}\n            everyone_dict={this.state.everyone_dict}\n            logged_in={this.state.logged_in}\n            login={this.login.bind(this)}\n            logout={this.logout.bind(this)}\n            get_friends_list={this.get_friends_list.bind(this)}\n            get_all_users={this.get_all_users.bind(this)}\n            friends_list={this.state.user_friends}\n            streak_emoji={this.state.streak_emoji}\n          />\n        </div>\n        <div style={Object.assign({backgroundColor: 'Plum'})} >\n          {/* <Helmet>\n            <meta name=\"viewport\" content=\"height=device-height, width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=yes\"></meta>\n          </Helmet> */}\n          <Camera\n            height={this.state.height}\n            width={this.state.width}\n            mobile={this.state.mobile}\n            user_email={this.state.user_email}\n            user_name={this.state.user_name}\n            user_pic={this.state.user_pic}\n            user_friends_dict={this.state.user_friends_dict}\n            user_strangers_dict={this.state.user_strangers_dict}\n            everyone_dict={this.state.everyone_dict}\n            logged_in={this.state.logged_in}\n            login={this.login.bind(this)}\n            logout={this.logout.bind(this)}\n            get_friends_list={this.get_friends_list.bind(this)}\n            get_all_users={this.get_all_users.bind(this)}\n            friends_list={this.state.user_friends}\n          />\n        </div>\n      </BindKeyboardSwipeableViews>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Router, Route, Switch } from \"react-router\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}