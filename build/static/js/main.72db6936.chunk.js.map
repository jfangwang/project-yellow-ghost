{"version":3,"sources":["Firebase.js","Friends.js","MessagesNavbar.js","Message.js","Messages.js","Camera.js","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","provider","GoogleAuthProvider","Friends","props","useState","removed","setRemoved","friends","collection","doc","user_email","className","src","friend_pic","alt","friend_name","friend_username","onClick","friends_list","splice","indexOf","update","Strangers","added","setAdded","stranger_pic","stranger_name","stranger_username","push","Everyone","MessagesNavbar","show_friends","setShow_Friends","user_name","login","user_pic","logout","get_friends_list","user_strangers_dict","user_friends_dict","everyone_dict","type","placeholder","logged_in","length","map","x","photoURL","name","email","Message","status","setStatus","time","setTime","update_messages","orderBy","onSnapshot","snapshot","i","docs","data","sender_email","toDate","toUTCString","status_output","icon","img","setImg","imgid","setImgid","useEffect","delete","then","console","log","catch","error","sender","get","ref","url","arr","to","profile_url","sender_name","date","locale","streak_num","streak_emoji","Messages","get_all_users","Camera","setState","width","window","innerWidth","height","innerHeight","faceMode","send","user","currentUser","id","uuid","displayName","to_users","putString","state","image","on","mailList","child","getDownloadURL","set","imageURL","avatarURL","read","timeStamp","FieldValue","serverTimestamp","screen","close","send_to","capture","webcam","getScreenshot","setRef","addEventListener","this","videoConstraints","facingMode","screenshotFormat","audio","mirrored","Component","BindKeyboardSwipeableViews","bindKeyboard","SwipeableViews","default_pic","dummy_dict","imgs_sent","imgs_received","App","signInWithPopup","result","user_friends","message","signOut","check_user","onAuthStateChanged","bind","exists","friends_meta","strangers_meta","everyone_meta","meta_idx","strangers_idx","everyone_idx","includes","index","enableMouseEvents","style","Object","assign","position","top","left","backgroundColor","minHeight","Helmet","content","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72db6936.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';        // for authentication\nimport 'firebase/storage';     // for storage\nimport 'firebase/database';    // for realtime database\nimport 'firebase/firestore';   // for cloud firestore\nimport 'firebase/messaging';   // for cloud messaging\nimport 'firebase/functions';   // for cloud functions\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAzNigqy7stltnVUU8cAollxCxvW0CNBTE\",\n  authDomain: \"ghost-f8b34.firebaseapp.com\",\n  projectId: \"ghost-f8b34\",\n  storageBucket: \"ghost-f8b34.appspot.com\",\n  messagingSenderId: \"838623299070\",\n  appId: \"1:838623299070:web:b73429fee525b7c01cacaf\",\n  measurementId: \"G-85ZG5FVKQ4\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n// Google auth as a provider for this app, the popup\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { db, auth, storage, provider };","import React, { Component, useState, useEffect } from 'react';\nimport {db} from './Firebase.js';\nimport './Messages.css';\n\nfunction Friends(props) {\n\n\tconst [removed, setRemoved] = useState(false);\n\tconst friends = db.collection(\"users\").doc(props.user_email);\n\n\tconst remove_friend = () => {\n\t\tprops.friends_list.splice(props.friends_list.indexOf(props.friend_username), 1)\n\t\tfriends.update({friends: props.friends_list})\n\t}\n\tconst remove = () => {\n\t\tremove_friend();\n\t\tsetRemoved(true);\n\t}\n\n    return (\n        <li className=\"add-friends-content\">\n\t\t\t\t\t\t<div className=\"add-box-1\">\n\t\t\t\t\t\t<img className=\"message-avatar\" src={props.friend_pic} alt=\"Avatar\"/>\n\t\t\t\t\t\t<ul className=\"message-info\">\n\t\t\t\t\t\t\t\t<h3>{props.friend_name}</h3>\n\t\t\t\t\t\t\t\t<p>{props.friend_username}</p>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"add-box-2\">\n\t\t\t\t\t\t{removed ? <p className=\"removed\"><b>Removed!</b></p> : <button onClick={remove}><b>Remove</b></button>}\n\t\t\t\t\t\t</div>\n        </li>\n    )\n}\n\nfunction Strangers(props) {\n\n\tconst [added, setAdded] = useState(false);\n\tconst friends = db.collection(\"users\").doc(props.user_email);\n\t\n\tconst add_friend = () => {\n\t\tprops.friends_list.push(props.stranger_username);\n\t\tfriends.update({friends: props.friends_list})\n\t}\n\n\tconst add_true = () => {\n\t\tadd_friend();\n\t\tsetAdded(true);\n\t}\n\n   return (\n\t   <li className=\"add-friends-content\">\n\t\t\t\t\t   <div className=\"add-box-1\">\n\t\t\t\t\t   <img className=\"message-avatar\" src={props.stranger_pic} alt=\"Avatar\"/>\n\t\t\t\t\t   <ul className=\"message-info\">\n\t\t\t\t\t\t\t   <h3>{props.stranger_name}</h3>\n\t\t\t\t\t\t\t   <p>{props.stranger_username}</p>\n\t\t\t\t\t   </ul>\n\t\t\t\t\t   </div>\n\t\t\t\t\t   <div className=\"add-box-2\">\n\t\t\t\t\t\t   {added ? <p className=\"added\"><b>Added!</b></p> : <button onClick={add_true}><b>Add</b></button>}\n\t\t\t\t\t   </div>\n\t   </li>\n   )\n}\n\nfunction Everyone(props) {\n\n   return (\n\t   <li className=\"add-friends-content\">\n\t\t\t\t\t   <div className=\"add-box-1\">\n\t\t\t\t\t   <img className=\"message-avatar\" src={props.stranger_pic} alt=\"Avatar\"/>\n\t\t\t\t\t   <ul className=\"message-info\">\n\t\t\t\t\t\t\t   <h3>{props.stranger_name}</h3>\n\t\t\t\t\t\t\t   <p>{props.stranger_username}</p>\n\t\t\t\t\t   </ul>\n\t\t\t\t\t   </div>\n\t\t\t\t\t   <div className=\"add-box-2\">\n\t\t\t\t\t   </div>\n\t   </li>\n   )\n}\nexport {Friends, Strangers, Everyone}","import React, { Component, useState, useEffect } from 'react';\nimport {Friends, Strangers, Everyone} from './Friends.js';\nimport './Messages.css';\n\nexport default function MessagesNavbar(props) {\n\tconst [show_friends, setShow_Friends] = useState(false);\n\n\tconst show_friends_button = () => {\n\t\tprops.get_friends_list();\n\t\tsetShow_Friends(true);\n\t}\n\tconst hide_friends_button = ()=> {\n\t\tprops.get_friends_list();\n\t\tsetShow_Friends(false);\n\t}\n\n\treturn (\n\t\t<>\n\t\t{ !show_friends ? \n\t\t<div className=\"navbar\">\n\t\t<div className=\"nav-box-1\">\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t{props.user_name == \"Guest\" ?\n\t\t\t\t\t<a onClick={props.login}>Sign In</a> :\n\t\t\t\t\t<img className=\"profile-pic\" src={props.user_pic} onClick={props.logout} alt=\"Profile Picture\" />\n\t\t\t\t\t}\n\t\t\t\t</li>\n\t\t\t\t<li><a>Search</a></li>\n\t\t\t</ul>\n\t\t</div>\n\t\t<div className=\"nav-box-2\">\n\t\t\t<h1>Chat</h1>\n\t\t</div>\n\t\t<div className=\"nav-box-3\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li><a onClick={show_friends_button}>Add Friend</a></li>\n\t\t\t\t\t<li><a>New Chat</a></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t\t: null}\n\t\t{ show_friends && props.user_strangers_dict != null &&\n\t\tprops.user_friends_dict != null && props.everyone_dict != null ?\n\t\t<div className=\"add-friends\">\n\t\t\t<div className=\"add-navbar\">\n\t\t\t\t<div className=\"nav-box-1\"><ul><li><a onClick={hide_friends_button}><b>Close</b></a></li></ul></div>\n\t\t\t\t<div className=\"nav-box-2\"><h1>Add Friends</h1></div>\n\t\t\t\t<div className=\"nav-box-3\"><ul><li><a><b>. . .</b></a></li></ul></div>\n\t\t\t</div>\n\t\t\t<div className=\"add-body\">\n\t\t\t\t<div className=\"search-bar\"><input type=\"search\" placeholder=\"Find Friends\"></input></div>\n\t\t\t\t<div className=\"add-title-navbar\"><h3 className=\"quick-add\">Quick Add ({props.logged_in ? props.user_strangers_dict.length : 0})</h3></div>\n\t\t\t\t<ul className=\"add-list list-container\">\n\t\t\t\t{props.logged_in ? props.user_strangers_dict.map((x) => (\n\t\t\t\t\t<Strangers \n\t\t\t\t\t\tstranger_pic={x.photoURL} \n\t\t\t\t\t\tstranger_name={x.name}\n\t\t\t\t\t\tstranger_username={x.email}  \n\t\t\t\t\t\tfriends_list={props.friends_list} \n\t\t\t\t\t\tuser_email={props.user_email}\n\t\t\t\t\t\tget_friends_list={props.get_friends_list}\n\t\t\t\t\t/>))\n\t\t\t\t\t:\n\t\t\t\t\tnull\n\t\t\t\t}\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"add-title-navbar\"><h3 className=\"quick-add\">Friends ({props.user_friends_dict.length})</h3></div>\n\t\t\t\t<ul className=\"add-list list-container\">\n\t\t\t\t{props.user_friends_dict.map((x) => (\n\t\t\t\t\t<Friends \n\t\t\t\t\t\tfriend_pic={x.photoURL} \n\t\t\t\t\t\tfriend_name={x.name} \n\t\t\t\t\t\tfriend_username={x.email} \n\t\t\t\t\t\tfriends_list={props.friends_list}\n\t\t\t\t\t\tuser_email={props.user_email}  \n\t\t\t\t\t\tget_friends_list={props.get_friends_list}\n\t\t\t\t\t/>))\n\t\t\t\t}\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"add-title-navbar\"><h3 className=\"quick-add\">Everyone ({props.everyone_dict.length})</h3></div>\n\t\t\t\t<ul className=\"add-list list-container\">\n\t\t\t\t{props.everyone_dict.map((x) => (\n\t\t\t\t\t<Everyone stranger_pic={x.photoURL}\n\t\t\t\t\t\tstranger_name={x.name} \n\t\t\t\t\t\tstranger_username={x.email} \n\t\t\t\t\t/>))}\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"add-footer\">\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t : null}\n\t\t</>\n\t);\n}\n","import React, { Component, useState, useEffect } from 'react';\nimport {auth, storage, db} from './Firebase.js';\nimport ReactTimeAgo from 'react-timeago';\nimport firebase from 'firebase/app';\nimport './Messages.css';\n\n/*\n * Function - Message(sender_name)\n * @sender_name: Name of person who sent the image\n * Return: Loaded images requested from Firebase\n * \n * Description:\n * A request (/post/current_user/) is sent to Firebase to get current_user's received images.\n*/\n\nexport default function Message(props) {\n\n    // Check Firebase if user has any new messages\n\n    const [status, setStatus] = useState(\"Received\");\n    const [time, setTime] = useState(0);\n    const [imgArr, setImgArr] = useState([]);\n\n    const update_messages = () => {\n        db.collection('posts')\n        .doc(props.user_email)\n        .collection(\"Received\")\n        .orderBy(\"timeStamp\", \"desc\")\n        .onSnapshot((snapshot) => {\n            var i = 0;\n            // Filters out all the photos sent by the sender\n            while (i < snapshot.docs.length && snapshot.docs[i].data()[\"email\"] != props.sender_email) { i = i + 1; }\n            if (i < snapshot.docs.length) {\n                if (snapshot.docs[i].data()[\"email\"] == props.sender_email) {\n                    setStatus(\"New Snap\");\n                    if (snapshot.docs[i].data()[\"timeStamp\"] != null) {\n                        setTime(snapshot.docs[i].data()[\"timeStamp\"].toDate().toUTCString());\n                    }\n                } else {\n                    setStatus(\"Received\");\n                }\n            } else {\n                setStatus(\"Received\");\n            }\n        })\n    }\n\n    var status_output = <p>{status}</p>;\n    var icon = <div className=\"message-received\"/>;\n\n    if (status === \"New Snap\"){\n        icon = <div className=\"message-new\" />\n        status_output = <p className=\"red\"><b>{status}</b></p>\n    } else if (status === \"Received\") {\n        icon = <div className=\"message-received\"/>\n    } else if (status === \"Sent\") {\n        icon = <div className=\"message-sent\"/>\n    } else if (status === \"Opened\") {\n        icon = <div className=\"message-opened\"/>\n    }\n\n    const [img, setImg] = useState(null);\n    const [imgid, setImgid] = useState(null);\n\n    const open = () => {\n        console.log(\"opening snap\", props.user_email);\n        db.collection('posts')\n        .doc(props.user_email)\n        .collection(\"Received\")\n        .orderBy(\"timeStamp\", \"desc\")\n        .get().then((snapshot) => {\n            var i = 0;\n            while (i < snapshot.docs.length && snapshot.docs[i].data()[\"email\"] != props.sender_email) { i = i + 1; }\n            if (i < snapshot.docs.length) {\n                if (snapshot.docs[i].data()[\"email\"] == props.sender_email) {\n                    if (snapshot.docs[i].data() != null) {\n                        setImg(snapshot.docs[i].data()[\"imageURL\"]);\n                        setImgid(snapshot.docs[i].data()[\"id\"]);\n                    }\n                } else {\n                    setStatus(\"Received\");\n                }\n            } else {\n                setStatus(\"Received\");\n            }\n        })\n    }\n\n    const delete_photo = () => {\n        storage.ref(`posts/${imgid}`).delete()\n        .then((url) => {\n            console.log(\"Deleted from storage: \", imgid);\n        })\n        .catch((error) => {\n            console.log(\"TRIED DELETING: \", imgid)\n        });\n        db.collection('posts').doc(imgid).delete().then(() => {\n          console.log(\"Deleted from firestore\");\n        }).catch((error) => {\n          console.error(\"Error removing document: \", error);\n        });\n      }\n\n    const close = () => {\n        setImg(null);\n        const img = db.collection('posts').doc(props.user_email).collection(\"Received\").doc(imgid);\n        img.delete().then(() => {\n            console.log(\"Document deleted\");\n        }).catch((error) => {\n            console.log(\"Error removing document: \", error);\n        })\n        update_messages();\n        const sender = db.collection('posts').doc(props.sender_email).collection(\"Sent\").doc(imgid);\n        sender.get().then((doc) => {\n            if (doc.data()[\"to\"].length == 1) {\n                sender.delete().then(() => {\n                    console.log(\"sender document deleted, everyone saw the pic\");\n                }).catch((error) => {\n                    console.log(\"Could not delete sender's document\");\n                })\n                delete_photo();\n            } else {\n                // Update list if there are other peole who have to see the post\n                var i = 0;\n                var arr = []\n                for (i=0; i<doc.data()[\"to\"].length; i=i+1) {\n                    if (doc.data()[\"to\"][i] != props.user_email){\n                        arr[i] = doc.data()[\"to\"][i];\n                    }\n                }\n                sender.update({to: arr}).then(() => {\n                    console.log(\"Updated sender's list\");\n                }).catch((error) => {\n                    console.log(\"could not update list: \", error);\n                })\n            }\n        })\n    }\n\n    useEffect(() => {\n        update_messages();\n    })\n    \n    return (\n        <>\n        {img ? <div className=\"image-background\" onClick={close}><img className=\"image\" src={img} /></div> :\n            <li className=\"message-content\" onClick={open}>\n                <img className=\"message-avatar\" src={props.profile_url} alt=\"Avatar\"/>\n                <ul className=\"message-info\">\n                    <h3>{props.sender_name}</h3>\n                    <div className=\"message-sub-info\">\n                        {icon}\n                        {status_output}\n                        {time != 0 ? <p><ReactTimeAgo date={time} locale=\"en-US\"/></p> : null }\n                        {props.streak_num > 0 ? <p>{props.streak_num}{props.streak_emoji}</p> : null}\n                    </div>\n                </ul>\n            </li>\n        }\n        </>\n    );\n\n}\n","import React, { Component } from 'react';\nimport './Messages.css';\nimport MessagesNavbar from './MessagesNavbar';\nimport Message from './Message';\n\n\nfunction Messages(props) {\n    return (\n    <div className=\"messages-screen\">\n        <MessagesNavbar\n            user_email={props.user_email}\n            user_name={props.user_name}\n            user_pic={props.user_pic}\n            login={props.login}\n            logout={props.logout}\n            user_friends_dict={props.user_friends_dict}\n            user_strangers_dict={props.user_strangers_dict}\n            everyone_dict={props.everyone_dict}\n            get_friends_list={props.get_friends_list}\n            get_all_users={props.get_all_users}\n            friends_list={props.friends_list}\n            logged_in={props.logged_in}\n        />\n        <ul className=\"messages-list\">\n        {props.logged_in ? null :\n        <li className=\"welcome-statement\">Welcome to Project Yellow Ghost, a web app version of SnapChat. This was a project developed by Jonathan Wang\n            and this was his final project for school. Right now, you are on a local guest account for you to try out. Feel free to sign in at the top if \n            you want to start using this product. Happy Snapping!\n        </li>\n        }\n        {props.user_friends_dict.map((x) => (\n            <Message \n                sender_email={x.email} \n                profile_url={x.photoURL} \n                sender_name={x.name} \n                user_email={props.user_email}\n                streak_emoji={props.streak_emoji}\n                logged_in={props.logged_in}\n            />))\n        }\n        </ul>\n    </div>\n    );\n}\n\nexport default Messages;","import React, { Component } from 'react';\nimport Webcam from \"react-webcam\";\nimport { v4 as uuid } from \"uuid\";\nimport './Camera.css';\nimport {storage, db} from './Firebase.js';\nimport firebase from 'firebase/app';\n\n\nclass Camera extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: window.innerWidth,\n            height: window.innerHeight,\n            image: null,\n            screen: 'camera',\n\n        }\n        window.addEventListener(\"resize\", this.update);\n    }\n\n    update = () => {\n        this.setState({\n          width: window.innerWidth,\n          height: window.innerHeight,\n          faceMode: \"user\"\n        });\n    };\n\n    send = () => {\n        const user = firebase.auth().currentUser;\n        const id = uuid();\n        var email = user.email;\n        var name = user.displayName;\n        var avatarURL = \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\";\n\t\t\t\tvar to_users = [email]\n        if (user) {\n\n        }\n        const uploadTask = storage.ref(`posts/${id}`).putString(this.state.image, 'data_url');\n          uploadTask.on(\n          \"state_changed\",\n          snapshot => {},\n          error => {\n            console.log(error);\n          },\n          () => {\n            var i = 0;\n            for(i=0; i<to_users.length; i++) {\n              console.log(typeof(to_users[i]), to_users[i]);\n              var mailList = to_users[i];\n              storage\n              .ref(\"posts\")\n              .child(id)\n              .getDownloadURL()\n              .then(url => {\n                db.collection('posts').doc(mailList).collection(\"Received\").doc(id).set({\n                  imageURL: url,\n                  id: id,\n                  email: email,\n                  name: name,\n                  avatarURL: avatarURL,\n                  read: false,\n                  timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\n                  to: to_users,\n                })\n\t\t\t\t\t\t\t\tconsole.log(\"Photo Sent\");\n\t\t\t\t\t\t\t\tthis.setState({ image: null, screen: 'camera' })\n              })\n            }\n            db.collection('posts').doc(email).collection(\"Sent\").doc(id).set({\n              id: id,\n              email: email,\n              timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\n              to: to_users,\n            })\n          })\n    }\n\n    close = () => {\n        this.setState({ image: null, screen: \"camera\" })\n    }\n\n    send_to = () => {\n      this.setState({screen: \"send_to\"})\n    }\n\n    capture = () => {\n        const img = this.webcam.getScreenshot();\n        this.setState({ image: img, screen: \"captured\" })\n    }\n\n    setRef = (webcam) => {\n        this.webcam = webcam;\n      };\n\n    render() {\n        return (\n            <>\n                {/* { this.state.image ? <img src={this.state.image} alt=\"asdf\"/> : <Webcam\n                    ref={this.setRef}\n                    videoConstraints={{facingMode: this.state.faceMode, width: this.state.width, height: this.state.height}}\n                    screenshotFormat=\"image/jpeg\"\n                    audio={false}\n                    mirrored={true}\n                    className=\"webcam\"\n                />}\n\n                { this.state.image || this.state.show_send_list ? <button className=\"capture\" onClick={this.close}>Close</button> : <button className=\"capture\" onClick={this.capture}>Capture</button> }\n                { this.state.image? <button className=\"send\">Send to...</button> : null }\n                { this.state.show_send_list ? <button className=\"send\" onClick={this.send}>Send</button> : null} */}\n              {this.state.screen ===\"camera\" ? \n              <div className=\"cam-tab\">\n                <Webcam\n                  ref={this.setRef}\n                  videoConstraints={{facingMode: this.state.faceMode, width: this.state.width, height: this.state.height}}\n                  screenshotFormat=\"image/jpeg\"\n                  audio={false}\n                  mirrored={true}\n                  className=\"webcam\"\n                />\n                <button className=\"capture\" onClick={this.capture}>Capture</button>\n              </div> : null\n              }\n              {this.state.screen ===\"captured\" && this.state.image ? \n              <div className=\"cam-tab\">\n                <img src={this.state.image}></img>\n                <button className=\"capture\" onClick={this.send_to}>Send to</button>\n                <button className=\"send\" onClick={this.close}>Close</button>\n              </div> : null\n              }\n              {this.state.screen ===\"send_to\" && this.state.image  ? \n                <div className=\"user-list\">\n                \n                <button className=\"send\" onClick={this.send}>Send</button>\n                <button className=\"capture\" onClick={this.close}>Close</button>\n              </div> : null\n              }\n            \n            </>\n        );\n    }\n}\n\nexport default Camera;","import React from 'react';\nimport Helmet from 'react-helmet';\nimport SwipeableViews from 'react-swipeable-views';\nimport { bindKeyboard } from 'react-swipeable-views-utils';\nimport {auth, storage, db, provider} from './Firebase.js';\nimport firebase from 'firebase/app';\n// import 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport Messages from './Messages.js';\nimport Camera from './Camera.js';\n\n\n// All the firebase calls will occur here to minimize usage\n\nconst BindKeyboardSwipeableViews = bindKeyboard(SwipeableViews);\nvar default_pic = \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\"\nvar dummy_dict = {\n  email: \"Guest@project-yellow-ghost.com\",\n  name:\"Guest\",\n  photoURL: default_pic,\n  streak_emoji:\"\\u{1F525}\",\n  imgs_sent: 0,\n  imgs_received: 0,\n  friends: ['Guest@project-yellow-ghost.com'],\n}\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // For swiping screen\n      index: 0,\n      height: window.innerHeight,\n      width: window.innerWidth,\n      // All for Messages\n      logged_in: false,\n      user_friends_dict: [dummy_dict],\n      user_strangers_dict: null,\n      everyone_dict: [dummy_dict],\n      // Properties for every user on firebase\n      user_email: \"Guest\",\n      user_name: \"Guest\",\n      user_pic: default_pic,\n      streak_emoji: \"\\u{1F525}\",\n      imgs_sent: 0,\n      imgs_received: 0,\n      user_friends: [\"Guest@mail\"]\n    }\n    window.addEventListener(\"resize\", this.update);\n  }\n\n  update = () => {\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  };\n\n  // For Messages Component\n\n  login = () => {\n    auth.signInWithPopup(provider)\n    .then((result) => {\n      this.setState({\n          logged_in: true,\n          user_name: result.user.displayName,\n          user_email: result.user.email,\n          user_pic: result.user.photoURL,\n          user_friends: [result.user.email],\n      }, this.get_friends_list)\n    })\n    .catch((error) => console.log(error.message));\n  }\n  logout = () => {\n    firebase.auth().signOut()\n    this.setState({\n        logged_in: false,\n        streak_emoji: \"\\u{1F525}\",\n        user_name: \"Guest\",\n        user_email: \"Guest\",\n        user_friends_dict: [dummy_dict],\n        user_strangers_dict: null,\n        everyone_dict: [dummy_dict],\n        user_pic: \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\",\n    })\n  }\n  check_user = () => {\n    firebase.auth().onAuthStateChanged(function(user) {\n        if (user) {\n            this.setState({\n                user_name: user.displayName,\n                user_email: user.email,\n                user_pic: user.photoURL,\n                logged_in: true,\n            }, this.get_friends_list\n            )\n        }\n    }.bind(this))\n\t}\n\tget_friends_list = () => {\n\n    const userdb = db.collection(\"users\").doc(this.state.user_email);\n        userdb.get().then((doc) => {\n            if (!doc.exists) {\n              // It is a new user and creates a new doc\n              db.collection(\"users\").doc(this.state.user_email).set({\n                  email: this.state.user_email,\n                  name: this.state.user_name,\n                  photoURL: this.state.user_pic,\n                  streak_emoji: this.state.streak_emoji,\n                  imgs_sent: 0,\n                  imgs_received: 0,\n                  friends: [this.state.user_email],\n              })\n              .catch((error) => {\n                  console.log(\"Couldn't write user to DB, error: \", error);\n              });\n              this.get_all_users()\n            } else {\n              // User has logged in before and has friends\n              this.setState({\n                user_friends: doc.data()[\"friends\"],\n                imgs_sent: doc.data()[\"imgs_sent\"],\n                imgs_received: doc.data()[\"imgs_received\"],\n                streak_emoji: doc.data()[\"streak_emoji\"],\n              }, this.get_all_users);\n            }\n\n        }).catch((error) => {\n            console.log(\"Error getting document:\", error);\n        });\n  }\n  get_all_users = () => {\n    var friends_meta = [];\n    var strangers_meta = [];\n    var everyone_meta = [];\n    var meta_idx = 0;\n    var strangers_idx = 0;\n    var everyone_idx = 0;\n    const sender = db.collection(\"users\");\n    sender.get().then((doc) => {\n        for (var i=0;i<doc.docs.length;i++) {\n            if (this.state.user_friends.includes(doc.docs[i].data()['email'])) {\n                friends_meta[meta_idx] = doc.docs[i].data()\n                meta_idx = meta_idx + 1;\n            } else {\n                strangers_meta[strangers_idx] = doc.docs[i].data()\n                strangers_idx = strangers_idx + 1;\n            }\n            everyone_meta[everyone_idx] = doc.docs[i].data()\n            everyone_idx = everyone_idx + 1;\n        }\n        this.setState({\n            user_friends_dict: friends_meta,\n            user_strangers_dict: strangers_meta,\n            everyone_dict: everyone_meta,\n        })\n    });\n  }\n  componentDidMount() {\n      this.check_user();\n  }\n\n\n  render() {\n    return (\n      <BindKeyboardSwipeableViews enableMouseEvents style={Object.assign({width: this.state.width, height: this.state.height, position: 'absolute', top: '0%', left: '0%'})}>\n        <div style={Object.assign({backgroundColor: 'white', minHeight: '100vh', width: '100%'})}>\n          <Helmet>\n            <meta name=\"viewport\" content=\"height=device-height, width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"></meta>\n          </Helmet>\n          <Messages\n            user_email={this.state.user_email}\n            user_name={this.state.user_name}\n            user_pic={this.state.user_pic}\n            user_friends_dict={this.state.user_friends_dict}\n            user_strangers_dict={this.state.user_strangers_dict}\n            everyone_dict={this.state.everyone_dict}\n            logged_in={this.state.logged_in}\n            login={this.login.bind(this)}\n            logout={this.logout.bind(this)}\n            get_friends_list={this.get_friends_list.bind(this)}\n            get_all_users={this.get_all_users.bind(this)}\n            friends_list={this.state.user_friends}\n            streak_emoji={this.state.streak_emoji}\n          />\n        </div>\n        <div style={Object.assign({backgroundColor: 'Plum'})} >\n          <Helmet>\n            <meta name=\"viewport\" content=\"height=device-height, width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=yes\"></meta>\n          </Helmet>\n          <Camera/>\n        </div>\n      </BindKeyboardSwipeableViews>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Router, Route, Switch } from \"react-router\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}