{"version":3,"sources":["Firebase.js","Friends.js","MessagesNavbar.js","Message.js","Messages.js","Camera.js","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","provider","GoogleAuthProvider","Friends","props","useState","removed","setRemoved","friends","collection","doc","user_email","className","src","friend_pic","alt","friend_name","friend_username","onClick","friends_list","splice","indexOf","update","Strangers","added","setAdded","stranger_pic","stranger_name","stranger_username","push","Everyone","MessagesNavbar","show_friends","setShow_Friends","user_name","login","user_pic","logout","get_friends_list","type","placeholder","logged_in","user_strangers","length","map","x","photoURL","name","email","user_friends","everyone","Message","status","setStatus","time","setTime","update_messages","orderBy","onSnapshot","snapshot","i","docs","data","sender_email","toDate","toUTCString","status_output","icon","img","setImg","imgid","setImgid","useEffect","console","log","delete","then","catch","error","sender","get","ref","url","arr","to","profile_url","sender_name","date","locale","streak_num","streak_image","bindKeyboard","SwipeableViews","dummy_dict","streak_emoji","Messages","signInWithPopup","result","setState","user","displayName","exists","set","state","message","signOut","check_user","onAuthStateChanged","this","bind","hasOwnProperty","get_messages","friends_meta","strangers_meta","everyone_meta","meta_idx","strangers_idx","everyone_idx","includes","Component","Camera","width","window","innerWidth","height","innerHeight","faceMode","send","currentUser","id","uuid","to_users","putString","image","on","mailList","child","getDownloadURL","imageURL","avatarURL","read","timeStamp","FieldValue","serverTimestamp","screen","close","send_to","capture","webcam","getScreenshot","setRef","addEventListener","videoConstraints","facingMode","screenshotFormat","audio","mirrored","BindKeyboardSwipeableViews","App","index","enableMouseEvents","style","Object","assign","position","top","left","backgroundColor","minHeight","Helmet","content","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27dba765.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';        // for authentication\nimport 'firebase/storage';     // for storage\nimport 'firebase/database';    // for realtime database\nimport 'firebase/firestore';   // for cloud firestore\nimport 'firebase/messaging';   // for cloud messaging\nimport 'firebase/functions';   // for cloud functions\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAzNigqy7stltnVUU8cAollxCxvW0CNBTE\",\n  authDomain: \"ghost-f8b34.firebaseapp.com\",\n  projectId: \"ghost-f8b34\",\n  storageBucket: \"ghost-f8b34.appspot.com\",\n  messagingSenderId: \"838623299070\",\n  appId: \"1:838623299070:web:b73429fee525b7c01cacaf\",\n  measurementId: \"G-85ZG5FVKQ4\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n// Google auth as a provider for this app, the popup\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { db, auth, storage, provider };","import React, { Component, useState, useEffect } from 'react';\nimport {auth, storage, db} from './Firebase.js';\nimport firebase from 'firebase/app';\nimport './Messages.css';\n\nfunction Friends(props) {\n\n\tconst [removed, setRemoved] = useState(false);\n\tconst friends = db.collection(\"users\").doc(props.user_email);\n\n\tconst remove_friend = () => {\n\t\tprops.friends_list.splice(props.friends_list.indexOf(props.friend_username), 1)\n\t\t// console.log(props.friends_list, props.friends_list.indexOf(props.friend_username), props.friend_username);\n\t\tfriends.update({friends: props.friends_list})\n\t}\n\tconst remove = () => {\n\t\tremove_friend();\n\t\t// props.get_friends_list();\n\t\tsetRemoved(true);\n\t}\n\n    return (\n        <li className=\"add-friends-content\">\n\t\t\t\t\t\t<div className=\"add-box-1\">\n\t\t\t\t\t\t<img className=\"message-avatar\" src={props.friend_pic} alt=\"Avatar\"/>\n\t\t\t\t\t\t<ul className=\"message-info\">\n\t\t\t\t\t\t\t\t<h3>{props.friend_name}</h3>\n\t\t\t\t\t\t\t\t<p>{props.friend_username}</p>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"add-box-2\">\n\t\t\t\t\t\t{removed ? <p className=\"removed\"><b>Removed!</b></p> : <button onClick={remove}><b>Remove</b></button>}\n\t\t\t\t\t\t</div>\n        </li>\n    )\n}\n\nfunction Strangers(props) {\n\n\tconst [added, setAdded] = useState(false);\n\tconst friends = db.collection(\"users\").doc(props.user_email);\n\t\n\tconst add_friend = () => {\n\t\tprops.friends_list.push(props.stranger_username);\n\t\t// console.log(\"adding stranger\", props.stranger_username, props.user_email, props.friends_list);\n\t\tfriends.update({friends: props.friends_list})\n\t}\n\n\tconst add_true = () => {\n\t\tadd_friend();\n\t\t// props.get_friends_list();\n\t\tsetAdded(true);\n\t}\n\n   return (\n\t   <li className=\"add-friends-content\">\n\t\t\t\t\t   <div className=\"add-box-1\">\n\t\t\t\t\t   <img className=\"message-avatar\" src={props.stranger_pic} alt=\"Avatar\"/>\n\t\t\t\t\t   <ul className=\"message-info\">\n\t\t\t\t\t\t\t   <h3>{props.stranger_name}</h3>\n\t\t\t\t\t\t\t   <p>{props.stranger_username}</p>\n\t\t\t\t\t   </ul>\n\t\t\t\t\t   </div>\n\t\t\t\t\t   <div className=\"add-box-2\">\n\t\t\t\t\t\t   {added ? <p className=\"added\"><b>Added!</b></p> : <button onClick={add_true}><b>Add</b></button>}\n\t\t\t\t\t   </div>\n\t   </li>\n   )\n}\n\nfunction Everyone(props) {\n\n   return (\n\t   <li className=\"add-friends-content\">\n\t\t\t\t\t   <div className=\"add-box-1\">\n\t\t\t\t\t   <img className=\"message-avatar\" src={props.stranger_pic} alt=\"Avatar\"/>\n\t\t\t\t\t   <ul className=\"message-info\">\n\t\t\t\t\t\t\t   <h3>{props.stranger_name}</h3>\n\t\t\t\t\t\t\t   <p>{props.stranger_username}</p>\n\t\t\t\t\t   </ul>\n\t\t\t\t\t   </div>\n\t\t\t\t\t   <div className=\"add-box-2\">\n\t\t\t\t\t\t   {/* <button><b>Remove</b></button> */}\n\t\t\t\t\t   </div>\n\t   </li>\n   )\n}\nexport {Friends, Strangers, Everyone}","import React, { Component, useState, useEffect } from 'react';\nimport {auth, storage, db} from './Firebase.js';\nimport firebase from 'firebase/app';\nimport {Friends, Strangers, Everyone} from './Friends.js';\nimport './Messages.css';\n\nexport default function MessagesNavbar(props) {\n\tconst [show_friends, setShow_Friends] = useState(false);\n\n\tconst show_friends_button = () => {\n\t\tsetShow_Friends(true);\n\t\tprops.get_friends_list();\n\t}\n\tconst hide_friends_button = ()=> {\n\t\tsetShow_Friends(false);\n\t\tprops.get_friends_list();\n\t}\n\n\treturn (\n\t\t<>\n\t\t{ !show_friends ? \n\t\t<div className=\"navbar\">\n\t\t<div className=\"nav-box-1\">\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t{props.user_name == \"Guest\" ?\n\t\t\t\t\t<a onClick={props.login}>Sign In</a> :\n\t\t\t\t\t<img className=\"profile-pic\" src={props.user_pic} onClick={props.logout} alt=\"Profile Picture\" />\n\t\t\t\t\t}\n\t\t\t\t</li>\n\t\t\t\t<li><a>Search</a></li>\n\t\t\t</ul>\n\t\t</div>\n\t\t<div className=\"nav-box-2\">\n\t\t\t<h1>Chat</h1>\n\t\t</div>\n\t\t<div className=\"nav-box-3\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li><a onClick={show_friends_button}>Add Friend</a></li>\n\t\t\t\t\t<li><a>New Chat</a></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t\t: null}\n\t\t{ show_friends ?\n\t\t<div className=\"add-friends\">\n\t\t\t<div className=\"add-navbar\">\n\t\t\t\t<div className=\"nav-box-1\"><ul><li><a onClick={hide_friends_button}><b>Close</b></a></li></ul></div>\n\t\t\t\t<div className=\"nav-box-2\"><h1>Add Friends</h1></div>\n\t\t\t\t<div className=\"nav-box-3\"><ul><li><a><b>. . .</b></a></li></ul></div>\n\t\t\t</div>\n\t\t\t<div className=\"add-body\">\n\t\t\t\t<div className=\"search-bar\"><input type=\"search\" placeholder=\"Find Friends\"></input></div>\n\t\t\t\t<div className=\"add-title-navbar\"><h3 className=\"quick-add\">Quick Add ({props.logged_in ? props.user_strangers.length : 0})</h3></div>\n\t\t\t\t<ul className=\"add-list list-container\">\n\t\t\t\t{props.logged_in ? props.user_strangers.map((x) => (\n\t\t\t\t\t<Strangers \n\t\t\t\t\t\tstranger_pic={x.photoURL} \n\t\t\t\t\t\tstranger_name={x.name}\n\t\t\t\t\t\tstranger_username={x.email}  \n\t\t\t\t\t\tfriends_list={props.friends_list} \n\t\t\t\t\t\tuser_email={props.user_email}\n\t\t\t\t\t\tget_friends_list={props.get_friends_list}\n\t\t\t\t\t/>))\n\t\t\t\t\t:\n\t\t\t\t\tnull\n\t\t\t\t}\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"add-title-navbar\"><h3 className=\"quick-add\">Friends ({props.user_friends.length})</h3></div>\n\t\t\t\t<ul className=\"add-list list-container\">\n\t\t\t\t{props.user_friends.map((x) => (\n\t\t\t\t\t<Friends \n\t\t\t\t\t\tfriend_pic={x.photoURL} \n\t\t\t\t\t\tfriend_name={x.name} \n\t\t\t\t\t\tfriend_username={x.email} \n\t\t\t\t\t\tfriends_list={props.friends_list}\n\t\t\t\t\t\tuser_email={props.user_email}  \n\t\t\t\t\t\tget_friends_list={props.get_friends_list}\n\t\t\t\t\t/>))\n\t\t\t\t}\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"add-title-navbar\"><h3 className=\"quick-add\">Everyone ({props.everyone.length})</h3></div>\n\t\t\t\t<ul className=\"add-list list-container\">\n\t\t\t\t{props.everyone.map((x) => (\n\t\t\t\t\t<Everyone stranger_pic={x.photoURL}\n\t\t\t\t\t\tstranger_name={x.name} \n\t\t\t\t\t\tstranger_username={x.email} \n\t\t\t\t\t/>))}\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"add-footer\">\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t : null}\n\t\t</>\n\t);\n}\n","import React, { Component, useState, useEffect } from 'react';\nimport {auth, storage, db} from './Firebase.js';\nimport ReactTimeAgo from 'react-timeago';\nimport firebase from 'firebase/app';\nimport './Messages.css';\n\n/*\n * Function - Message(sender_name)\n * @sender_name: Name of person who sent the image\n * Return: Loaded images requested from Firebase\n * \n * Description:\n * A request (/post/current_user/) is sent to Firebase to get current_user's received images.\n*/\n\nexport default function Message(props) {\n\n    // Check Firebase if user has any new messages\n\n    const [status, setStatus] = useState(\"Received\");\n    const [time, setTime] = useState(0);\n    const [imgArr, setImgArr] = useState([]);\n\n    const update_messages = () => {\n        db.collection('posts')\n        .doc(props.user_email)\n        .collection(\"Received\")\n        .orderBy(\"timeStamp\", \"desc\")\n        .onSnapshot((snapshot) => {\n            var i = 0;\n            // Filters out all the photos sent by the sender\n            while (i < snapshot.docs.length && snapshot.docs[i].data()[\"email\"] != props.sender_email) { i = i + 1; }\n            if (i < snapshot.docs.length) {\n                if (snapshot.docs[i].data()[\"email\"] == props.sender_email) {\n                    setStatus(\"New Snap\");\n                    if (snapshot.docs[i].data()[\"timeStamp\"] != null) {\n                        setTime(snapshot.docs[i].data()[\"timeStamp\"].toDate().toUTCString());\n                    }\n                } else {\n                    setStatus(\"Received\");\n                }\n            } else {\n                setStatus(\"Received\");\n            }\n        })\n    }\n\n    var status_output = <p>{status}</p>;\n    // const test1 = document.getElementById('icon');\n    // console.log(\"test\", test1);\n    var icon = <div className=\"message-received\"/>;\n\n    if (status === \"New Snap\"){\n        icon = <div className=\"message-new\" />\n        status_output = <p className=\"red\"><b>{status}</b></p>\n    } else if (status === \"Received\") {\n        icon = <div className=\"message-received\"/>\n    } else if (status === \"Sent\") {\n        icon = <div className=\"message-sent\"/>\n    } else if (status === \"Opened\") {\n        icon = <div className=\"message-opened\"/>\n    }\n\n    const [img, setImg] = useState(null);\n    const [imgid, setImgid] = useState(null);\n\n    const open = () => {\n        console.log(\"opening snap\", props.user_email);\n        db.collection('posts')\n        .doc(props.user_email)\n        .collection(\"Received\")\n        .orderBy(\"timeStamp\", \"desc\")\n        .get().then((snapshot) => {\n            var i = 0;\n            while (i < snapshot.docs.length && snapshot.docs[i].data()[\"email\"] != props.sender_email) { i = i + 1; }\n            if (i < snapshot.docs.length) {\n                if (snapshot.docs[i].data()[\"email\"] == props.sender_email) {\n                    if (snapshot.docs[i].data() != null) {\n                        setImg(snapshot.docs[i].data()[\"imageURL\"]);\n                        setImgid(snapshot.docs[i].data()[\"id\"]);\n                    }\n                } else {\n                    setStatus(\"Received\");\n                }\n            } else {\n                setStatus(\"Received\");\n            }\n        })\n    }\n\n    const delete_photo = () => {\n        storage.ref(`posts/${imgid}`).delete()\n        .then((url) => {\n            console.log(\"Deleted from storage: \", imgid);\n        })\n        .catch((error) => {\n            console.log(\"TRIED DELETING: \", imgid)\n        });\n        db.collection('posts').doc(imgid).delete().then(() => {\n          console.log(\"Deleted from firestore\");\n        }).catch((error) => {\n          console.error(\"Error removing document: \", error);\n        });\n      }\n\n    const close = () => {\n        setImg(null);\n        console.log(\"opening snap\", props.user_email);\n        const img = db.collection('posts').doc(props.user_email).collection(\"Received\").doc(imgid);\n        img.delete().then(() => {\n            console.log(\"Document deleted\");\n        }).catch((error) => {\n            console.log(\"Error removing document: \", error);\n        })\n        update_messages();\n        const sender = db.collection('posts').doc(props.sender_email).collection(\"Sent\").doc(imgid);\n        sender.get().then((doc) => {\n            if (doc.data()[\"to\"].length == 1) {\n                sender.delete().then(() => {\n                    console.log(\"sender document deleted, everyone saw the pic\");\n                }).catch((error) => {\n                    console.log(\"Could not delete sender's document\");\n                })\n                delete_photo();\n            } else {\n                // Update list if there are other peole who have to see the post\n                var i = 0;\n                var arr = []\n                for (i=0; i<doc.data()[\"to\"].length; i=i+1) {\n                    if (doc.data()[\"to\"][i] != props.user_email){\n                        arr[i] = doc.data()[\"to\"][i];\n                    }\n                }\n                sender.update({to: arr}).then(() => {\n                    console.log(\"Updated sender's list\");\n                }).catch((error) => {\n                    console.log(\"could not update list: \", error);\n                })\n            }\n        })\n    }\n\n    useEffect(() => {\n        update_messages();\n    })\n    \n    return (\n        <>\n        {img ? <div className=\"image-background\" onClick={close}><img className=\"image\" src={img} /></div> :\n            <li className=\"message-content\" onClick={open}>\n                <img className=\"message-avatar\" src={props.profile_url} alt=\"Avatar\"/>\n                <ul className=\"message-info\">\n                    <h3>{props.sender_name}</h3>\n                    <div className=\"message-sub-info\">\n                        {icon}\n                        {status_output}\n                        {time != 0 ? <p><ReactTimeAgo date={time} locale=\"en-US\"/></p> : null }\n                        {props.streak_num > 0 ? <p>{props.streak_num}{props.streak_image}</p> : null}\n                    </div>\n                </ul>\n            </li>\n        }\n        </>\n    );\n\n}\n","import React, { Component } from 'react';\nimport {auth, storage, db, provider} from './Firebase.js';\nimport firebase from 'firebase/app';\nimport './Messages.css';\nimport MessagesNavbar from './MessagesNavbar';\nimport Message from './Message';\nimport SwipeableViews from 'react-swipeable-views';\nimport { bindKeyboard } from 'react-swipeable-views-utils';\n\nconst BindKeyboardSwipeableViews = bindKeyboard(SwipeableViews);\nvar friends_list = [];\nvar dummy_dict = {name:\"Guest (me)\", email: \"Guest@project-yellow-ghost.com\", friends: ['Guest@project-yellow-ghost.com'], streak_emoji:\"\\u{1F525}\",photoURL: \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\"}\n\nclass Messages extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            logged_in: false,\n            streak_image: \"\\u{1F525}\",\n            user_name: \"Guest\",\n            user_email: \"Guest\",\n            user_friends: [dummy_dict],\n            user_strangers: null,\n            everyone: [dummy_dict],\n            user_pic: \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\",\n        }\n    }\n\n    login = () => {\n        auth.signInWithPopup(provider)\n        .then((result) => {\n            this.setState({\n                logged_in: true,\n                user_name: result.user.displayName,\n                user_email: result.user.email,\n                user_pic: result.user.photoURL,\n            })\n            // Creates a new entry in db if user is signing up\n            const userdb = db.collection(\"users\").doc(result.user.email);\n            userdb.get().then((doc) => {\n                if (!doc.exists) {\n                    db.collection(\"users\").doc(result.user.email).set({\n                        email: result.user.email,\n                        name: result.user.displayName,\n                        photoURL: result.user.photoURL,\n                        streak_emoji: this.state.streak_image,\n                        friends: [result.user.email],\n                    })\n                    .catch((error) => {\n                        console.log(\"Couldn't write user to DB, error: \", error);\n                    });\n                    this.get_friends_list()\n                } else {\n                    this.get_friends_list();\n                }\n            }).catch((error) => {\n                console.log(\"Error getting document:\", error);\n            });\n        })\n        .catch((error) => console.log(error.message));\n    }\n\n    logout = () => {\n        firebase.auth().signOut()\n        this.setState({\n            logged_in: false,\n            streak_image: \"\\u{1F525}\",\n            user_name: \"Guest\",\n            user_email: \"Guest\",\n            user_friends: [dummy_dict],\n            user_strangers: null,\n            everyone: [dummy_dict],\n            user_pic: \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\",\n        })\n    }\n\n    check_user = () => {\n        firebase.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                this.setState({\n                    user_name: user.displayName,\n                    user_email: user.email,\n                    user_pic: user.photoURL,\n                    logged_in: true,\n                },\n                this.get_friends_list,\n                )\n            }\n        }.bind(this))\n    }\n\n    get_friends_list = () => {\n        console.log(\"Get friends!!!!!\");\n        if (this.state.logged_in) {\n            const friends = db.collection(\"users\").doc(this.state.user_email);\n            friends.get().then((doc) => {\n                if (!doc.data().hasOwnProperty('friends')) {\n                    friends_list = [this.state.user_email];\n                    this.get_messages();\n                } else {\n                    friends_list = doc.data()[\"friends\"];\n                    this.get_messages();\n                }\n    \n            });\n        }\n\n    }\n\n    get_messages = () => {\n        const sender = db.collection(\"users\");\n        var friends_meta = [];\n        var strangers_meta = [];\n        var everyone_meta = [];\n        var meta_idx = 0;\n        var strangers_idx = 0;\n        var everyone_idx = 0;\n        sender.get().then((doc) => {\n            for (var i=0;i<doc.docs.length;i++) {\n                if (friends_list.includes(doc.docs[i].data()['email'])) {\n                    friends_meta[meta_idx] = doc.docs[i].data()\n                    meta_idx = meta_idx + 1;\n                } else {\n                    strangers_meta[strangers_idx] = doc.docs[i].data()\n                    strangers_idx = strangers_idx + 1;\n                }\n                everyone_meta[everyone_idx] = doc.docs[i].data()\n                everyone_idx = everyone_idx + 1;\n            }\n            this.setState({\n                user_friends: friends_meta,\n                user_strangers: strangers_meta,\n                everyone: everyone_meta,\n            })\n        });\n    }\n\n    componentDidMount() {\n        this.check_user();\n    }\n    // componentDidUpdate(prevState) {\n    //     console.log(\"friends list\", friends_list)\n    // }\n\n    render() {\n        return (\n        <div className=\"messages-screen\">\n            <MessagesNavbar\n                user_email={this.state.user_email}\n                user_name={this.state.user_name}\n                user_pic={this.state.user_pic}\n                login={this.login.bind(this)}\n                logout={this.logout.bind(this)}\n                user_friends={this.state.user_friends}\n                user_strangers={this.state.user_strangers}\n                everyone={this.state.everyone}\n                get_friends_list={this.get_friends_list.bind(this)}\n                friends_list={friends_list}\n                logged_in={this.state.logged_in}\n            />\n            <ul className=\"messages-list\">\n            {this.state.logged_in ? null : \n            <li className=\"welcome-statement\">Welcome to Project Yellow Ghost, a web app version of SnapChat. This was a project developed by Jonathan Wang\n                and this was his final project for school. Right now, you are on a local guest account for you to try out. Feel free to sign in at the top if \n                you want to start using this product. Happy Snapping!\n            </li>\n            }\n            {this.state.user_friends.map((x) => (\n                <Message \n                    sender_email={x.email} \n                    profile_url={x.photoURL} \n                    sender_name={x.name} \n                    user_email={this.state.user_email} \n                    streak_image={this.state.streak_image}\n                    logged_in={this.state.logged_in}\n                />))\n            }\n            </ul>\n        </div>\n        );\n    }\n}\n\nexport default Messages;","import React, { Component } from 'react';\nimport Webcam from \"react-webcam\";\nimport { v4 as uuid } from \"uuid\";\nimport './Camera.css';\nimport {storage, db} from './Firebase.js';\nimport firebase from 'firebase/app';\n\n\nclass Camera extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: window.innerWidth,\n            height: window.innerHeight,\n            image: null,\n            screen: 'camera',\n\n        }\n        window.addEventListener(\"resize\", this.update);\n    }\n\n    update = () => {\n        this.setState({\n          width: window.innerWidth,\n          height: window.innerHeight,\n          faceMode: \"user\"\n        });\n    };\n\n    send = () => {\n        const user = firebase.auth().currentUser;\n        const id = uuid();\n        var email = user.email;\n        var name = user.displayName;\n        var avatarURL = \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\";\n\t\t\t\tvar to_users = [email]\n        if (user) {\n\n        }\n        const uploadTask = storage.ref(`posts/${id}`).putString(this.state.image, 'data_url');\n          uploadTask.on(\n          \"state_changed\",\n          snapshot => {},\n          error => {\n            console.log(error);\n          },\n          () => {\n            var i = 0;\n            for(i=0; i<to_users.length; i++) {\n              console.log(typeof(to_users[i]), to_users[i]);\n              var mailList = to_users[i];\n              storage\n              .ref(\"posts\")\n              .child(id)\n              .getDownloadURL()\n              .then(url => {\n                db.collection('posts').doc(mailList).collection(\"Received\").doc(id).set({\n                  imageURL: url,\n                  id: id,\n                  email: email,\n                  name: name,\n                  avatarURL: avatarURL,\n                  read: false,\n                  timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\n                  to: to_users,\n                })\n\t\t\t\t\t\t\t\tconsole.log(\"Photo Sent\");\n\t\t\t\t\t\t\t\tthis.setState({ image: null, screen: 'camera' })\n              })\n            }\n            db.collection('posts').doc(email).collection(\"Sent\").doc(id).set({\n              id: id,\n              email: email,\n              timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\n              to: to_users,\n            })\n          })\n    }\n\n    close = () => {\n        this.setState({ image: null, screen: \"camera\" })\n    }\n\n    send_to = () => {\n      this.setState({screen: \"send_to\"})\n    }\n\n    capture = () => {\n        const img = this.webcam.getScreenshot();\n        this.setState({ image: img, screen: \"captured\" })\n    }\n\n    setRef = (webcam) => {\n        this.webcam = webcam;\n      };\n\n    render() {\n        return (\n            <>\n                {/* { this.state.image ? <img src={this.state.image} alt=\"asdf\"/> : <Webcam\n                    ref={this.setRef}\n                    videoConstraints={{facingMode: this.state.faceMode, width: this.state.width, height: this.state.height}}\n                    screenshotFormat=\"image/jpeg\"\n                    audio={false}\n                    mirrored={true}\n                    className=\"webcam\"\n                />}\n\n                { this.state.image || this.state.show_send_list ? <button className=\"capture\" onClick={this.close}>Close</button> : <button className=\"capture\" onClick={this.capture}>Capture</button> }\n                { this.state.image? <button className=\"send\">Send to...</button> : null }\n                { this.state.show_send_list ? <button className=\"send\" onClick={this.send}>Send</button> : null} */}\n              {this.state.screen ===\"camera\" ? \n              <div className=\"cam-tab\">\n                <Webcam\n                  ref={this.setRef}\n                  videoConstraints={{facingMode: this.state.faceMode, width: this.state.width, height: this.state.height}}\n                  screenshotFormat=\"image/jpeg\"\n                  audio={false}\n                  mirrored={true}\n                  className=\"webcam\"\n                />\n                <button className=\"capture\" onClick={this.capture}>Capture</button>\n              </div> : null\n              }\n              {this.state.screen ===\"captured\" && this.state.image ? \n              <div className=\"cam-tab\">\n                <img src={this.state.image}></img>\n                <button className=\"capture\" onClick={this.send_to}>Send to</button>\n                <button className=\"send\" onClick={this.close}>Close</button>\n              </div> : null\n              }\n              {this.state.screen ===\"send_to\" && this.state.image  ? \n                <div className=\"user-list\">\n                \n                <button className=\"send\" onClick={this.send}>Send</button>\n                <button className=\"capture\" onClick={this.close}>Close</button>\n              </div> : null\n              }\n            \n            </>\n        );\n    }\n}\n\nexport default Camera;","import React from 'react';\nimport Helmet from 'react-helmet';\nimport SwipeableViews from 'react-swipeable-views';\nimport { bindKeyboard } from 'react-swipeable-views-utils';\n// import 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport Messages from './Messages.js';\nimport Camera from './Camera.js';\n\n\nconst BindKeyboardSwipeableViews = bindKeyboard(SwipeableViews);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: 0,\n      height: window.innerHeight,\n      width: window.innerWidth\n    }\n    window.addEventListener(\"resize\", this.update);\n  }\n\n  update = () => {\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  };\n\n  render() {\n    return (\n      <BindKeyboardSwipeableViews enableMouseEvents style={Object.assign({width: this.state.width, height: this.state.height, position: 'absolute', top: '0%', left: '0%'})}>\n        <div style={Object.assign({backgroundColor: 'white', minHeight: '100vh', width: '100%'})}>\n          <Helmet>\n            <meta name=\"viewport\" content=\"height=device-height, width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"></meta>\n          </Helmet>\n          <Messages/>\n        </div>\n        <div style={Object.assign({backgroundColor: 'Plum'})} >\n          <Helmet>\n            <meta name=\"viewport\" content=\"height=device-height, width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=yes\"></meta>\n          </Helmet>\n          <Camera/>\n        </div>\n      </BindKeyboardSwipeableViews>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Router, Route, Switch } from \"react-router\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}