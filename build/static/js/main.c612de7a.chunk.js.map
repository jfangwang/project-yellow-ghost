{"version":3,"sources":["Firebase.js","MessagesNavbar.js","Message.js","Messages.js","Camera.js","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","provider","GoogleAuthProvider","Component","Message","props","useState","status","setStatus","time","setTime","update_messages","collection","doc","user_email","orderBy","onSnapshot","snapshot","docs","length","data","console","log","toDate","toUTCString","error","status_output","icon","className","img","setImg","imgid","setImgid","profile_url","setURL","sender_name","setName","useEffect","sender_email","get","then","exists","onClick","delete","catch","sender","ref","url","src","limit","forEach","empty","alt","date","locale","streak_num","streak_image","Messages","login","signInWithPopup","result","setState","user_name","user","displayName","email","user_pic","photoURL","get_friends_list","set","name","streak_emoji","state","friends","message","logout","signOut","user_friends","arr","this","i","newArr","class","map","x","Camera","update","width","window","innerWidth","height","innerHeight","faceMode","send","currentUser","id","uuid","to_users","putString","image","on","mailList","child","getDownloadURL","imageURL","avatarURL","read","timeStamp","FieldValue","serverTimestamp","to","close","capture","webcam","getScreenshot","setRef","addEventListener","videoConstraints","facingMode","screenshotFormat","audio","mirrored","BindKeyboardSwipeableViews","bindKeyboard","SwipeableViews","App","index","enableMouseEvents","style","Object","assign","position","top","left","backgroundColor","Helmet","content","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c612de7a.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';        // for authentication\nimport 'firebase/storage';     // for storage\nimport 'firebase/database';    // for realtime database\nimport 'firebase/firestore';   // for cloud firestore\nimport 'firebase/messaging';   // for cloud messaging\nimport 'firebase/functions';   // for cloud functions\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAzNigqy7stltnVUU8cAollxCxvW0CNBTE\",\n  authDomain: \"ghost-f8b34.firebaseapp.com\",\n  projectId: \"ghost-f8b34\",\n  storageBucket: \"ghost-f8b34.appspot.com\",\n  messagingSenderId: \"838623299070\",\n  appId: \"1:838623299070:web:b73429fee525b7c01cacaf\",\n  measurementId: \"G-85ZG5FVKQ4\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n// Google auth as a provider for this app, the popup\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { db, auth, storage, provider };","import React, { Component } from 'react';\nimport './Messages.css';\n\nclass MessagesNavbar extends Component {\n    render() {\n        return (\n            <>\n            <div className=\"navbar\">\n                <div className=\"nav-box-1\">\n                    <ul>\n                        <li>\n                            {this.state.user_name == \"Guest\" ?\n                            <a onClick={this.login}>Sign In</a> :\n                            <img class=\"profile-pic\" src={this.state.user_pic} onClick={this.logout} alt=\"Profile Picture\" />\n                            }\n                        </li>\n                        <li><a>Search</a></li>\n                    </ul>\n                </div>\n                <div className=\"nav-box-2\">\n                    <h1>Chat</h1>\n                </div>\n                <div className=\"nav-box-3\">\n                    <ul>\n                        <li><a>Add Friend</a></li>\n                        <li><a>New Chat</a></li>\n                    </ul>\n                </div>\n            </div>\n            </>\n        );\n    }\n}\n\nexport default MessagesNavbar;","import React, { Component, useState, useEffect } from 'react';\nimport {auth, storage, db} from './Firebase.js';\nimport ReactTimeAgo from 'react-timeago';\nimport firebase from 'firebase/app';\nimport './Messages.css';\n\n/*\n * Function - Message(sender_name)\n * @sender_name: Name of person who sent the image\n * Return: Loaded images requested from Firebase\n * \n * Description:\n * A request (/post/current_user/) is sent to Firebase to get current_user's received images.\n*/\n\nexport default function Message(props) {\n\n    // Check Firebase if user has any new messages\n\n    const [status, setStatus] = useState(\"Received\");\n    const [time, setTime] = useState(0);\n    const [imgArr, setImgArr] = useState([]);\n\n    const update_messages = () => {\n        db.collection('posts')\n        .doc(props.user_email)\n        .collection(\"Received\")\n        .orderBy(\"timeStamp\", \"desc\")\n        // .where(\"email\", \"==\", \"qbs1864@gmail.com\")\n        .onSnapshot((snapshot) => {\n            if (snapshot.docs.length > 0) {\n                setStatus(\"New Snap\");\n                if (snapshot.docs[0].data() != null){\n                    try {\n                        console.log(snapshot.docs[0].data()[\"timeStamp\"].toDate().toUTCString());\n                        setTime(snapshot.docs[0].data()[\"timeStamp\"].toDate().toUTCString());\n                    } catch (error){\n                        console.log(\"error\");\n                    }\n                    \n                }\n                \n                // setTime(snapshot.docs[0].data()[\"timeStamp\"])\n            } else {\n                setStatus(\"Received\");\n            }\n        })\n        // .limit(1).get().then((doc) => {\n        //     if (!doc.empty){\n        //         console.log(\"There is mail\")\n        //         doc.forEach((x) => {\n        //             if (x.exists) {\n        //                 setStatus(\"New Snap\");               \n        //                 setTime(x.data()[\"timeStamp\"].toDate().toUTCString())\n        //             } else {\n        //                 console.log(\"doc does not exist\"); \n        //             }\n        //         })\n        //     } else {\n        //         console.log(\"there is no mail\")\n        //         setStatus(\"Received\");  \n        //     }\n            \n        // }).catch((error) => {\n        //     console.log(\"User does not exist: \", error)\n        // })\n    }\n\n    var status_output = <p>{status}</p>;\n    // const test1 = document.getElementById('icon');\n    // console.log(\"test\", test1);\n    var icon = <div className=\"message-received\"/>;\n\n    if (status === \"New Snap\"){\n        icon = <div className=\"message-new\" />\n        status_output = <p className=\"red\"><b>{status}</b></p>\n    } else if (status === \"Received\") {\n        icon = <div className=\"message-received\"/>\n    } else if (status === \"Sent\") {\n        icon = <div className=\"message-sent\"/>\n    } else if (status === \"Opened\") {\n        icon = <div className=\"message-opened\"/>\n    }\n\n    const [img, setImg] = useState(null);\n    const [imgid, setImgid] = useState(null);\n\n    const open = () => {\n        console.log(\"opening snap\", props.user_email);\n        const received = db.collection('posts').doc(props.user_email).collection(\"Received\").orderBy(\"timeStamp\", \"desc\").limit(1);\n        received.get().then((snapshot) => {\n            snapshot.forEach((doc) => {\n                if (!doc.empty) {\n                    setStatus(\"New Snap\");\n                    // console.log(\"img\", doc.data()[\"imageURL\"]);\n                    setImg(doc.data()[\"imageURL\"]);\n                    setImgid(doc.data()[\"id\"]);\n                } else {\n                    console.log(\"doc does not exist\");\n                }\n            })\n            \n        })\n    }\n\n    const delete_photo = () => {\n        storage.ref(`posts/${imgid}`).delete()\n        .then((url) => {\n            console.log(\"Deleted from storage: \", imgid);\n        })\n        .catch((error) => {\n            console.log(\"TRIED DELETING: \", imgid)\n        });\n        db.collection('posts').doc(imgid).delete().then(() => {\n          console.log(\"Deleted from firestore\");\n        }).catch((error) => {\n          console.error(\"Error removing document: \", error);\n        });\n      }\n\n    const close = () => {\n        setImg(null);\n        console.log(\"opening snap\", props.user_email);\n        const img = db.collection('posts').doc(props.user_email).collection(\"Received\").doc(imgid);\n        img.delete().then(() => {\n            console.log(\"Document deleted\");\n        }).catch((error) => {\n            console.log(\"Error removing document: \", error);\n        })\n        update_messages();\n        const sender = db.collection('posts').doc(props.sender_email).collection(\"Sent\").doc(imgid);\n        sender.get().then((doc) => {\n            if (doc.data()[\"to\"].length == 1) {\n                sender.delete().then(() => {\n                    console.log(\"sender document deleted, everyone saw the pic\");\n                }).catch((error) => {\n                    console.log(\"Could not delete sender's document\");\n                })\n                delete_photo();\n            } else {\n                console.log(\"working on it\");\n            }\n        })\n    }\n\n    const [profile_url, setURL] = useState(\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\");\n    const [sender_name, setName] = useState(\"Guest (Me)\");\n\n    const get_sender_info = () => {\n        const sender = db.collection(\"users\").doc(props.sender_email);\n        sender.get().then((doc) => {\n            if (doc.exists) {\n                setURL(doc.data()[\"photoURL\"]);\n                setName(doc.data()[\"name\"]);\n            } else {\n                setURL(\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\");\n                setName(\"Guest (Me)\");\n            }\n        });\n    }\n\n    useEffect(() => {\n        update_messages();\n        get_sender_info();\n    })\n    \n    return (\n        <>\n        {img ? <div className=\"image-background\" onClick={close}><img className=\"image\" src={img} /></div> :\n            <li className=\"message-content\" onClick={open}>\n                <img className=\"message-avatar\" src={profile_url} alt=\"Avatar\"/>\n                <ul className=\"message-info\">\n                    <h3>{sender_name}</h3>\n                    <div className=\"message-sub-info\">\n                        {icon}\n                        {status_output}\n                        <p><ReactTimeAgo date={time} locale=\"en-US\"/></p>\n                        {props.streak_num > 0 ? <p>{props.streak_num}{props.streak_image}</p> : null}\n                    </div>\n                </ul>\n            </li>\n        }\n        </>\n    );\n\n}\n","import React, { Component } from 'react';\nimport {auth, storage, db, provider} from './Firebase.js';\nimport firebase from 'firebase/app';\nimport './Messages.css';\nimport MessagesNavbar from './MessagesNavbar';\nimport Message from './Message';\nimport { bindKeyboard } from 'react-swipeable-views-utils';\n\nclass Messages extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            streak_image: \"\\u{1F525}\",\n            user_name: \"Guest\",\n            user_email: \"Guest\",\n            user_friends: [\"Guest (Me)\"],\n            user_pic: \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\",\n        }\n    }\n\n    login = () => {\n        auth.signInWithPopup(provider)\n        .then((result) => {\n            this.setState({\n                user_name: result.user.displayName,\n                user_email: result.user.email,\n                user_pic: result.user.photoURL,\n            })\n            // Creates a new entry in db if user is signing up\n            const userdb = db.collection(\"users\").doc(result.user.email);\n            userdb.get().then((doc) => {\n                if (!doc.exists) {\n                    db.collection(\"users\").doc(result.user.email).set({\n                        email: result.user.email,\n                        name: result.user.displayName,\n                        photoURL: result.user.photoURL,\n                        streak_emoji: this.state.streak_image,\n                        friends: [result.user.email],\n                    }, this.get_friends_list())\n                    .catch((error) => {\n                        console.log(\"Couldn't write user to DB, error: \", error);\n                    });\n                } else {\n                    this.get_friends_list();\n                }\n            }).catch((error) => {\n                console.log(\"Error getting document:\", error);\n            });\n        })\n        .catch((error) => console.log(error.message));\n    }\n\n    logout = () => {\n        firebase.auth().signOut()\n        this.setState({\n            user_name: \"Guest\",\n            user_email: \"Guest\",\n            user_friends: [\"Guest (Me)\"],\n            user_pic: \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\",\n        })\n    }\n\n    get_friends_list = () => {\n        const friends = db.collection(\"users\").doc(this.state.user_email);\n        friends.get().then((doc) => {\n            this.setState({\n                user_friends: doc.data()[\"friends\"]\n            });\n        });\n    }\n\n    render() {\n        const arr = this.state.user_friends;\n        var i = 0;\n        var newArr = [];\n        for (i=0; i<arr.length; i= i + 1) {\n            newArr[i] = arr[i];\n        }\n\n\n        return ( \n        <div className=\"messages-screen\">\n            <div className=\"navbar\">\n                <div className=\"nav-box-1\">\n                    <ul>\n                        <li>\n                            {this.state.user_name == \"Guest\" ?\n                            <a onClick={this.login}>Sign In</a> :\n                            <img class=\"profile-pic\" src={this.state.user_pic} onClick={this.logout} alt=\"Profile Picture\" />\n                            }\n                        </li>\n                        <li><a>Search</a></li>\n                    </ul>\n                </div>\n                <div className=\"nav-box-2\">\n                    <h1>Chat</h1>\n                </div>\n                <div className=\"nav-box-3\">\n                    <ul>\n                        <li><a>Add Friend</a></li>\n                        <li><a>New Chat</a></li>\n                    </ul>\n                </div>\n            </div>\n            <ul className=\"messages-list\">\n            {newArr.map((x) => (<Message sender_email={x} user_email={this.state.user_email} streak_image={this.state.streak_image} />))}\n            </ul>\n        </div>\n        );\n    }\n}\n\nexport default Messages;","import React, { Component } from 'react';\nimport Webcam from \"react-webcam\";\nimport { v4 as uuid } from \"uuid\";\nimport './Camera.css';\nimport {storage, db} from './Firebase.js';\nimport firebase from 'firebase/app';\n\n\nclass Camera extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: window.innerWidth,\n            height: window.innerHeight,\n            image: null\n        }\n        window.addEventListener(\"resize\", this.update);\n    }\n\n    update = () => {\n        this.setState({\n          width: window.innerWidth,\n          height: window.innerHeight,\n          faceMode: \"user\"\n        });\n    };\n\n    send = () => {\n        const user = firebase.auth().currentUser;\n        const id = uuid();\n        var email = user.email;\n        var name = user.displayName;\n        var avatarURL = \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\";\n\t\t\t\tvar to_users = [email]\n        if (user) {\n\n        }\n        const uploadTask = storage.ref(`posts/${id}`).putString(this.state.image, 'data_url');\n          uploadTask.on(\n          \"state_changed\",\n          snapshot => {},\n          error => {\n            console.log(error);\n          },\n          () => {\n            var i = 0;\n            for(i=0; i<to_users.length; i++) {\n              console.log(typeof(to_users[i]), to_users[i]);\n              var mailList = to_users[i];\n              storage\n              .ref(\"posts\")\n              .child(id)\n              .getDownloadURL()\n              .then(url => {\n                db.collection('posts').doc(mailList).collection(\"Received\").doc(id).set({\n                  imageURL: url,\n                  id: id,\n                  email: email,\n                  name: name,\n                  avatarURL: avatarURL,\n                  read: false,\n                  timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\n                  to: to_users,\n                })\n\t\t\t\t\t\t\t\tconsole.log(\"Photo Sent\");\n\t\t\t\t\t\t\t\tthis.setState({ image: null })\n              })\n            }\n            db.collection('posts').doc(email).collection(\"Sent\").doc(id).set({\n              id: id,\n              email: email,\n              timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\n              to: to_users,\n            })\n          })\n    }\n\n    close = () => {\n        this.setState({ image: null })\n    }\n\n    capture = () => {\n        const img = this.webcam.getScreenshot();\n        this.setState({ image: img })\n    }\n\n    setRef = (webcam) => {\n        this.webcam = webcam;\n      };\n\n    render() {\n        return (\n            <div className=\"cam-tab\">\n                { this.state.image ? <img src={this.state.image} alt=\"asdf\"/> : <Webcam\n                    ref={this.setRef}\n                    videoConstraints={{facingMode: this.state.faceMode, width: this.state.width, height: this.state.height}}\n                    screenshotFormat=\"image/jpeg\"\n                    audio={false}\n                    mirrored={true}\n                    className=\"webcam\"\n                />}\n                { this.state.image ? <button className=\"capture\" onClick={this.close}>Close</button> : <button className=\"capture\" onClick={this.capture}>Capture</button> }\n                { this.state.image ? <button className=\"send\" onClick={this.send}>Send</button> : null}\n            </div>\n        );\n    }\n}\n\nexport default Camera;","import React from 'react';\nimport Helmet from 'react-helmet';\nimport SwipeableViews from 'react-swipeable-views';\nimport { bindKeyboard } from 'react-swipeable-views-utils';\nimport './App.css';\nimport Messages from './Messages.js';\nimport Camera from './Camera.js';\n\nconst BindKeyboardSwipeableViews = bindKeyboard(SwipeableViews);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: 0,\n      height: window.innerHeight,\n      width: window.innerWidth\n    }\n    window.addEventListener(\"resize\", this.update);\n  }\n\n  update = () => {\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  };\n\n  render() {\n    return (\n      <BindKeyboardSwipeableViews enableMouseEvents style={Object.assign({width: this.state.width, height: this.state.height, position: 'absolute', top: '0%', left: '0%'})}>\n        <div style={Object.assign({backgroundColor: 'mediumseagreen', height: '100%', width: '100%'})}>\n          <Helmet>\n            <meta name=\"viewport\" content=\"height=device-height, width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"></meta>\n          </Helmet>\n          <Messages/>\n        </div>\n        <div style={Object.assign({backgroundColor: 'Plum'})} >\n          <Helmet>\n            <meta name=\"viewport\" content=\"height=device-height, width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=yes\"></meta>\n          </Helmet>\n          <Camera/>\n        </div>\n      </BindKeyboardSwipeableViews>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}