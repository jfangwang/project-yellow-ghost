{"version":3,"sources":["Firebase.js","images/black-checkmark.png","Friends.js","MessagesNavbar.js","Message.js","Messages.js","CameraNavbar.js","Camera.js","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","provider","GoogleAuthProvider","Friends","props","useState","removed","setRemoved","friends","collection","doc","user_email","friend_username","className","src","friend_pic","alt","friend_name","onClick","friends_list","splice","indexOf","update","delete","friend_arr","get","then","docs","forEach","element","push","data","email","includes","friend_since","status","streak_num","timeStamp","remove_friend","SendFriends","added","setAdded","arr","send_list","handle_send_list","checkmark","Strangers","stranger_pic","stranger_name","stranger_username","stranger_arr","console","log","fire_time","FieldValue","serverTimestamp","set","name","photoURL","imgs_sent","imgs_received","add_friend","Everyone","MessagesNavbar","show_friends","setShow_Friends","user_name","login","user_pic","logout","get_friends_list","user_strangers_dict","user_friends_dict","everyone_dict","type","placeholder","length","map","x","Message","img","setImg","imgid","setImgid","setSentImg","setReceivedImg","setStatus","setStreakNum","time","setTime","user_received_images","sender_email","sender_sent_images","user_latest_messages","sender_latest_messages","localImgURL","onSnapshot","toDate","toUTCString","error","remove_name","to","ref","orderBy","id","imageURL","status_output","icon","profile_url","sender_name","date","locale","streak_emoji","Messages","get_all_users","logged_in","CameraNavbar","Camera","setSend_list","image","setImage","faceMode","screen","setScreen","webcamRef","React","useRef","setAspectRatio","capture","useCallback","current","getScreenshot","e","useEffect","mobile","audio","mirrored","forceScreenshotSourceSize","screenshotFormat","screenshotQuality","videoConstraints","facingMode","user","currentUser","uuid","displayName","avatarURL","to_users","putString","on","snapshot","child","getDownloadURL","url","time_sent","user_temp","get_messages_list","BindKeyboardSwipeableViews","bindKeyboard","SwipeableViews","default_pic","dummy_dict","App","set_device","state","width","height","setState","window","innerWidth","innerHeight","signInWithPopup","result","user_friends","catch","message","signOut","check_user","onAuthStateChanged","this","bind","exists","friend_list","friends_meta","strangers_meta","everyone_meta","i","index","addEventListener","enableMouseEvents","style","Object","assign","position","top","left","backgroundColor","minHeight","Helmet","content","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e414bbc1.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';        // for authentication\nimport 'firebase/storage';     // for storage\nimport 'firebase/database';    // for realtime database\nimport 'firebase/firestore';   // for cloud firestore\nimport 'firebase/messaging';   // for cloud messaging\nimport 'firebase/functions';   // for cloud functions\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAzNigqy7stltnVUU8cAollxCxvW0CNBTE\",\n  authDomain: \"ghost-f8b34.firebaseapp.com\",\n  projectId: \"ghost-f8b34\",\n  storageBucket: \"ghost-f8b34.appspot.com\",\n  messagingSenderId: \"838623299070\",\n  appId: \"1:838623299070:web:b73429fee525b7c01cacaf\",\n  measurementId: \"G-85ZG5FVKQ4\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n// Google auth as a provider for this app, the popup\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { db, auth, storage, provider };","export default __webpack_public_path__ + \"static/media/black-checkmark.d8439ac6.png\";","import React, { Component, useState, useEffect } from 'react';\nimport {db} from './Firebase.js';\nimport './Messages.css';\nimport checkmark from './images/black-checkmark.png';\nimport firebase from 'firebase/app';\n\nfunction Friends(props) {\n\n\tconst [removed, setRemoved] = useState(false);\n\tconst friends = db.collection(\"users\").doc(props.user_email);\n\n\tconst remove_friend = () => {\n\t\tprops.friends_list.splice(props.friends_list.indexOf(props.friend_username), 1)\n\t\tfriends.update({friends: props.friends_list})\n\t\tdb.collection(\"posts\").doc(props.user_email).collection(\"Latest_Messages\").doc(props.friend_username).delete();\n\t\t\n\t\tvar friend_arr = [];\n\n\t\tdb.collection(\"posts\").doc(props.friend_username).collection(\"Latest_Messages\").get().then((doc) => {\n\t\t\tdoc.docs.forEach((element) => {\n\t\t\t\tfriend_arr.push(element.data().email);\n\t\t\t})\n\t\t\tif (friend_arr.includes(props.user_email)) {\n\t\t\t\t// Friend still has user as a friend\n\t\t\t\t// updating friend's latest messages list\n\t\t\t\tdb.collection(\"posts\").doc(props.friend_username).collection(\"Latest_Messages\").doc(props.user_email).update({\n\t\t\t\t\tfriend_since: null,\n\t\t\t\t\tstatus: \"Friend broke up\",\n\t\t\t\t\tstreak_num: 0,\n\t\t\t\t\ttimeStamp: null\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\tconst remove = () => {\n\t\tif (props.friend_username != \"Guest@project-yellow-ghost.com\") {\n\t\t\tremove_friend();\n\t\t}\n\t\tsetRemoved(true);\n\t}\n\n    return (<>\n        {props.friend_username == props.user_email ? null : \n\t\t<li className=\"add-friends-content\">\n\t\t<div className=\"add-box-1\">\n\t\t\t<img className=\"message-avatar\" src={props.friend_pic} alt=\"Avatar\"/>\n\t\t\t<ul className=\"message-info\">\n\t\t\t\t<h3>{props.friend_name}</h3> \n\t\t\t\t<p>{props.friend_username}</p>\n\t\t\t</ul>\n\t\t</div>\n\t\t<div className=\"add-box-2\">\n\t\t\t{removed ? <p className=\"removed\"><b>Removed!</b></p> : <button onClick={remove}><b>Remove</b></button>}\n\t\t</div>\n\t\t</li>\n\t\t}\n\t\t</>\n    )\n}\n\nfunction SendFriends(props) {\n\n\tconst [added, setAdded] = useState(false);\n\tconst friends = db.collection(\"users\").doc(props.user_email);\n\n\tconst add_friend = () => {\n\t\tsetAdded(true);\n\t\tvar arr = props.send_list;\n\t\tarr.push(props.friend_username)\n\t\tprops.handle_send_list(arr);\n\t}\n\tconst remove_friend = () => {\n\t\tsetAdded(false);\n\t\tvar arr = props.send_list;\n\t\tarr.splice(arr.indexOf(props.friend_username), 1);\n\t\tprops.handle_send_list(arr);\n\t}\n\n    return (\n\t\t\t<>\n\t\t\t{added ?\n\t\t\t\t<li className=\"add-friends-content\" onClick={remove_friend}>\n\t\t\t\t<div className=\"add-box-1\">\n\t\t\t\t<img className=\"message-avatar\" src={props.friend_pic} alt=\"Avatar\"/>\n\t\t\t\t<ul className=\"message-info\">\n\t\t\t\t\t\t<h2 className=\"selected\">{props.friend_name}</h2>\n\t\t\t\t\t\t{/* <p>{props.friend_username}</p> */}\n\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"add-box-2\">\n\t\t\t\t<div className=\"selected selected-circle\"><img className=\"checkmark\" src={checkmark} alt=\"U+2713\"></img></div>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t\t:\n\t\t\t<li className=\"add-friends-content\" onClick={add_friend}>\n\t\t\t\t<div className=\"add-box-1\">\n\t\t\t\t<img className=\"message-avatar\" src={props.friend_pic} alt=\"Avatar\"/>\n\t\t\t\t<ul className=\"message-info\">\n\t\t\t\t\t\t<h2>{props.friend_name}</h2>\n\t\t\t\t\t\t{/* <p>{props.friend_username}</p> */}\n\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"add-box-2\">\n\t\t\t\t<div className=\"unselected-circle\"><img className=\"checkmark\" src={checkmark} alt=\"U+2713\"></img></div>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t\t}\n\t\t\t</>\n    )\n}\n\nfunction Strangers(props) {\n\n\n\tconst [added, setAdded] = useState(false);\n\tconst friends = db.collection(\"users\").doc(props.user_email);\n\n\n\t\n\tconst add_friend = () => {\n\t\tprops.friends_list.push(props.stranger_username);\n\t\tfriends.update({friends: props.friends_list})\n\t\tvar stranger_arr = [];\n\n\t\tdb.collection(\"posts\").doc(props.stranger_username).collection(\"Latest_Messages\").get().then((doc) => {\n\t\t\tdoc.docs.forEach((element) => {\n\t\t\t\tstranger_arr.push(element.data().email);\n\t\t\t})\n\t\t\tif (stranger_arr.includes(props.user_email)) {\n\t\t\t\t// Stranger already added user as a friend\n\t\t\t\t// updating user's latest messages list\n\t\t\t\tconsole.log(\"New Friend Added!\")\n\t\t\t\tvar fire_time = firebase.firestore.FieldValue.serverTimestamp();\n\t\t\t\tdb.collection(\"posts\").doc(props.user_email).collection(\"Latest_Messages\").doc(props.stranger_username).set({\n\t\t\t\t\temail: props.stranger_username,\n\t\t\t\t\tname: props.stranger_name,\n\t\t\t\t\tphotoURL: props.stranger_pic,\n\t\t\t\t\timgs_sent: 0,\n\t\t\t\t\timgs_received: 0,\n\t\t\t\t\tfriend_since: fire_time,\n\t\t\t\t\tstatus: \"New Friend!\",\n\t\t\t\t\tstreak_num: 0,\n\t\t\t\t\ttimeStamp: null\n\t\t\t\t})\n\t\t\t\t// updating stranger's latest messages list\n\t\t\t\tdb.collection(\"posts\").doc(props.stranger_username).collection(\"Latest_Messages\").doc(props.user_email).update({\n\t\t\t\t\tfriend_since: fire_time,\n\t\t\t\t\tstatus: \"New Friend!\",\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tconsole.log(\"Pending...\")\n\t\t\t\t// Stranger has not added user as a friend yet\n\t\t\t\tdb.collection(\"posts\").doc(props.user_email).collection(\"Latest_Messages\").doc(props.stranger_username).set({\n\t\t\t\t\temail: props.stranger_username,\n\t\t\t\t\tname: props.stranger_name,\n\t\t\t\t\tphotoURL: props.stranger_pic,\n\t\t\t\t\timgs_sent: 0,\n\t\t\t\t\timgs_received: 0,\n\t\t\t\t\tfriend_since: null,\n\t\t\t\t\tstatus: \"Pending\",\n\t\t\t\t\tstreak_num: 0,\n\t\t\t\t\ttimeStamp: null\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\tconst add_true = () => {\n\t\tif (props.friend_username != \"Guest@project-yellow-ghost.com\") {\n\t\t\tadd_friend();\n\t\t}\n\t\tsetAdded(true);\n\t}\n\n   return (\n\t   <li className=\"add-friends-content\">\n\t\t\t\t\t   <div className=\"add-box-1\">\n\t\t\t\t\t   <img className=\"message-avatar\" src={props.stranger_pic} alt=\"Avatar\"/>\n\t\t\t\t\t   <ul className=\"message-info\">\n\t\t\t\t\t\t\t   <h3>{props.stranger_name}</h3>\n\t\t\t\t\t\t\t   <p>{props.stranger_username}</p>\n\t\t\t\t\t   </ul>\n\t\t\t\t\t   </div>\n\t\t\t\t\t   <div className=\"add-box-2\">\n\t\t\t\t\t\t   {added ? <p className=\"added\"><b>Added!</b></p> : <button onClick={add_true}><b>Add</b></button>}\n\t\t\t\t\t   </div>\n\t   </li>\n   )\n}\n\nfunction Everyone(props) {\n\n   return (\n\t   <li className=\"add-friends-content\">\n\t\t\t\t\t   <div className=\"add-box-1\">\n\t\t\t\t\t   <img className=\"message-avatar\" src={props.stranger_pic} alt=\"Avatar\"/>\n\t\t\t\t\t   <ul className=\"message-info\">\n\t\t\t\t\t   \t\t{props.stranger_username == props.user_email ?\n\t\t\t\t\t\t\t\t<h3>{props.stranger_name} (Me)</h3> \n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<h3>{props.stranger_name}</h3> \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<p>{props.stranger_username}</p>\n\t\t\t\t\t   </ul>\n\t\t\t\t\t   </div>\n\t\t\t\t\t   <div className=\"add-box-2\">\n\t\t\t\t\t   </div>\n\t   </li>\n   )\n}\nexport {SendFriends, Friends, Strangers, Everyone}","import React, { Component, useState, useEffect } from 'react';\nimport {Friends, Strangers, Everyone} from './Friends.js';\nimport './Messages.css';\n\nexport default function MessagesNavbar(props) {\n\tconst [show_friends, setShow_Friends] = useState(false);\n\n\tconst show_friends_button = () => {\n\t\tprops.get_friends_list();\n\t\tsetShow_Friends(true);\n\t}\n\tconst hide_friends_button = ()=> {\n\t\tprops.get_friends_list();\n\t\tsetShow_Friends(false);\n\t}\n\n\treturn (\n\t\t<>\n\t\t{ !show_friends ? \n\t\t<div className=\"navbar\">\n\t\t<div className=\"nav-box-1\">\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t{props.user_name == \"Guest\" ?\n\t\t\t\t\t<a onClick={props.login}>Sign In</a> :\n\t\t\t\t\t<img className=\"profile-pic\" src={props.user_pic} onClick={props.logout} alt=\"Profile Picture\" />\n\t\t\t\t\t}\n\t\t\t\t</li>\n\t\t\t\t<li><a>Search</a></li>\n\t\t\t</ul>\n\t\t</div>\n\t\t<div className=\"nav-box-2\">\n\t\t\t<h1>Chat</h1>\n\t\t</div>\n\t\t<div className=\"nav-box-3\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li><a onClick={show_friends_button}>Add Friend</a></li>\n\t\t\t\t\t<li><a>New Chat</a></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t\t: null}\n\t\t{ show_friends && props.user_strangers_dict != null &&\n\t\tprops.user_friends_dict != null && props.everyone_dict != null ?\n\t\t<div className=\"add-friends\">\n\t\t\t<div className=\"add-navbar\">\n\t\t\t\t<div className=\"nav-box-1\"><ul><li><a onClick={hide_friends_button}><b>Close</b></a></li></ul></div>\n\t\t\t\t<div className=\"nav-box-2\"><h1>Add Friends</h1></div>\n\t\t\t\t<div className=\"nav-box-3\"><ul><li><a><b>. . .</b></a></li></ul></div>\n\t\t\t</div>\n\t\t\t<div className=\"add-body\">\n\t\t\t\t<div className=\"search-bar\"><input type=\"search\" placeholder=\"Find Friends\"></input></div>\n\t\t\t\t<div className=\"add-title-navbar\"><h3 className=\"quick-add\">Quick Add ({props.user_strangers_dict.length})</h3></div>\n\t\t\t\t<ul className=\"add-list list-container\">\n\t\t\t\t{props.user_strangers_dict.map((x) => (\n\t\t\t\t\t<Strangers \n\t\t\t\t\t\tstranger_pic={x.photoURL} \n\t\t\t\t\t\tstranger_name={x.name}\n\t\t\t\t\t\tstranger_username={x.email}\n\t\t\t\t\t\tfriend_username={x.email}\n\t\t\t\t\t\tfriends_list={props.friends_list} \n\t\t\t\t\t\tuser_email={props.user_email}\n\t\t\t\t\t\tget_friends_list={props.get_friends_list}\n\t\t\t\t\t/>))\n\t\t\t\t}\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"add-title-navbar\"><h3 className=\"quick-add\">Friends ({props.user_friends_dict.length - 1})</h3></div>\n\t\t\t\t<ul className=\"add-list list-container\">\n\t\t\t\t{props.user_friends_dict.map((x) => (\n\t\t\t\t\t<Friends \n\t\t\t\t\t\tfriend_pic={x.photoURL} \n\t\t\t\t\t\tfriend_name={x.name} \n\t\t\t\t\t\tfriend_username={x.email} \n\t\t\t\t\t\tfriends_list={props.friends_list}\n\t\t\t\t\t\tuser_email={props.user_email}  \n\t\t\t\t\t\tget_friends_list={props.get_friends_list}\n\t\t\t\t\t/>))\n\t\t\t\t}\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"add-title-navbar\"><h3 className=\"quick-add\">Everyone ({props.everyone_dict.length})</h3></div>\n\t\t\t\t<ul className=\"add-list list-container\">\n\t\t\t\t{props.everyone_dict.map((x) => (\n\t\t\t\t\t<Everyone stranger_pic={x.photoURL}\n\t\t\t\t\t\tstranger_name={x.name} \n\t\t\t\t\t\tstranger_username={x.email} \n\t\t\t\t\t\tuser_email={props.user_email} \n\t\t\t\t\t/>))}\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"add-footer\">\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t : null}\n\t\t</>\n\t);\n}\n","import React, { Component, useState, useEffect } from 'react';\nimport {auth, storage, db} from './Firebase.js';\nimport ReactTimeAgo from 'react-timeago';\nimport firebase from 'firebase/app';\nimport './Messages.css';\n\n/*\n * Function - Message(sender_name)\n * @sender_name: Name of person who sent the image\n * Return: Loaded images requested from Firebase\n * \n * Description:\n * A request (/post/current_user/) is sent to Firebase to get current_user's received images.\n*/\n\nexport default function Message(props) {\n\n    // Check Firebase if user has any new messages\n\n    const [img, setImg] = useState(null);\n    const [imgid, setImgid] = useState(null);\n    const [imgs_sent, setSentImg] = useState(null);\n    const [imgs_received, setReceivedImg] = useState(null);\n    const [status, setStatus] = useState(\"Received\");\n    const [streak_num, setStreakNum] = useState(null);\n    const [time, setTime] = useState(null);\n    const [friendSince, setFriendSince] = useState(null);\n    var user_received_images = db.collection('posts')\n                        .doc(props.user_email)\n                        .collection(\"Received\")\n                        .doc(props.sender_email)\n                        .collection(\"images\");\n    var sender_sent_images = db.collection('posts')\n                        .doc(props.sender_email)\n                        .collection(\"Sent\");\n    var user_latest_messages = db.collection(\"posts\")\n                        .doc(props.user_email)\n                        .collection(\"Latest_Messages\")\n                        .doc(props.sender_email);\n    var sender_latest_messages = db.collection(\"posts\")\n                        .doc(props.sender_email)\n                        .collection(\"Latest_Messages\")\n                        .doc(props.user_email);\n    var localImgURL = null;\n\n    const update_messages = () => {\n        if (props.sender_email !== \"Guest@project-yellow-ghost.com\") {\n            user_latest_messages.onSnapshot((doc) => {\n                setSentImg(doc.data()[\"imgs_sent\"]);\n                setReceivedImg(doc.data()[\"imgs_received\"]);\n                setStatus(doc.data()[\"status\"]);\n                setStreakNum(doc.data()[\"streak_num\"]);\n                try {\n                    setTime(doc.data()[\"timeStamp\"].toDate().toUTCString());\n                } catch (error) {\n                    // Nothing\n                }\n                setImgid(doc.data()[\"id\"]);\n                localImgURL = doc.data()[\"imageURL\"];\n                // setFriendSince(doc.data()[\"friend_since\"])\n            })\n        }\n    }\n    update_messages();\n\n    const open = () => {\n        if (status == \"New Snap\") {\n            setImg(localImgURL);\n            remove_name(); \n        }\n    }\n\n    const check_next_photo = () => {\n        user_received_images.orderBy(\"timeStamp\", \"desc\").get().then((doc) => {\n\n            // Update the sender's latest messages list\n            sender_latest_messages.update({\n                id: null,\n                imageURL: null,\n                imgs_sent: 0,\n                status: \"Opened\",\n            })\n            \n            // Gets the next photo if there is another photo and\n            // sets it to user's message list\n            // console.log(\"about to update latest messages list\")\n            // console.log(doc.docs, doc.docs.length);\n            if (doc.docs.length > 0) {\n                user_latest_messages.update({\n                    id: doc.docs[0].data()[\"id\"],\n                    imageURL: doc.docs[0].data()[\"imageURL\"],\n                    imgs_received: imgs_received + 1,\n                    status: \"New Snap\",\n                    timeStamp: doc.docs[0].data()[\"timeStamp\"],\n                })\n\n            } else {\n                user_latest_messages.update({\n                    id: null,\n                    imageURL: null,\n                    imgs_received: imgs_sent + 1,\n                    status: \"Received\",\n                })\n            }\n        })\n    }\n\n    const remove_name = () => {\n        sender_sent_images.doc(imgid).get().then((doc) => {\n            if (!doc.data() || doc.data()[\"to\"].length == 1) {\n                // Delete from storage\n                storage.ref(`posts/${imgid}`).delete();\n                // Delete from firestore\n                sender_sent_images.doc(imgid).delete();\n                // Remove images from received folder\n                user_received_images.doc(imgid).delete();\n            } else {\n                var arr = doc.data()[\"to\"];\n                arr.splice(arr.indexOf(props.user_email), 1);\n                // Update Firestore with deleted to list\n                sender_sent_images.doc(imgid).update({to: arr});\n                // Remove images from received folder\n                user_received_images.doc(imgid).delete();\n            }\n            check_next_photo();\n        })\n    }\n\n    const close = () => {\n        setImg(null);\n    }\n\n    var status_output = <p>{status}</p>;\n    var icon = <div className=\"\"/>;\n\n    if (status === \"New Snap\"){\n        icon = <div className=\"message-new\" />\n        status_output = <p className=\"red\"><b>{status}</b></p>\n    } else if (status === \"Received\") {\n        icon = <div className=\"message-received\"/>\n    } else if (status === \"Sent\") {\n        icon = <div className=\"message-sent\"/>\n    } else if (status === \"Opened\") {\n        icon = <div className=\"message-opened\"/>\n    } else if (status == \"New Friend!\") {\n        icon = <div className=\"message-new-friend\"/>\n    }\n    \n    return (\n        <>\n        {img ? <div className=\"image-background\" onClick={close}><img id=\"image\" className=\"image-preview\" src={img} /></div> :\n            <li className=\"message-content\" onClick={open}>\n                <img className=\"message-avatar\" src={props.profile_url} alt=\"Avatar\"/>\n                <ul className=\"message-info\">\n                    <h3>{props.sender_name}</h3>\n                    <div className=\"message-sub-info\">\n                        {icon}\n                        {status_output}\n                        {time != null ? <p><ReactTimeAgo date={time} locale=\"en-US\"/></p> : null }\n                        {props.streak_num > 0 ? <p>{props.streak_num}{props.streak_emoji}</p> : null}\n                    </div>\n                </ul>\n            </li>\n        }\n        </>\n    );\n\n}\n","import React, { Component } from 'react';\nimport './Messages.css';\nimport MessagesNavbar from './MessagesNavbar';\nimport Message from './Message';\n\n\nfunction Messages(props) {\n    return (\n    <div className=\"messages-screen\">\n        <MessagesNavbar\n            user_email={props.user_email}\n            user_name={props.user_name}\n            user_pic={props.user_pic}\n            login={props.login}\n            logout={props.logout}\n            user_friends_dict={props.user_friends_dict}\n            user_strangers_dict={props.user_strangers_dict}\n            everyone_dict={props.everyone_dict}\n            get_friends_list={props.get_friends_list}\n            get_all_users={props.get_all_users}\n            friends_list={props.friends_list}\n            logged_in={props.logged_in}\n        />\n        <ul className=\"messages-list\">\n        {props.logged_in ? null :\n        <li className=\"welcome-statement\">Welcome to Project Yellow Ghost, a web app version of SnapChat. This was a project developed by Jonathan Wang\n            and this was his final project for school. Right now, you are on a local guest account for you to try out. Feel free to sign in at the top if \n            you want to start using this product. Happy Snapping!\n        </li>\n        }\n        {props.user_friends_dict.map((x) => (\n            <Message \n                sender_email={x.email} \n                profile_url={x.photoURL} \n                sender_name={x.name} \n                user_email={props.user_email}\n                streak_emoji={props.streak_emoji}\n                logged_in={props.logged_in}\n            />))\n        }\n        </ul>\n    </div>\n    );\n}\n\nexport default Messages;","import React, { Component, useState, useEffect } from 'react';\nimport {Friends, Strangers, Everyone} from './Friends.js';\nimport './Camera.css';\nimport './Messages.css';\nimport Camera from './Camera';\n\nexport default function CameraNavbar(props) {\n    const [show_friends, setShow_Friends] = useState(false);\n\n\tconst show_friends_button = () => {\n\t\tprops.get_friends_list();\n\t\tsetShow_Friends(true);\n\t}\n\tconst hide_friends_button = ()=> {\n\t\tprops.get_friends_list();\n\t\tsetShow_Friends(false);\n\t}\n\n\treturn (\n\t\t<>\n\t\t{ !show_friends ? \n\t\t<div className=\"webcam-navbar\">\n\t\t<div className=\"nav-box-1\">\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t{props.user_name == \"Guest\" ?\n\t\t\t\t\t<a onClick={props.login}>Sign In</a> :\n\t\t\t\t\t<img className=\"profile-pic\" src={props.user_pic} onClick={props.logout} alt=\"Profile Picture\" />\n\t\t\t\t\t}\n\t\t\t\t</li>\n\t\t\t\t<li><a>Search</a></li>\n\t\t\t</ul>\n\t\t</div>\n\t\t<div className=\"nav-box-3\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li><a onClick={show_friends_button}>Add Friend</a></li>\n\t\t\t\t\t<li><a>Flip Camera</a></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t\t: null}\n\t\t{ show_friends && props.user_strangers_dict != null &&\n\t\tprops.user_friends_dict != null && props.everyone_dict != null ?\n\t\t<div className=\"add-friends\">\n\t\t\t<div className=\"add-navbar\">\n\t\t\t\t<div className=\"nav-box-1\"><ul><li><a onClick={hide_friends_button}><b>Close</b></a></li></ul></div>\n\t\t\t\t<div className=\"nav-box-2\"><h1>Add Friends</h1></div>\n\t\t\t\t<div className=\"nav-box-3\"><ul><li><a><b>. . .</b></a></li></ul></div>\n\t\t\t</div>\n\t\t\t<div className=\"add-body\">\n\t\t\t\t<div className=\"search-bar\"><input type=\"search\" placeholder=\"Find Friends\"></input></div>\n\t\t\t\t<div className=\"add-title-navbar\"><h3 className=\"quick-add\">Quick Add ({props.user_strangers_dict.length})</h3></div>\n\t\t\t\t<ul className=\"add-list list-container\">\n\t\t\t\t{props.user_strangers_dict.map((x) => (\n\t\t\t\t\t<Strangers \n\t\t\t\t\t\tstranger_pic={x.photoURL} \n\t\t\t\t\t\tstranger_name={x.name}\n\t\t\t\t\t\tstranger_username={x.email}\n\t\t\t\t\t\tfriend_username={x.email}\n\t\t\t\t\t\tfriends_list={props.friends_list} \n\t\t\t\t\t\tuser_email={props.user_email}\n\t\t\t\t\t\tuser_name={props.user_name}\n\t\t\t\t\t\tuser_pic={props.user_pic}\n\t\t\t\t\t\tget_friends_list={props.get_friends_list}\n\t\t\t\t\t/>))\n\t\t\t\t}\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"add-title-navbar\"><h3 className=\"quick-add\">Friends ({props.user_friends_dict.length - 1})</h3></div>\n\t\t\t\t<ul className=\"add-list list-container\">\n\t\t\t\t{props.user_friends_dict.map((x) => (\n\t\t\t\t\t<Friends \n\t\t\t\t\t\tfriend_pic={x.photoURL} \n\t\t\t\t\t\tfriend_name={x.name} \n\t\t\t\t\t\tfriend_username={x.email} \n\t\t\t\t\t\tfriends_list={props.friends_list}\n\t\t\t\t\t\tuser_email={props.user_email}  \n\t\t\t\t\t\tget_friends_list={props.get_friends_list}\n\t\t\t\t\t/>))\n\t\t\t\t}\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"add-title-navbar\"><h3 className=\"quick-add\">Everyone ({props.everyone_dict.length})</h3></div>\n\t\t\t\t<ul className=\"add-list list-container\">\n\t\t\t\t{props.everyone_dict.map((x) => (\n\t\t\t\t\t<Everyone stranger_pic={x.photoURL}\n\t\t\t\t\t\tstranger_name={x.name} \n\t\t\t\t\t\tstranger_username={x.email} \n\t\t\t\t\t/>))}\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"add-footer\">\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t : null}\n\t\t</>\n\t);\n}\n","import React, { Component, useEffect, useState } from 'react';\nimport Webcam from \"react-webcam\";\nimport { v4 as uuid } from \"uuid\";\nimport './Camera.css';\nimport {SendFriends, Friends, Strangers, Everyone} from './Friends.js';\nimport {storage, db} from './Firebase.js';\nimport firebase from 'firebase/app';\nimport CameraNavbar from './CameraNavbar';\n\nexport default function Camera(props) {\n\n    const [send_list, setSend_list] = useState([])\n    const [image, setImage] = useState(null);\n    const [faceMode, setFaceMode] = useState(\"user\");\n    const [screen, setScreen] = useState(\"camera\");\n    const webcamRef = React.useRef(null);\n    const [aspectRatio, setAspectRatio] = useState(16/9);\n    const [show_friends, setShow_Friends] = useState(false);\n\n    const send = () => {\n        setImage(null);\n        setScreen('camera');\n        const user = firebase.auth().currentUser;\n        const id = uuid();\n        var email = user.email;\n        var name = user.displayName;\n        var avatarURL = \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\";\n\t\t\t\tvar to_users = send_list;\n        const uploadTask = storage.ref(`posts/${id}`).putString(image, 'data_url');\n          uploadTask.on(\n          \"state_changed\",\n          snapshot => {},\n          error => {\n            console.log(error);\n          },\n          () => {\n            storage\n            .ref(\"posts\")\n            .child(id)\n            .getDownloadURL()\n            .then(url => {\n              var time_sent = firebase.firestore.FieldValue.serverTimestamp();\n              to_users.forEach(user_temp => {\n                // Adding images to selected users\n                db.collection('posts').doc(user_temp).collection(\"Received\").doc(email).collection(\"images\").doc(id).set({\n                  imageURL: url,\n                  id: id,\n                  email: email,\n                  name: name,\n                  photoURL: avatarURL,\n                  timeStamp: time_sent,\n                })\n              })\n              // Update selected user's latest messages\n              to_users.forEach(user_temp => {\n                db.collection('posts').doc(user_temp).collection(\"Latest_Messages\").doc(email).update({\n                  imageURL: url,\n                  photoURL: avatarURL,\n                  id: id,\n                  email: email,\n                  name: name,\n                  timeStamp: time_sent,\n                  status: \"New Snap\",\n                })\n              })\n              // Add an image doc to sender's sent foler to keep track of selected users\n              db.collection('posts').doc(email).collection(\"Sent\").doc(id).set({\n                id: id,\n                email: email,\n                timeStamp: time_sent,\n                to: to_users,\n              })\n              // Update sender's latest messages for selected users\n              to_users.forEach(user_temp => {\n                if (user_temp != email) {\n                  db.collection('posts').doc(email).collection(\"Latest_Messages\").doc(user_temp).update({\n                    imageURL: url,\n                    photoURL: avatarURL,\n                    id: id,\n                    timeStamp: time_sent,\n                    status: \"Sent\",\n                  })\n                }\n               \n              })\n              props.get_messages_list();\n\n            })\n          })\n          console.log(\"Photo Sent\");\n          setSend_list([]);\n    }\n\n    const close = () => {\n        setImage(null);\n        setScreen(\"camera\");\n    }\n\n    const send_to = () => {\n      setScreen(\"send_to\");\n      setSend_list([]);\n    }\n\n    const go_back = () => {\n      setScreen(\"captured\");\n    }\n\n    const capture = React.useCallback(\n      () => {\n        // const img = webcamRef.current.getScreenshot({width:props.width, height:props.height});\n        const img = webcamRef.current.getScreenshot();\n        setImage(img);\n        setScreen(\"captured\");\n      },\n      [webcamRef]\n    );\n\n    const show_friends_button = () => {\n      props.get_friends_list();\n      setShow_Friends(true);\n    }\n\n    const hide_friends_button = ()=> {\n      props.get_friends_list();\n      setShow_Friends(false);\n    }\n\n    const handle_send_list = (e) => {\n      var arr = [];\n      e.forEach((element) => {\n        arr.push(element);\n      })\n      setSend_list(arr)\n      console.log(arr);\n    }\n\n    useEffect(() => {\n      if (props.mobile) {\n        // document.querySelector(\"#imageElement\").classList.add(\"image-mobile\");\n        // document.querySelector(\"#imageElement\").classList.remove(\"image-desktop\");\n        setAspectRatio(9/16);\n        // if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n        //   setAspectRatio(16/9);\n        // } else {\n        //   setAspectRatio(9/16);\n        // }\n\n      } else {\n        // document.querySelector(\"#imageElement\").classList.add(\"image-desktop\");\n        // document.querySelector(\"#imageElement\").classList.remove(\"image-mobile\");\n        setAspectRatio(16/9);\n        // if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n        //   setAspectRatio(9/16);\n        // } else {\n        //   setAspectRatio(16/9);\n        // }\n      }\n    })\n\n\n\n    return (\n      <>\n      <div className=\"webcam-screen\">\n      <Webcam\n          id=\"imageElement\"\n          className=\"image-desktop\"\n          ref={webcamRef}\n          audio={false}\n          mirrored={true}\n          forceScreenshotSourceSize={false}\n          screenshotFormat=\"image/png\"\n          screenshotQuality={1}\n          videoConstraints={{facingMode: faceMode}}\n          // videoConstraints={{facingMode: faceMode, aspectRatio: aspectRatio}}\n        />\n      { screen ===\"camera\" ?\n        \n        <div className=\"webcam-overlay\">\n          <CameraNavbar\n            user_email={props.user_email}\n            user_name={props.user_name}\n            user_pic={props.user_pic}\n            login={props.login}\n            logout={props.logout}\n            user_friends_dict={props.user_friends_dict}\n            user_strangers_dict={props.user_strangers_dict}\n            everyone_dict={props.everyone_dict}\n            get_friends_list={props.get_friends_list}\n            get_all_users={props.get_all_users}\n            friends_list={props.friends_list}\n            logged_in={props.logged_in}\n          />\n\n          <div className=\"webcam-footer\">\n            <div className=\"nav-box-1\">\n              <ul>\n                <li><a>Memories</a></li>\n                <li><a onClick={capture}>Capture</a></li>\n                <li><a>Filters</a></li>\n                {/* <li><a>{props.height} x {props.width}</a></li> */}\n              </ul>\n            </div>\n          </div>\n        </div>\n      \n      :\n      null\n      }\n      {screen ===\"captured\" && image ?\n      <div className=\"captured-overlay\">\n        <div className=\"image-preview\"><img id=\"imageElement\" className=\"image-desktop\" src={image}></img></div>\n        <div className=\"buttons-overlay\">\n          <div className=\"captured-header\">\n            <div className=\"header-left\">\n              <ul>\n                <li><button className=\"send\" onClick={close}>Close</button></li>\n              </ul>\n            </div>\n            <div className=\"header-right\">\n              <ul>\n                <li><button>Text</button></li>\n                <li><button>Draw</button></li>\n                <li><button>Crop</button></li>\n                <li><button>Time</button></li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"captured-footer\">\n            <div className=\"footer-left\">\n              <ul>\n                <li><button>Save</button></li>\n              </ul>\n            </div>\n            <div className=\"footer-right\">\n              <ul>\n                <li><button className=\"capture\" onClick={send_to}>Send to</button></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n      :\n      null\n      }\n      {screen ===\"send_to\" && image  ?\n      // <div className=\"send_to-overlay\">\n      //   <div className=\"buttons-overlay\">\n      //     <div className=\"send_to-header\">\n      //       <div className=\"header-left\">\n      //         <ul>\n      //           <li><button className=\"capture\" onClick={go_back}>Go Back</button></li>\n      //         </ul>\n      //       </div>\n      //       <div className=\"header-right\">\n      //         <ul>\n      //           <li><button>Add Friend</button></li>\n      //         </ul>\n      //       </div>\n      //     </div>\n      //   </div>\n      // </div>\n\n      <>\n      { !show_friends ? \n      <div className=\"send_to-overlay\">\n        <div className=\"send_to-header\">\n          <ul>\n            <li><button onClick={go_back}>Go Back</button></li>\n            <li><a>Search</a></li>\n            <li><a onClick={show_friends_button}>Add Friend</a></li>\n          </ul>\n        </div>\n        <div className=\"send-list\">\n          {/* <div className=\"stories-header\"><h3>Stories</h3></div>\n          <ul className=\"selection-list list-container\">\n            <li>My Story</li>\n          </ul>\n          <div className=\"stories-header\"><h3>Best Friends</h3></div>\n          <ul className=\"add-list list-container\">\n          </ul> */}\n          <div className=\"stories-header\"><h3>Recents</h3></div>\n          <ul className=\"add-list list-container\">\n            {props.user_friends_dict.map((x) => (\n              <SendFriends\n                send_list={send_list}\n                handle_send_list={handle_send_list}\n                friend_pic={x.photoURL} \n                friend_name={x.name} \n                friend_username={x.email} \n                friends_list={props.friends_list}\n                user_email={props.user_email}  \n                get_friends_list={props.get_friends_list}\n              />))\n            }\n          </ul>\n        </div>\n        {send_list.length <= 0 ? null: \n        <div className=\"send_to-footer\">\n          <div></div>\n          <button className=\"send\" onClick={send}><h1>Send</h1></button>\n        </div>\n        }\n      </div>\n      : null}\n      { show_friends && props.user_strangers_dict != null &&\n      props.user_friends_dict != null && props.everyone_dict != null ?\n      <div className=\"add-friends\">\n        <div className=\"add-navbar\">\n          <div className=\"nav-box-1\"><ul><li><a onClick={hide_friends_button}><b>Close</b></a></li></ul></div>\n          <div className=\"nav-box-2\"><h1>Add Friends</h1></div>\n          <div className=\"nav-box-3\"><ul><li><a><b>. . .</b></a></li></ul></div>\n        </div>\n        <div className=\"add-body\">\n          <div className=\"search-bar\"><input type=\"search\" placeholder=\"Find Friends\"></input></div>\n          <div className=\"add-title-navbar\"><h3 className=\"quick-add\">Quick Add ({props.user_strangers_dict.length})</h3></div>\n          <ul className=\"add-list list-container\">\n          {props.user_strangers_dict.map((x) => (\n            <Strangers \n              stranger_pic={x.photoURL} \n              stranger_name={x.name}\n              stranger_username={x.email}\n              friend_username={x.email}\n              friends_list={props.friends_list} \n              user_email={props.user_email}\n              get_friends_list={props.get_friends_list}\n            />))\n          }\n          </ul>\n          <div className=\"add-title-navbar\"><h3 className=\"quick-add\">Friends ({props.user_friends_dict.length})</h3></div>\n          <ul className=\"add-list list-container\">\n          {props.user_friends_dict.map((x) => (\n            <Friends \n              friend_pic={x.photoURL} \n              friend_name={x.name} \n              friend_username={x.email} \n              friends_list={props.friends_list}\n              user_email={props.user_email}  \n              get_friends_list={props.get_friends_list}\n            />))\n          }\n          </ul>\n          <div className=\"add-title-navbar\"><h3 className=\"quick-add\">Everyone ({props.everyone_dict.length})</h3></div>\n          <ul className=\"add-list list-container\">\n          {props.everyone_dict.map((x) => (\n            <Everyone stranger_pic={x.photoURL}\n              stranger_name={x.name} \n              stranger_username={x.email} \n            />))}\n          </ul>\n          <div className=\"add-footer\">\n\n          </div>\n        </div>\n      </div>\n      : null}\n      </>\n      :\n      null\n      }\n      </div>\n      </>\n    );\n}\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport SwipeableViews from 'react-swipeable-views';\nimport { bindKeyboard } from 'react-swipeable-views-utils';\nimport {auth, storage, db, provider} from './Firebase.js';\nimport firebase from 'firebase/app';\n// import 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport Messages from './Messages.js';\nimport Camera from './Camera.js';\nimport { findAllByAltText } from '@testing-library/react';\n\n\n// All the firebase calls will occur here to minimize usage\n\nconst BindKeyboardSwipeableViews = bindKeyboard(SwipeableViews);\nvar default_pic = \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\"\nvar dummy_dict = {\n  email: \"Guest@project-yellow-ghost.com\",\n  name:\"Guest\",\n  photoURL: default_pic,\n  streak_emoji:\"\\u{1F525}\",\n  imgs_sent: 0,\n  imgs_received: 0,\n  friends: ['Guest@project-yellow-ghost.com'],\n}\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // For swiping screen\n      index: 0,\n      height: window.innerHeight,\n      width: window.innerWidth,\n      mobile: false,\n      // All for Camera\n\n      // All for Messages\n      logged_in: false,\n      user_friends_dict: [dummy_dict],\n      user_strangers_dict: [dummy_dict],\n      everyone_dict: [dummy_dict],\n      // Properties for every user on firebase\n      user_email: \"Guest@project-yellow-ghost.com\",\n      user_name: \"Guest\",\n      user_pic: default_pic,\n      streak_emoji: \"\\u{1F525}\",\n      imgs_sent: 0,\n      imgs_received: 0,\n      user_friends: [\"Guest@project-yellow-ghost.com\"],\n    }\n    window.addEventListener(\"resize\", this.update);\n  }\n\n  set_device = () => {\n    if (this.state.width < this.state.height) {\n      this.setState({\n        mobile:true\n      })\n    } else {\n      this.setState({\n        mobile:false\n      })\n    }\n  }\n\n  update = () => {\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight\n    },\n    this.set_device()\n    );\n  };\n\n  // For Messages Component\n\n  login = () => {\n    auth.signInWithPopup(provider)\n    .then((result) => {\n      this.setState({\n          logged_in: true,\n          user_name: result.user.displayName,\n          user_email: result.user.email,\n          user_pic: result.user.photoURL,\n          user_friends: [result.user.email],\n      }, this.get_friends_list)\n    })\n    .catch((error) => console.log(error.message));\n  }\n  logout = () => {\n    firebase.auth().signOut()\n    this.setState({\n        logged_in: false,\n        streak_emoji: \"\\u{1F525}\",\n        user_name: \"Guest\",\n        user_email: \"Guest\",\n        user_friends_dict: [dummy_dict],\n        user_strangers_dict: [dummy_dict],\n        everyone_dict: [dummy_dict],\n        user_pic: \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\",\n    })\n  }\n  check_user = () => {\n    firebase.auth().onAuthStateChanged(function(user) {\n        if (user) {\n            this.setState({\n                user_name: user.displayName,\n                user_email: user.email,\n                user_pic: user.photoURL,\n                logged_in: true,\n            }, this.get_friends_list\n            )\n        }\n    }.bind(this))\n\t}\n\tget_friends_list = () => {\n\n    if (this.state.user_email != \"Guest@project-yellow-ghost.com\") {\n      const userdb = db.collection(\"users\").doc(this.state.user_email);\n      userdb.get().then((doc) => {\n          if (!doc.exists) {\n            // It is a new user and creates a new doc\n            db.collection(\"users\").doc(this.state.user_email).set({\n                email: this.state.user_email,\n                name: this.state.user_name,\n                photoURL: this.state.user_pic,\n                streak_emoji: this.state.streak_emoji,\n                imgs_sent: 0,\n                imgs_received: 0,\n                friends: [this.state.user_email],\n            })\n            .catch((error) => {\n                console.log(\"Couldn't write user to DB, error: \", error);\n            });\n            // Create latest messages list for user\n            db.collection(\"posts\").doc(this.state.user_email).collection(\"Latest_Messages\").doc(this.state.user_email).set({\n              email: this.state.user_email,\n              name: this.state.user_name,\n              imageURL: null,\n              photoURL: this.state.user_pic,\n              imgs_sent: 0,\n              imgs_received: 0,\n              friend_since: firebase.firestore.FieldValue.serverTimestamp(),\n              status: \"New Friend!\",\n              streak_num: 0,\n              timeStamp: null,\n              id: null,\n            })\n            .catch((error) => {\n                console.log(\"Couldn't write user to DB, error: \", error);\n            });\n            this.get_messages_list()\n          } else {\n            // User has logged in before and has friends\n            this.setState({\n              imgs_sent: doc.data()[\"imgs_sent\"],\n              imgs_received: doc.data()[\"imgs_received\"],\n              streak_emoji: doc.data()[\"streak_emoji\"],\n            }, \n            this.get_messages_list,\n            );\n          }\n\n      }).catch((error) => {\n          console.log(\"Error getting document:\", error);\n      });\n    }\n  }\n\n  get_messages_list = () => {\n    var friend_list = [];\n    var list = db.collection(\"posts\").doc(this.state.user_email).collection(\"Latest_Messages\");\n    list.get().then((doc) => {\n      doc.forEach((element) => {\n        friend_list.push(element.data()['email']);\n      })\n    })\n    this.setState({\n      user_friends: friend_list\n    }, this.get_all_users)\n  }\n\n  get_all_users = () => {\n    var friends_meta = [];\n    var strangers_meta = [];\n    var everyone_meta = [];\n    db.collection(\"users\").get().then((doc) => {\n        for (var i=0;i<doc.docs.length;i++) {\n            if (this.state.user_friends.includes(doc.docs[i].data()['email'])) {\n                friends_meta.push(doc.docs[i].data());\n            } else {\n                strangers_meta.push(doc.docs[i].data());\n            }\n            everyone_meta.push(doc.docs[i].data());\n        }\n        this.setState({\n            user_friends_dict: friends_meta,\n            user_strangers_dict: strangers_meta,\n            everyone_dict: everyone_meta,\n        })\n    });\n  }\n  componentDidMount() {\n      this.check_user();\n      this.set_device();\n  }\n\n\n  render() {\n    return (\n      <BindKeyboardSwipeableViews enableMouseEvents style={Object.assign({width: this.state.width, height: this.state.height, position: 'absolute', top: '0%', left: '0%'})}>\n        <div style={Object.assign({backgroundColor: 'white', minHeight: '100vh', width: '100%'})}>\n          <Helmet>\n            <meta name=\"viewport\" content=\"height=device-height, width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"></meta>\n          </Helmet>\n          <Messages\n            user_email={this.state.user_email}\n            user_name={this.state.user_name}\n            user_pic={this.state.user_pic}\n            user_friends_dict={this.state.user_friends_dict}\n            user_strangers_dict={this.state.user_strangers_dict}\n            everyone_dict={this.state.everyone_dict}\n            logged_in={this.state.logged_in}\n            login={this.login.bind(this)}\n            logout={this.logout.bind(this)}\n            get_friends_list={this.get_friends_list.bind(this)}\n            get_messages_list={this.get_messages_list.bind(this)}\n            get_all_users={this.get_all_users.bind(this)}\n            friends_list={this.state.user_friends}\n            streak_emoji={this.state.streak_emoji}\n          />\n        </div>\n        <div style={Object.assign({backgroundColor: 'Plum'})} >\n          {/* <Helmet>\n            <meta name=\"viewport\" content=\"height=device-height, width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=yes\"></meta>\n          </Helmet> */}\n          <Camera\n            height={this.state.height}\n            width={this.state.width}\n            mobile={this.state.mobile}\n            user_email={this.state.user_email}\n            user_name={this.state.user_name}\n            user_pic={this.state.user_pic}\n            user_friends_dict={this.state.user_friends_dict}\n            user_strangers_dict={this.state.user_strangers_dict}\n            everyone_dict={this.state.everyone_dict}\n            logged_in={this.state.logged_in}\n            login={this.login.bind(this)}\n            logout={this.logout.bind(this)}\n            get_friends_list={this.get_friends_list.bind(this)}\n            get_messages_list={this.get_messages_list.bind(this)}\n            get_all_users={this.get_all_users.bind(this)}\n            friends_list={this.state.user_friends}\n          />\n        </div>\n      </BindKeyboardSwipeableViews>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Router, Route, Switch } from \"react-router\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}