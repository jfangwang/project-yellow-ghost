{"version":3,"sources":["Firebase.js","MessagesNavbar.js","Message.js","Messages.js","Camera.js","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","provider","GoogleAuthProvider","MessagesNavbar","props","className","user_name","onClick","login","class","src","user_pic","logout","alt","Message","useState","status","setStatus","time","setTime","update_messages","collection","doc","user_email","orderBy","onSnapshot","snapshot","i","docs","length","data","sender_email","toDate","toUTCString","status_output","icon","img","setImg","imgid","setImgid","profile_url","setURL","sender_name","setName","useEffect","get","then","exists","console","log","delete","catch","error","sender","ref","url","arr","update","to","date","locale","streak_num","streak_image","bindKeyboard","SwipeableViews","Messages","signInWithPopup","result","setState","user","displayName","email","photoURL","get_friends_list","set","name","streak_emoji","state","friends","message","signOut","user_friends","this","newArr","map","x","Component","Camera","width","window","innerWidth","height","innerHeight","faceMode","send","currentUser","id","uuid","to_users","putString","image","on","mailList","child","getDownloadURL","imageURL","avatarURL","read","timeStamp","FieldValue","serverTimestamp","screen","close","send_to","capture","webcam","getScreenshot","setRef","addEventListener","videoConstraints","facingMode","screenshotFormat","audio","mirrored","BindKeyboardSwipeableViews","App","index","enableMouseEvents","style","Object","assign","position","top","left","backgroundColor","Helmet","content","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8cbdbde6.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';        // for authentication\nimport 'firebase/storage';     // for storage\nimport 'firebase/database';    // for realtime database\nimport 'firebase/firestore';   // for cloud firestore\nimport 'firebase/messaging';   // for cloud messaging\nimport 'firebase/functions';   // for cloud functions\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAzNigqy7stltnVUU8cAollxCxvW0CNBTE\",\n  authDomain: \"ghost-f8b34.firebaseapp.com\",\n  projectId: \"ghost-f8b34\",\n  storageBucket: \"ghost-f8b34.appspot.com\",\n  messagingSenderId: \"838623299070\",\n  appId: \"1:838623299070:web:b73429fee525b7c01cacaf\",\n  measurementId: \"G-85ZG5FVKQ4\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n// Google auth as a provider for this app, the popup\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { db, auth, storage, provider };","import React, { Component } from 'react';\nimport './Messages.css';\n\nexport default function MessagesNavbar(props) {\n    return (\n        <>\n        <div className=\"navbar\">\n            <div className=\"nav-box-1\">\n                <ul>\n                    <li>\n                        {props.user_name == \"Guest\" ?\n                        <a onClick={props.login}>Sign In</a> :\n                        <img class=\"profile-pic\" src={props.user_pic} onClick={props.logout} alt=\"Profile Picture\" />\n                        }\n                    </li>\n                    <li><a>Search</a></li>\n                </ul>\n            </div>\n            <div className=\"nav-box-2\">\n                <h1>Chat</h1>\n            </div>\n            <div className=\"nav-box-3\">\n                <ul>\n                    <li><a>Add Friend</a></li>\n                    <li><a>New Chat</a></li>\n                </ul>\n            </div>\n        </div>\n        </>\n    );\n}\n","import React, { Component, useState, useEffect } from 'react';\nimport {auth, storage, db} from './Firebase.js';\nimport ReactTimeAgo from 'react-timeago';\nimport firebase from 'firebase/app';\nimport './Messages.css';\n\n/*\n * Function - Message(sender_name)\n * @sender_name: Name of person who sent the image\n * Return: Loaded images requested from Firebase\n * \n * Description:\n * A request (/post/current_user/) is sent to Firebase to get current_user's received images.\n*/\n\nexport default function Message(props) {\n\n    // Check Firebase if user has any new messages\n\n    const [status, setStatus] = useState(\"Received\");\n    const [time, setTime] = useState(0);\n    const [imgArr, setImgArr] = useState([]);\n\n    const update_messages = () => {\n        db.collection('posts')\n        .doc(props.user_email)\n        .collection(\"Received\")\n        .orderBy(\"timeStamp\", \"desc\")\n        .onSnapshot((snapshot) => {\n            var i = 0;\n            while (i < snapshot.docs.length && snapshot.docs[i].data()[\"email\"] != props.sender_email) { i = i + 1; }\n            if (i < snapshot.docs.length) {\n                if (snapshot.docs[i].data()[\"email\"] == props.sender_email) {\n                    setStatus(\"New Snap\");\n                    if (snapshot.docs[i].data()[\"timeStamp\"] != null) {\n                        setTime(snapshot.docs[i].data()[\"timeStamp\"].toDate().toUTCString());\n                    }\n                } else {\n                    setStatus(\"Received\");\n                }\n            } else {\n                setStatus(\"Received\");\n            }\n        })\n    }\n\n    var status_output = <p>{status}</p>;\n    // const test1 = document.getElementById('icon');\n    // console.log(\"test\", test1);\n    var icon = <div className=\"message-received\"/>;\n\n    if (status === \"New Snap\"){\n        icon = <div className=\"message-new\" />\n        status_output = <p className=\"red\"><b>{status}</b></p>\n    } else if (status === \"Received\") {\n        icon = <div className=\"message-received\"/>\n    } else if (status === \"Sent\") {\n        icon = <div className=\"message-sent\"/>\n    } else if (status === \"Opened\") {\n        icon = <div className=\"message-opened\"/>\n    }\n\n    const [img, setImg] = useState(null);\n    const [imgid, setImgid] = useState(null);\n\n    const open = () => {\n        console.log(\"opening snap\", props.user_email);\n        db.collection('posts')\n        .doc(props.user_email)\n        .collection(\"Received\")\n        .orderBy(\"timeStamp\", \"desc\")\n        .get().then((snapshot) => {\n            var i = 0;\n            while (i < snapshot.docs.length && snapshot.docs[i].data()[\"email\"] != props.sender_email) { i = i + 1; }\n            if (i < snapshot.docs.length) {\n                if (snapshot.docs[i].data()[\"email\"] == props.sender_email) {\n                    if (snapshot.docs[i].data() != null) {\n                        setImg(snapshot.docs[i].data()[\"imageURL\"]);\n                        setImgid(snapshot.docs[i].data()[\"id\"]);\n                    }\n                } else {\n                    setStatus(\"Received\");\n                }\n            } else {\n                setStatus(\"Received\");\n            }\n        })\n    }\n\n    const delete_photo = () => {\n        storage.ref(`posts/${imgid}`).delete()\n        .then((url) => {\n            console.log(\"Deleted from storage: \", imgid);\n        })\n        .catch((error) => {\n            console.log(\"TRIED DELETING: \", imgid)\n        });\n        db.collection('posts').doc(imgid).delete().then(() => {\n          console.log(\"Deleted from firestore\");\n        }).catch((error) => {\n          console.error(\"Error removing document: \", error);\n        });\n      }\n\n    const close = () => {\n        setImg(null);\n        console.log(\"opening snap\", props.user_email);\n        const img = db.collection('posts').doc(props.user_email).collection(\"Received\").doc(imgid);\n        img.delete().then(() => {\n            console.log(\"Document deleted\");\n        }).catch((error) => {\n            console.log(\"Error removing document: \", error);\n        })\n        update_messages();\n        const sender = db.collection('posts').doc(props.sender_email).collection(\"Sent\").doc(imgid);\n        sender.get().then((doc) => {\n            if (doc.data()[\"to\"].length == 1) {\n                sender.delete().then(() => {\n                    console.log(\"sender document deleted, everyone saw the pic\");\n                }).catch((error) => {\n                    console.log(\"Could not delete sender's document\");\n                })\n                delete_photo();\n            } else {\n                // Update list if there are other peole who have to see the post\n                var i = 0;\n                var arr = []\n                for (i=0; i<doc.data()[\"to\"].length; i=i+1) {\n                    if (doc.data()[\"to\"][i] != props.user_email){\n                        arr[i] = doc.data()[\"to\"][i];\n                    }\n                }\n                sender.update({to: arr}).then(() => {\n                    console.log(\"Updated sender's list\");\n                }).catch((error) => {\n                    console.log(\"could not update list: \", error);\n                })\n            }\n        })\n    }\n\n    const [profile_url, setURL] = useState(\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\");\n    const [sender_name, setName] = useState(\"Guest (Me)\");\n\n    const get_sender_info = () => {\n        const sender = db.collection(\"users\").doc(props.sender_email);\n        sender.get().then((doc) => {\n            if (doc.exists) {\n                setURL(doc.data()[\"photoURL\"]);\n                setName(doc.data()[\"name\"]);\n            } else {\n                setURL(\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\");\n                setName(\"Guest (Me)\");\n            }\n        });\n    }\n\n    useEffect(() => {\n        update_messages();\n        get_sender_info();\n    })\n    \n    return (\n        <>\n        {img ? <div className=\"image-background\" onClick={close}><img className=\"image\" src={img} /></div> :\n            <li className=\"message-content\" onClick={open}>\n                <img className=\"message-avatar\" src={profile_url} alt=\"Avatar\"/>\n                <ul className=\"message-info\">\n                    <h3>{sender_name}</h3>\n                    <div className=\"message-sub-info\">\n                        {icon}\n                        {status_output}\n                        <p><ReactTimeAgo date={time} locale=\"en-US\"/></p>\n                        {props.streak_num > 0 ? <p>{props.streak_num}{props.streak_image}</p> : null}\n                    </div>\n                </ul>\n            </li>\n        }\n        </>\n    );\n\n}\n","import React, { Component } from 'react';\nimport {auth, storage, db, provider} from './Firebase.js';\nimport firebase from 'firebase/app';\nimport './Messages.css';\nimport MessagesNavbar from './MessagesNavbar';\nimport Message from './Message';\nimport SwipeableViews from 'react-swipeable-views';\nimport { bindKeyboard } from 'react-swipeable-views-utils';\n\nconst BindKeyboardSwipeableViews = bindKeyboard(SwipeableViews);\n\nclass Messages extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            streak_image: \"\\u{1F525}\",\n            user_name: \"Guest\",\n            user_email: \"Guest\",\n            user_friends: [\"Guest (Me)\"],\n            user_pic: \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\",\n        }\n    }\n\n    login = () => {\n        auth.signInWithPopup(provider)\n        .then((result) => {\n            this.setState({\n                user_name: result.user.displayName,\n                user_email: result.user.email,\n                user_pic: result.user.photoURL,\n            })\n            // Creates a new entry in db if user is signing up\n            const userdb = db.collection(\"users\").doc(result.user.email);\n            userdb.get().then((doc) => {\n                if (!doc.exists) {\n                    db.collection(\"users\").doc(result.user.email).set({\n                        email: result.user.email,\n                        name: result.user.displayName,\n                        photoURL: result.user.photoURL,\n                        streak_emoji: this.state.streak_image,\n                        friends: [result.user.email],\n                    }, this.get_friends_list())\n                    .catch((error) => {\n                        console.log(\"Couldn't write user to DB, error: \", error);\n                    });\n                } else {\n                    this.get_friends_list();\n                }\n            }).catch((error) => {\n                console.log(\"Error getting document:\", error);\n            });\n        })\n        .catch((error) => console.log(error.message));\n    }\n\n    logout = () => {\n        firebase.auth().signOut()\n        this.setState({\n            user_name: \"Guest\",\n            user_email: \"Guest\",\n            user_friends: [\"Guest (Me)\"],\n            user_pic: \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\",\n        })\n    }\n\n    get_friends_list = () => {\n        const friends = db.collection(\"users\").doc(this.state.user_email);\n        friends.get().then((doc) => {\n            this.setState({\n                user_friends: doc.data()[\"friends\"]\n            });\n        });\n    }\n\n    render() {\n        const arr = this.state.user_friends;\n        var i = 0;\n        var newArr = [];\n        for (i=0; i<arr.length; i= i + 1) {\n            newArr[i] = arr[i];\n        }\n\n\n        return (\n        <div className=\"messages-screen\">\n            <MessagesNavbar user_name={this.state.user_name} user_pic={this.state.user_pic} login={this.login} logout={this.logout} />\n            <ul className=\"messages-list\">\n            {newArr.map((x) => (<Message sender_email={x} user_email={this.state.user_email} streak_image={this.state.streak_image} />))}\n            </ul>\n        </div>\n        );\n    }\n}\n\nexport default Messages;","import React, { Component } from 'react';\nimport Webcam from \"react-webcam\";\nimport { v4 as uuid } from \"uuid\";\nimport './Camera.css';\nimport {storage, db} from './Firebase.js';\nimport firebase from 'firebase/app';\n\n\nclass Camera extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: window.innerWidth,\n            height: window.innerHeight,\n            image: null,\n            screen: 'camera',\n\n        }\n        window.addEventListener(\"resize\", this.update);\n    }\n\n    update = () => {\n        this.setState({\n          width: window.innerWidth,\n          height: window.innerHeight,\n          faceMode: \"user\"\n        });\n    };\n\n    send = () => {\n        const user = firebase.auth().currentUser;\n        const id = uuid();\n        var email = user.email;\n        var name = user.displayName;\n        var avatarURL = \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\";\n\t\t\t\tvar to_users = [email]\n        if (user) {\n\n        }\n        const uploadTask = storage.ref(`posts/${id}`).putString(this.state.image, 'data_url');\n          uploadTask.on(\n          \"state_changed\",\n          snapshot => {},\n          error => {\n            console.log(error);\n          },\n          () => {\n            var i = 0;\n            for(i=0; i<to_users.length; i++) {\n              console.log(typeof(to_users[i]), to_users[i]);\n              var mailList = to_users[i];\n              storage\n              .ref(\"posts\")\n              .child(id)\n              .getDownloadURL()\n              .then(url => {\n                db.collection('posts').doc(mailList).collection(\"Received\").doc(id).set({\n                  imageURL: url,\n                  id: id,\n                  email: email,\n                  name: name,\n                  avatarURL: avatarURL,\n                  read: false,\n                  timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\n                  to: to_users,\n                })\n\t\t\t\t\t\t\t\tconsole.log(\"Photo Sent\");\n\t\t\t\t\t\t\t\tthis.setState({ image: null, screen: 'camera' })\n              })\n            }\n            db.collection('posts').doc(email).collection(\"Sent\").doc(id).set({\n              id: id,\n              email: email,\n              timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\n              to: to_users,\n            })\n          })\n    }\n\n    close = () => {\n        this.setState({ image: null, screen: \"camera\" })\n    }\n\n    send_to = () => {\n      this.setState({screen: \"send_to\"})\n    }\n\n    capture = () => {\n        const img = this.webcam.getScreenshot();\n        this.setState({ image: img, screen: \"captured\" })\n    }\n\n    setRef = (webcam) => {\n        this.webcam = webcam;\n      };\n\n    render() {\n        return (\n            <>\n                {/* { this.state.image ? <img src={this.state.image} alt=\"asdf\"/> : <Webcam\n                    ref={this.setRef}\n                    videoConstraints={{facingMode: this.state.faceMode, width: this.state.width, height: this.state.height}}\n                    screenshotFormat=\"image/jpeg\"\n                    audio={false}\n                    mirrored={true}\n                    className=\"webcam\"\n                />}\n\n                { this.state.image || this.state.show_send_list ? <button className=\"capture\" onClick={this.close}>Close</button> : <button className=\"capture\" onClick={this.capture}>Capture</button> }\n                { this.state.image? <button className=\"send\">Send to...</button> : null }\n                { this.state.show_send_list ? <button className=\"send\" onClick={this.send}>Send</button> : null} */}\n              {this.state.screen == \"camera\" ? \n              <div className=\"cam-tab\">\n                <Webcam\n                  ref={this.setRef}\n                  videoConstraints={{facingMode: this.state.faceMode, width: this.state.width, height: this.state.height}}\n                  screenshotFormat=\"image/jpeg\"\n                  audio={false}\n                  mirrored={true}\n                  className=\"webcam\"\n                />\n                <button className=\"capture\" onClick={this.capture}>Capture</button>\n              </div> : null\n              }\n              {this.state.screen == \"captured\" && this.state.image ? \n              <div className=\"cam-tab\">\n                <img src={this.state.image}></img>\n                <button className=\"capture\" onClick={this.send_to}>Send to</button>\n                <button className=\"send\" onClick={this.close}>Close</button>\n              </div> : null\n              }\n              {this.state.screen == \"send_to\" && this.state.image  ? \n                <div className=\"user-list\">\n                \n                <button className=\"send\" onClick={this.send}>Send</button>\n                <button className=\"capture\" onClick={this.close}>Close</button>\n              </div> : null\n              }\n            \n            </>\n        );\n    }\n}\n\nexport default Camera;","import React from 'react';\nimport Helmet from 'react-helmet';\nimport SwipeableViews from 'react-swipeable-views';\nimport { bindKeyboard } from 'react-swipeable-views-utils';\nimport './App.css';\nimport Messages from './Messages.js';\nimport Camera from './Camera.js';\n\nconst BindKeyboardSwipeableViews = bindKeyboard(SwipeableViews);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: 0,\n      height: window.innerHeight,\n      width: window.innerWidth\n    }\n    window.addEventListener(\"resize\", this.update);\n  }\n\n  update = () => {\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  };\n\n  render() {\n    return (\n      <BindKeyboardSwipeableViews enableMouseEvents style={Object.assign({width: this.state.width, height: this.state.height, position: 'absolute', top: '0%', left: '0%'})}>\n        <div style={Object.assign({backgroundColor: 'mediumseagreen', height: '100%', width: '100%'})}>\n          <Helmet>\n            <meta name=\"viewport\" content=\"height=device-height, width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"></meta>\n          </Helmet>\n          <Messages/>\n        </div>\n        <div style={Object.assign({backgroundColor: 'Plum'})} >\n          <Helmet>\n            <meta name=\"viewport\" content=\"height=device-height, width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=yes\"></meta>\n          </Helmet>\n          <Camera/>\n        </div>\n      </BindKeyboardSwipeableViews>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Router, Route, Switch } from \"react-router\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}