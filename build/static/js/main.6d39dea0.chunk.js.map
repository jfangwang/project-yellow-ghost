{"version":3,"sources":["Firebase.js","Friends.js","MessagesNavbar.js","Message.js","Messages.js","CameraNavbar.js","Camera.js","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","provider","GoogleAuthProvider","Friends","props","useState","removed","setRemoved","friends","collection","doc","user_email","className","src","friend_pic","alt","friend_name","friend_username","onClick","friends_list","splice","indexOf","update","Strangers","added","setAdded","stranger_pic","stranger_name","stranger_username","push","Everyone","MessagesNavbar","show_friends","setShow_Friends","user_name","login","user_pic","logout","get_friends_list","user_strangers_dict","user_friends_dict","everyone_dict","type","placeholder","length","map","x","photoURL","name","email","Message","status","setStatus","time","setTime","update_messages","orderBy","onSnapshot","snapshot","i","docs","data","sender_email","toDate","toUTCString","status_output","icon","img","setImg","imgid","setImgid","useEffect","delete","then","console","log","catch","error","sender","get","ref","url","arr","to","id","profile_url","sender_name","date","locale","streak_num","streak_emoji","Messages","get_all_users","logged_in","CameraNavbar","Camera","image","setImage","faceMode","screen","setScreen","webcamRef","React","useRef","aspectRatio","setAspectRatio","close","capture","useCallback","current","getScreenshot","mobile","document","querySelector","classList","add","remove","test","navigator","userAgent","audio","mirrored","forceScreenshotSourceSize","screenshotFormat","screenshotQuality","videoConstraints","facingMode","user","currentUser","uuid","displayName","to_users","putString","on","mailList","child","getDownloadURL","set","imageURL","avatarURL","read","timeStamp","FieldValue","serverTimestamp","BindKeyboardSwipeableViews","bindKeyboard","SwipeableViews","default_pic","dummy_dict","imgs_sent","imgs_received","App","set_device","state","width","height","setState","window","innerWidth","innerHeight","signInWithPopup","result","user_friends","message","signOut","check_user","onAuthStateChanged","this","bind","exists","friends_meta","strangers_meta","everyone_meta","meta_idx","strangers_idx","everyone_idx","includes","index","addEventListener","enableMouseEvents","style","Object","assign","position","top","left","backgroundColor","minHeight","Helmet","content","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6d39dea0.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';        // for authentication\nimport 'firebase/storage';     // for storage\nimport 'firebase/database';    // for realtime database\nimport 'firebase/firestore';   // for cloud firestore\nimport 'firebase/messaging';   // for cloud messaging\nimport 'firebase/functions';   // for cloud functions\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAzNigqy7stltnVUU8cAollxCxvW0CNBTE\",\n  authDomain: \"ghost-f8b34.firebaseapp.com\",\n  projectId: \"ghost-f8b34\",\n  storageBucket: \"ghost-f8b34.appspot.com\",\n  messagingSenderId: \"838623299070\",\n  appId: \"1:838623299070:web:b73429fee525b7c01cacaf\",\n  measurementId: \"G-85ZG5FVKQ4\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n// Google auth as a provider for this app, the popup\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { db, auth, storage, provider };","import React, { Component, useState, useEffect } from 'react';\nimport {db} from './Firebase.js';\nimport './Messages.css';\n\nfunction Friends(props) {\n\n\tconst [removed, setRemoved] = useState(false);\n\tconst friends = db.collection(\"users\").doc(props.user_email);\n\n\tconst remove_friend = () => {\n\n\t\tprops.friends_list.splice(props.friends_list.indexOf(props.friend_username), 1)\n\t\tfriends.update({friends: props.friends_list})\n\n\t}\n\tconst remove = () => {\n\t\tif (props.friend_username != \"Guest@project-yellow-ghost.com\") {\n\t\t\tremove_friend();\n\t\t}\n\t\tsetRemoved(true);\n\t}\n\n    return (\n        <li className=\"add-friends-content\">\n\t\t\t\t\t\t<div className=\"add-box-1\">\n\t\t\t\t\t\t<img className=\"message-avatar\" src={props.friend_pic} alt=\"Avatar\"/>\n\t\t\t\t\t\t<ul className=\"message-info\">\n\t\t\t\t\t\t\t\t<h3>{props.friend_name}</h3>\n\t\t\t\t\t\t\t\t<p>{props.friend_username}</p>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"add-box-2\">\n\t\t\t\t\t\t{removed ? <p className=\"removed\"><b>Removed!</b></p> : <button onClick={remove}><b>Remove</b></button>}\n\t\t\t\t\t\t</div>\n        </li>\n    )\n}\n\nfunction Strangers(props) {\n\n\n\tconst [added, setAdded] = useState(false);\n\tconst friends = db.collection(\"users\").doc(props.user_email);\n\t\n\tconst add_friend = () => {\n\t\tprops.friends_list.push(props.stranger_username);\n\t\tfriends.update({friends: props.friends_list})\n\t}\n\n\tconst add_true = () => {\n\t\tif (props.friend_username != \"Guest@project-yellow-ghost.com\") {\n\t\t\tadd_friend();\n\t\t}\n\t\tsetAdded(true);\n\t}\n\n   return (\n\t   <li className=\"add-friends-content\">\n\t\t\t\t\t   <div className=\"add-box-1\">\n\t\t\t\t\t   <img className=\"message-avatar\" src={props.stranger_pic} alt=\"Avatar\"/>\n\t\t\t\t\t   <ul className=\"message-info\">\n\t\t\t\t\t\t\t   <h3>{props.stranger_name}</h3>\n\t\t\t\t\t\t\t   <p>{props.stranger_username}</p>\n\t\t\t\t\t   </ul>\n\t\t\t\t\t   </div>\n\t\t\t\t\t   <div className=\"add-box-2\">\n\t\t\t\t\t\t   {added ? <p className=\"added\"><b>Added!</b></p> : <button onClick={add_true}><b>Add</b></button>}\n\t\t\t\t\t   </div>\n\t   </li>\n   )\n}\n\nfunction Everyone(props) {\n\n   return (\n\t   <li className=\"add-friends-content\">\n\t\t\t\t\t   <div className=\"add-box-1\">\n\t\t\t\t\t   <img className=\"message-avatar\" src={props.stranger_pic} alt=\"Avatar\"/>\n\t\t\t\t\t   <ul className=\"message-info\">\n\t\t\t\t\t\t\t   <h3>{props.stranger_name}</h3>\n\t\t\t\t\t\t\t   <p>{props.stranger_username}</p>\n\t\t\t\t\t   </ul>\n\t\t\t\t\t   </div>\n\t\t\t\t\t   <div className=\"add-box-2\">\n\t\t\t\t\t   </div>\n\t   </li>\n   )\n}\nexport {Friends, Strangers, Everyone}","import React, { Component, useState, useEffect } from 'react';\nimport {Friends, Strangers, Everyone} from './Friends.js';\nimport './Messages.css';\n\nexport default function MessagesNavbar(props) {\n\tconst [show_friends, setShow_Friends] = useState(false);\n\n\tconst show_friends_button = () => {\n\t\tprops.get_friends_list();\n\t\tsetShow_Friends(true);\n\t}\n\tconst hide_friends_button = ()=> {\n\t\tprops.get_friends_list();\n\t\tsetShow_Friends(false);\n\t}\n\n\treturn (\n\t\t<>\n\t\t{ !show_friends ? \n\t\t<div className=\"navbar\">\n\t\t<div className=\"nav-box-1\">\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t{props.user_name == \"Guest\" ?\n\t\t\t\t\t<a onClick={props.login}>Sign In</a> :\n\t\t\t\t\t<img className=\"profile-pic\" src={props.user_pic} onClick={props.logout} alt=\"Profile Picture\" />\n\t\t\t\t\t}\n\t\t\t\t</li>\n\t\t\t\t<li><a>Search</a></li>\n\t\t\t</ul>\n\t\t</div>\n\t\t<div className=\"nav-box-2\">\n\t\t\t<h1>Chat</h1>\n\t\t</div>\n\t\t<div className=\"nav-box-3\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li><a onClick={show_friends_button}>Add Friend</a></li>\n\t\t\t\t\t<li><a>New Chat</a></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t\t: null}\n\t\t{ show_friends && props.user_strangers_dict != null &&\n\t\tprops.user_friends_dict != null && props.everyone_dict != null ?\n\t\t<div className=\"add-friends\">\n\t\t\t<div className=\"add-navbar\">\n\t\t\t\t<div className=\"nav-box-1\"><ul><li><a onClick={hide_friends_button}><b>Close</b></a></li></ul></div>\n\t\t\t\t<div className=\"nav-box-2\"><h1>Add Friends</h1></div>\n\t\t\t\t<div className=\"nav-box-3\"><ul><li><a><b>. . .</b></a></li></ul></div>\n\t\t\t</div>\n\t\t\t<div className=\"add-body\">\n\t\t\t\t<div className=\"search-bar\"><input type=\"search\" placeholder=\"Find Friends\"></input></div>\n\t\t\t\t<div className=\"add-title-navbar\"><h3 className=\"quick-add\">Quick Add ({props.user_strangers_dict.length})</h3></div>\n\t\t\t\t<ul className=\"add-list list-container\">\n\t\t\t\t{props.user_strangers_dict.map((x) => (\n\t\t\t\t\t<Strangers \n\t\t\t\t\t\tstranger_pic={x.photoURL} \n\t\t\t\t\t\tstranger_name={x.name}\n\t\t\t\t\t\tstranger_username={x.email}\n\t\t\t\t\t\tfriend_username={x.email}\n\t\t\t\t\t\tfriends_list={props.friends_list} \n\t\t\t\t\t\tuser_email={props.user_email}\n\t\t\t\t\t\tget_friends_list={props.get_friends_list}\n\t\t\t\t\t/>))\n\t\t\t\t}\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"add-title-navbar\"><h3 className=\"quick-add\">Friends ({props.user_friends_dict.length})</h3></div>\n\t\t\t\t<ul className=\"add-list list-container\">\n\t\t\t\t{props.user_friends_dict.map((x) => (\n\t\t\t\t\t<Friends \n\t\t\t\t\t\tfriend_pic={x.photoURL} \n\t\t\t\t\t\tfriend_name={x.name} \n\t\t\t\t\t\tfriend_username={x.email} \n\t\t\t\t\t\tfriends_list={props.friends_list}\n\t\t\t\t\t\tuser_email={props.user_email}  \n\t\t\t\t\t\tget_friends_list={props.get_friends_list}\n\t\t\t\t\t/>))\n\t\t\t\t}\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"add-title-navbar\"><h3 className=\"quick-add\">Everyone ({props.everyone_dict.length})</h3></div>\n\t\t\t\t<ul className=\"add-list list-container\">\n\t\t\t\t{props.everyone_dict.map((x) => (\n\t\t\t\t\t<Everyone stranger_pic={x.photoURL}\n\t\t\t\t\t\tstranger_name={x.name} \n\t\t\t\t\t\tstranger_username={x.email} \n\t\t\t\t\t/>))}\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"add-footer\">\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t : null}\n\t\t</>\n\t);\n}\n","import React, { Component, useState, useEffect } from 'react';\nimport {auth, storage, db} from './Firebase.js';\nimport ReactTimeAgo from 'react-timeago';\nimport firebase from 'firebase/app';\nimport './Messages.css';\n\n/*\n * Function - Message(sender_name)\n * @sender_name: Name of person who sent the image\n * Return: Loaded images requested from Firebase\n * \n * Description:\n * A request (/post/current_user/) is sent to Firebase to get current_user's received images.\n*/\n\nexport default function Message(props) {\n\n    // Check Firebase if user has any new messages\n\n    const [status, setStatus] = useState(\"Received\");\n    const [time, setTime] = useState(0);\n    const [imgArr, setImgArr] = useState([]);\n\n    const update_messages = () => {\n        db.collection('posts')\n        .doc(props.user_email)\n        .collection(\"Received\")\n        .orderBy(\"timeStamp\", \"desc\")\n        .onSnapshot((snapshot) => {\n            var i = 0;\n            // Filters out all the photos sent by the sender\n            while (i < snapshot.docs.length && snapshot.docs[i].data()[\"email\"] != props.sender_email) { i = i + 1; }\n            if (i < snapshot.docs.length) {\n                if (snapshot.docs[i].data()[\"email\"] == props.sender_email) {\n                    setStatus(\"New Snap\");\n                    if (snapshot.docs[i].data()[\"timeStamp\"] != null) {\n                        setTime(snapshot.docs[i].data()[\"timeStamp\"].toDate().toUTCString());\n                    }\n                } else {\n                    setStatus(\"Received\");\n                }\n            } else {\n                setStatus(\"Received\");\n            }\n        })\n    }\n\n    var status_output = <p>{status}</p>;\n    var icon = <div className=\"message-received\"/>;\n\n    if (status === \"New Snap\"){\n        icon = <div className=\"message-new\" />\n        status_output = <p className=\"red\"><b>{status}</b></p>\n    } else if (status === \"Received\") {\n        icon = <div className=\"message-received\"/>\n    } else if (status === \"Sent\") {\n        icon = <div className=\"message-sent\"/>\n    } else if (status === \"Opened\") {\n        icon = <div className=\"message-opened\"/>\n    }\n\n    const [img, setImg] = useState(null);\n    const [imgid, setImgid] = useState(null);\n\n    const open = () => {\n        console.log(\"opening snap\", props.user_email);\n        db.collection('posts')\n        .doc(props.user_email)\n        .collection(\"Received\")\n        .orderBy(\"timeStamp\", \"desc\")\n        .get().then((snapshot) => {\n            var i = 0;\n            while (i < snapshot.docs.length && snapshot.docs[i].data()[\"email\"] != props.sender_email) { i = i + 1; }\n            if (i < snapshot.docs.length) {\n                if (snapshot.docs[i].data()[\"email\"] == props.sender_email) {\n                    if (snapshot.docs[i].data() != null) {\n                        setImg(snapshot.docs[i].data()[\"imageURL\"]);\n                        setImgid(snapshot.docs[i].data()[\"id\"]);\n                    }\n                } else {\n                    setStatus(\"Received\");\n                }\n            } else {\n                setStatus(\"Received\");\n            }\n        })\n    }\n\n    const delete_photo = () => {\n        storage.ref(`posts/${imgid}`).delete()\n        .then((url) => {\n            console.log(\"Deleted from storage: \", imgid);\n        })\n        .catch((error) => {\n            console.log(\"TRIED DELETING: \", imgid)\n        });\n        db.collection('posts').doc(imgid).delete().then(() => {\n          console.log(\"Deleted from firestore\");\n        }).catch((error) => {\n          console.error(\"Error removing document: \", error);\n        });\n      }\n\n    const close = () => {\n        setImg(null);\n        const img = db.collection('posts').doc(props.user_email).collection(\"Received\").doc(imgid);\n        img.delete().then(() => {\n            console.log(\"Document deleted\");\n        }).catch((error) => {\n            console.log(\"Error removing document: \", error);\n        })\n        update_messages();\n        const sender = db.collection('posts').doc(props.sender_email).collection(\"Sent\").doc(imgid);\n        sender.get().then((doc) => {\n            if (doc.data()[\"to\"].length == 1) {\n                sender.delete().then(() => {\n                    console.log(\"sender document deleted, everyone saw the pic\");\n                }).catch((error) => {\n                    console.log(\"Could not delete sender's document\");\n                })\n                delete_photo();\n            } else {\n                // Update list if there are other peole who have to see the post\n                var i = 0;\n                var arr = []\n                for (i=0; i<doc.data()[\"to\"].length; i=i+1) {\n                    if (doc.data()[\"to\"][i] != props.user_email){\n                        arr[i] = doc.data()[\"to\"][i];\n                    }\n                }\n                sender.update({to: arr}).then(() => {\n                    console.log(\"Updated sender's list\");\n                }).catch((error) => {\n                    console.log(\"could not update list: \", error);\n                })\n            }\n        })\n    }\n\n    useEffect(() => {\n        update_messages();\n    })\n    \n    return (\n        <>\n        {img ? <div className=\"image-background\" onClick={close}><img id=\"image\" className=\"\" src={img} /></div> :\n            <li className=\"message-content\" onClick={open}>\n                <img className=\"message-avatar\" src={props.profile_url} alt=\"Avatar\"/>\n                <ul className=\"message-info\">\n                    <h3>{props.sender_name}</h3>\n                    <div className=\"message-sub-info\">\n                        {icon}\n                        {status_output}\n                        {time != 0 ? <p><ReactTimeAgo date={time} locale=\"en-US\"/></p> : null }\n                        {props.streak_num > 0 ? <p>{props.streak_num}{props.streak_emoji}</p> : null}\n                    </div>\n                </ul>\n            </li>\n        }\n        </>\n    );\n\n}\n","import React, { Component } from 'react';\nimport './Messages.css';\nimport MessagesNavbar from './MessagesNavbar';\nimport Message from './Message';\n\n\nfunction Messages(props) {\n    return (\n    <div className=\"messages-screen\">\n        <MessagesNavbar\n            user_email={props.user_email}\n            user_name={props.user_name}\n            user_pic={props.user_pic}\n            login={props.login}\n            logout={props.logout}\n            user_friends_dict={props.user_friends_dict}\n            user_strangers_dict={props.user_strangers_dict}\n            everyone_dict={props.everyone_dict}\n            get_friends_list={props.get_friends_list}\n            get_all_users={props.get_all_users}\n            friends_list={props.friends_list}\n            logged_in={props.logged_in}\n        />\n        <ul className=\"messages-list\">\n        {props.logged_in ? null :\n        <li className=\"welcome-statement\">Welcome to Project Yellow Ghost, a web app version of SnapChat. This was a project developed by Jonathan Wang\n            and this was his final project for school. Right now, you are on a local guest account for you to try out. Feel free to sign in at the top if \n            you want to start using this product. Happy Snapping!\n        </li>\n        }\n        {props.user_friends_dict.map((x) => (\n            <Message \n                sender_email={x.email} \n                profile_url={x.photoURL} \n                sender_name={x.name} \n                user_email={props.user_email}\n                streak_emoji={props.streak_emoji}\n                logged_in={props.logged_in}\n            />))\n        }\n        </ul>\n    </div>\n    );\n}\n\nexport default Messages;","import React from 'react';\nimport './Camera.css';\nimport './Messages.css';\nimport Camera from './Camera';\n\nexport default function CameraNavbar(props) {\n    return (\n        <div className=\"webcam-navbar\">\n\t\t\t\t\t<div className=\"nav-box-1 webcam-nav-box\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t{props.user_name == \"Guest\" ?\n\t\t\t\t\t<a onClick={props.login}>Sign In</a> :\n\t\t\t\t\t<img className=\"profile-pic\" src={props.user_pic} onClick={props.logout} alt=\"Profile Picture\" />\n\t\t\t\t\t}\n\t\t\t\t</li>\n\t\t\t\t\t\t<li><a>Search</a></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"nav-box-3 webcam-nav-box\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><a>Add Friend</a></li>\n\t\t\t\t\t\t<li><a>Flip Camera</a></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n        </div>\n    )\n}\n","import React, { Component, useEffect, useState } from 'react';\nimport Webcam from \"react-webcam\";\nimport { v4 as uuid } from \"uuid\";\nimport './Camera.css';\nimport {storage, db} from './Firebase.js';\nimport firebase from 'firebase/app';\nimport CameraNavbar from './CameraNavbar';\n\n\nexport default function Camera(props) {\n\n    const [image, setImage] = useState(null);\n    const [faceMode, setFaceMode] = useState(\"user\");\n    const [screen, setScreen] = useState(\"camera\");\n    const webcamRef = React.useRef(null);\n    const [aspectRatio, setAspectRatio] = useState(16/9);\n\n    const send = () => {\n        const user = firebase.auth().currentUser;\n        const id = uuid();\n        var email = user.email;\n        var name = user.displayName;\n        var avatarURL = \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\";\n\t\t\t\tvar to_users = [email]\n        const uploadTask = storage.ref(`posts/${id}`).putString(image, 'data_url');\n          uploadTask.on(\n          \"state_changed\",\n          snapshot => {},\n          error => {\n            console.log(error);\n          },\n          () => {\n            var i = 0;\n            for(i=0; i<to_users.length; i++) {\n              console.log(typeof(to_users[i]), to_users[i]);\n              var mailList = to_users[i];\n              storage\n              .ref(\"posts\")\n              .child(id)\n              .getDownloadURL()\n              .then(url => {\n                db.collection('posts').doc(mailList).collection(\"Received\").doc(id).set({\n                  imageURL: url,\n                  id: id,\n                  email: email,\n                  name: name,\n                  avatarURL: avatarURL,\n                  read: false,\n                  timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\n                  to: to_users,\n                })\n\t\t\t\t\t\t\t\tconsole.log(\"Photo Sent\");\n                setImage(null);\n                setScreen('camera');\n              })\n            }\n            db.collection('posts').doc(email).collection(\"Sent\").doc(id).set({\n              id: id,\n              email: email,\n              timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\n              to: to_users,\n            })\n          })\n    }\n\n    const close = () => {\n        setImage(null);\n        setScreen(\"camera\");\n    }\n\n    const send_to = () => {\n      setScreen(\"send_to\")\n    }\n\n    const capture = React.useCallback(\n      () => {\n        // const img = webcamRef.current.getScreenshot({width:props.width, height:props.height});\n        const img = webcamRef.current.getScreenshot();\n        setImage(img);\n        setScreen(\"captured\");\n      },\n      [webcamRef]\n    );\n\n    useEffect(() => {\n      try {\n        if (props.mobile) {\n          document.querySelector(\"#imageElement\").classList.add(\"image-mobile\");\n          document.querySelector(\"#imageElement\").classList.remove(\"image-desktop\");\n          if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n            setAspectRatio(16/9);\n          } else {\n            setAspectRatio(9/16);\n          }\n\n        } else {\n          document.querySelector(\"#imageElement\").classList.add(\"image-desktop\");\n          document.querySelector(\"#imageElement\").classList.remove(\"image-mobile\");\n          setAspectRatio(16/9);\n          if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n            setAspectRatio(9/16);\n          } else {\n            setAspectRatio(16/9);\n          }\n        }\n        console.log(document.querySelector(\"#imageElement\").classList);\n      } catch {\n\n      }\n    })\n\n\n\n    return (\n      <>\n      { screen ===\"camera\" ?\n      <div className=\"webcam-screen\">\n      <Webcam\n        id=\"imageElement\"\n        className=\"image-mobile\"\n        ref={webcamRef}\n        audio={false}\n        mirrored={true}\n        forceScreenshotSourceSize={false}\n        screenshotFormat=\"image/png\"\n        screenshotQuality={1}\n        videoConstraints={{facingMode: faceMode, aspectRatio: aspectRatio}}\n      />\n        <div className=\"webcam-overlay\">\n          <CameraNavbar\n            user_email={props.user_email}\n            user_name={props.user_name}\n            user_pic={props.user_pic}\n            login={props.login}\n            logout={props.logout}\n            user_friends_dict={props.user_friends_dict}\n            user_strangers_dict={props.user_strangers_dict}\n            everyone_dict={props.everyone_dict}\n            get_friends_list={props.get_friends_list}\n            get_all_users={props.get_all_users}\n            friends_list={props.friends_list}\n            logged_in={props.logged_in}\n          />\n          <div className=\"webcam-footer\">\n            <ul>\n              {/* <li><a>{props.height} x {props.width}</a></li> */}\n            </ul>\n          </div>\n          <div className=\"webcam-footer\">\n            <div className=\"nav-box-1\">\n              <ul>\n                <li><a>Memories</a></li>\n                <li><a onClick={capture}>Capture</a></li>\n                <li><a>Filters</a></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n      :\n      null\n      }\n      {screen ===\"captured\" && image ?\n      <div className=\"webcam-overlay\">\n        <div className=\"image-preview\"><img id=\"imageElement\" className=\"\" src={image}></img></div>\n        <div className=\"buttons-overlay\">\n          <div className=\"webcam-footer\">\n            <button className=\"capture\" onClick={send_to}>Send to</button>\n            <button className=\"send\" onClick={close}>Close</button>\n          </div>\n        </div>\n      </div>\n      :\n      null\n      }\n      {screen ===\"send_to\" && image  ?\n      <div className=\"webcam-overlay\">\n        <div className=\"buttons-overlay\">\n        <div className=\"webcam-footer\">\n          <button className=\"send\" onClick={send}>Send</button>\n          <button className=\"capture\" onClick={close}>Close</button>\n        </div>\n        </div>\n      </div>\n      :\n      null\n      }\n      </>\n    );\n}\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport SwipeableViews from 'react-swipeable-views';\nimport { bindKeyboard } from 'react-swipeable-views-utils';\nimport {auth, storage, db, provider} from './Firebase.js';\nimport firebase from 'firebase/app';\n// import 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport Messages from './Messages.js';\nimport Camera from './Camera.js';\nimport { findAllByAltText } from '@testing-library/react';\n\n\n// All the firebase calls will occur here to minimize usage\n\nconst BindKeyboardSwipeableViews = bindKeyboard(SwipeableViews);\nvar default_pic = \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\"\nvar dummy_dict = {\n  email: \"Guest@project-yellow-ghost.com\",\n  name:\"Guest\",\n  photoURL: default_pic,\n  streak_emoji:\"\\u{1F525}\",\n  imgs_sent: 0,\n  imgs_received: 0,\n  friends: ['Guest@project-yellow-ghost.com'],\n}\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // For swiping screen\n      index: 0,\n      height: window.innerHeight,\n      width: window.innerWidth,\n      mobile: false,\n      // All for Camera\n\n      // All for Messages\n      logged_in: false,\n      user_friends_dict: [dummy_dict],\n      user_strangers_dict: [dummy_dict],\n      everyone_dict: [dummy_dict],\n      // Properties for every user on firebase\n      user_email: \"Guest\",\n      user_name: \"Guest\",\n      user_pic: default_pic,\n      streak_emoji: \"\\u{1F525}\",\n      imgs_sent: 0,\n      imgs_received: 0,\n      user_friends: [\"Guest@mail\"],\n    }\n    window.addEventListener(\"resize\", this.update);\n  }\n\n  set_device = () => {\n    if (this.state.width < this.state.height) {\n      this.setState({\n        mobile:true\n      })\n    } else {\n      this.setState({\n        mobile:false\n      })\n    }\n  }\n\n  update = () => {\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight\n    },\n    this.set_device()\n    );\n  };\n\n  // For Messages Component\n\n  login = () => {\n    auth.signInWithPopup(provider)\n    .then((result) => {\n      this.setState({\n          logged_in: true,\n          user_name: result.user.displayName,\n          user_email: result.user.email,\n          user_pic: result.user.photoURL,\n          user_friends: [result.user.email],\n      }, this.get_friends_list)\n    })\n    .catch((error) => console.log(error.message));\n  }\n  logout = () => {\n    firebase.auth().signOut()\n    this.setState({\n        logged_in: false,\n        streak_emoji: \"\\u{1F525}\",\n        user_name: \"Guest\",\n        user_email: \"Guest\",\n        user_friends_dict: [dummy_dict],\n        user_strangers_dict: [dummy_dict],\n        everyone_dict: [dummy_dict],\n        user_pic: \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\",\n    })\n  }\n  check_user = () => {\n    firebase.auth().onAuthStateChanged(function(user) {\n        if (user) {\n            this.setState({\n                user_name: user.displayName,\n                user_email: user.email,\n                user_pic: user.photoURL,\n                logged_in: true,\n            }, this.get_friends_list\n            )\n        }\n    }.bind(this))\n\t}\n\tget_friends_list = () => {\n\n    if (this.state.user_email != \"Guest\") {\n      const userdb = db.collection(\"users\").doc(this.state.user_email);\n      userdb.get().then((doc) => {\n          if (!doc.exists) {\n            // It is a new user and creates a new doc\n            db.collection(\"users\").doc(this.state.user_email).set({\n                email: this.state.user_email,\n                name: this.state.user_name,\n                photoURL: this.state.user_pic,\n                streak_emoji: this.state.streak_emoji,\n                imgs_sent: 0,\n                imgs_received: 0,\n                friends: [this.state.user_email],\n            })\n            .catch((error) => {\n                console.log(\"Couldn't write user to DB, error: \", error);\n            });\n            this.get_all_users()\n          } else {\n            // User has logged in before and has friends\n            this.setState({\n              user_friends: doc.data()[\"friends\"],\n              imgs_sent: doc.data()[\"imgs_sent\"],\n              imgs_received: doc.data()[\"imgs_received\"],\n              streak_emoji: doc.data()[\"streak_emoji\"],\n            }, this.get_all_users);\n          }\n\n      }).catch((error) => {\n          console.log(\"Error getting document:\", error);\n      });\n    }\n  }\n  get_all_users = () => {\n    var friends_meta = [];\n    var strangers_meta = [];\n    var everyone_meta = [];\n    var meta_idx = 0;\n    var strangers_idx = 0;\n    var everyone_idx = 0;\n    const sender = db.collection(\"users\");\n    sender.get().then((doc) => {\n        for (var i=0;i<doc.docs.length;i++) {\n            if (this.state.user_friends.includes(doc.docs[i].data()['email'])) {\n                friends_meta[meta_idx] = doc.docs[i].data()\n                meta_idx = meta_idx + 1;\n            } else {\n                strangers_meta[strangers_idx] = doc.docs[i].data()\n                strangers_idx = strangers_idx + 1;\n            }\n            everyone_meta[everyone_idx] = doc.docs[i].data()\n            everyone_idx = everyone_idx + 1;\n        }\n        this.setState({\n            user_friends_dict: friends_meta,\n            user_strangers_dict: strangers_meta,\n            everyone_dict: everyone_meta,\n        })\n    });\n  }\n  componentDidMount() {\n      this.check_user();\n      this.set_device();\n  }\n\n\n  render() {\n    return (\n      <BindKeyboardSwipeableViews enableMouseEvents style={Object.assign({width: this.state.width, height: this.state.height, position: 'absolute', top: '0%', left: '0%'})}>\n        <div style={Object.assign({backgroundColor: 'white', minHeight: '100vh', width: '100%'})}>\n          <Helmet>\n            <meta name=\"viewport\" content=\"height=device-height, width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"></meta>\n          </Helmet>\n          <Messages\n            user_email={this.state.user_email}\n            user_name={this.state.user_name}\n            user_pic={this.state.user_pic}\n            user_friends_dict={this.state.user_friends_dict}\n            user_strangers_dict={this.state.user_strangers_dict}\n            everyone_dict={this.state.everyone_dict}\n            logged_in={this.state.logged_in}\n            login={this.login.bind(this)}\n            logout={this.logout.bind(this)}\n            get_friends_list={this.get_friends_list.bind(this)}\n            get_all_users={this.get_all_users.bind(this)}\n            friends_list={this.state.user_friends}\n            streak_emoji={this.state.streak_emoji}\n          />\n        </div>\n        <div style={Object.assign({backgroundColor: 'Plum'})} >\n          {/* <Helmet>\n            <meta name=\"viewport\" content=\"height=device-height, width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=yes\"></meta>\n          </Helmet> */}\n          <Camera\n            height={this.state.height}\n            width={this.state.width}\n            user_name={this.state.user_name}\n            user_pic={this.state.user_pic}\n            login={this.login.bind(this)}\n            logout={this.logout.bind(this)}\n            mobile={this.state.mobile}\n          />\n        </div>\n      </BindKeyboardSwipeableViews>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Router, Route, Switch } from \"react-router\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}